;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char hienthi[] = "chung";

	.DSEG
;char lcd[20];
;char enthernet[100];
;char AC1[4];
;char IP[20] = "172.20.10.20";
;char sdt_sms[11] = "0942467684";
;char sdt_call[11] = "0942467684";
;int sdt_call1, sdt_call2, sdt_call3, sdt_call4, sdt_call5, sdt_call6, sdt_call7, ...
;int sdt_sms1, sdt_sms2, sdt_sms3, sdt_sms4, sdt_sms5, sdt_sms6, sdt_sms7, sdt_sm ...
;char tram[] = "Phong Lab TTBD";
;char sim[100];
;char sms[100];
;int i, hang = -1;
;int cot = 1;
;unsigned int DC1;
;unsigned int DC2;
;int dc11, dc12;
;int dht = 0;
;int dc21, dc22;
;int dc_low_1 = 0, dc_low_2 = 0, dc_high = 0;
;int dc_low_11 = 0, dc_low_21 = 0, dc_high1 = 0;
;unsigned char hour, min, sec, day, month, year, week_day;
;unsigned int h11 = 0, h12 = 0, hour1, m11 = 0, m12 = 0, min1, d1, d2, day1 = 0,  ...
;bit bit_phim = 1;
;bit bit_temp, bit_humi;
;bit bit_canh_bao = 0;
;bit bit_coi = 1;
;bit bit_ac1, bit_ac2;
;bit bit_as;
;bit bit_dc1_cb1 = 0, bit_dc1_cb2 = 0;
;bit bit_dc2_cb1 = 0, bit_dc2_cb2 = 0;
;bit bit_enthernet = 1;
;bit dht_bit = 1;
;int doam1, doam2, nhietdo1, nhietdo2;
;int doam11, doam22, nhietdo11, nhietdo22;
;int dht_nhiet_do, dht_do_am;
;int DHT22_getdata(int *tem, int *humi)
; 0000 005C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 005D 
; 0000 005E int buffer[5] = {0, 0, 0, 0, 0};
; 0000 005F int ii, i, checksum;
; 0000 0060 // request data
; 0000 0061 
; 0000 0062 DDRF = (1 << DDF6);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;	*tem -> Y+18
;	*humi -> Y+16
;	buffer -> Y+6
;	ii -> R16,R17
;	i -> R18,R19
;	checksum -> R20,R21
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0063 PORTF = (1 << PORTF6);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0064 delay_us(50);
;PCODE: $0000001A VOL: 0
; 0000 0065 PORTF = (0 << PORTF6);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0066 delay_ms(25);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0067 PORTF = (1 << PORTF6);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0068 DDRF = (0 << DDF6);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0069 // response
; 0000 006A dht = 0;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 006B while (PINF .6 == 1)
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 006C {
; 0000 006D if (dht > 40)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 006E {
; 0000 006F PORTB .6 = 1;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0070 dht_bit = 0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0071 break;
;PCODE: $00000032 VOL: 0
; 0000 0072 }
; 0000 0073 }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0074 while (PINF .6 == 0)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0075 if (dht_bit == 0)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0076 break;
;PCODE: $0000003D VOL: 0
; 0000 0077 dht = 0;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0078 while (PINF .6 == 1)
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0079 
; 0000 007A if (dht > 40)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007B {
; 0000 007C dht_bit = 0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 007D break;
;PCODE: $0000004D VOL: 0
; 0000 007E }
; 0000 007F while (PINF .6 == 0)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0080 if (dht_bit == 0)
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0081 break;
;PCODE: $00000058 VOL: 0
; 0000 0082 
; 0000 0083 // received data
; 0000 0084 if (dht_bit == 1)
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0085 {
; 0000 0086 for (i = 0; i < 5; i++)
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0087 {
; 0000 0088 for (ii = 0; ii < 8; ii++)
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0089 {
; 0000 008A while (PINF .6 == 0)
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 008B ; // doi data len 1
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 008C delay_us(50);
;PCODE: $00000077 VOL: 0
; 0000 008D if (PINF .6 == 1)
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 008E buffer[i] = (buffer[i] << 1) | (0x01);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 008F else
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0090 buffer[i] = (buffer[i] << 1);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0091 dht = 0;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0092 while (PINF .6 == 1)
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0093 
; 0000 0094 if (dht > 40)
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0095 break;
;PCODE: $000000A2 VOL: 0
; 0000 0096 // doi data xuong 0
; 0000 0097 }
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0098 }
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0099 // check sum
; 0000 009A checksum = buffer[0] + buffer[1] + buffer[2] + buffer[3];
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 009B // kiem tra
; 0000 009C if ((checksum) != buffer[4])
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 009D return 0;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 009E // lay du lieu
; 0000 009F *tem = buffer[2] * 256 + buffer[3];
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00A0 *humi = buffer[0] * 256 + buffer[1];
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A1 dht_bit = 1;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00A2 return 1;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00A3 }
; 0000 00A4 }
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;interrupt[EXT_INT7] void ext_int7_isr(void)
; 0000 00A7 {
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00A8 // Place your code here
; 0000 00A9 if ((bit_canh_bao == 1) & (bit_coi == 1))
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00AA {
; 0000 00AB bit_coi = 0;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00AC }
; 0000 00AD }
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;char getchar1(void)
; 0000 00B8 {
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00B9 unsigned char status;
; 0000 00BA char data;
; 0000 00BB while (1)
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $000000F0 VOL: 0
; 0000 00BC {
; 0000 00BD while (((status = UCSR1A) & RX_COMPLETE) == 0)
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00BE ;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00BF data = UDR1;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 00C0 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN)) == 0)
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 00C1 return data;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00C2 }
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00C3 }
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;void putchar1(char c)
; 0000 00C9 {
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00CA while ((UCSR1A & DATA_REGISTER_EMPTY) == 0)
;PCODE: $00000108 VOL: 0
;	c -> Y+0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00CB ;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00CC UDR1 = c;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00CD }
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;unsigned int read_adc(unsigned char adc_input)
; 0000 00D8 {
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00D9 ADMUX = adc_input | ADC_VREF_TYPE;
;PCODE: $00000116 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00DA // Delay needed for the stabilization of the ADC input voltage
; 0000 00DB delay_us(10);
;PCODE: $0000011A VOL: 0
; 0000 00DC // Start the AD conversion
; 0000 00DD ADCSRA |= (1 << ADSC);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00DE // Wait for the AD conversion to complete
; 0000 00DF while ((ADCSRA & (1 << ADIF)) == 0)
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00E0 ;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00E1 ADCSRA |= (1 << ADIF);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00E2 return ADCW;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00E3 }
;PCODE: $00000128 VOL: 0
;void puts1(unsigned char chuoi[])
; 0000 00E6 {
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00E7 for (i = 0; chuoi[i] != '\0'; i++)
;PCODE: $0000012B VOL: 0
;	chuoi -> Y+0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00E8 {
; 0000 00E9 while ((UCSR1A & DATA_REGISTER_EMPTY) == 0)
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00EA ;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00EB UDR1 = chuoi[i];
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00EC }
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00ED }
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;void khoitaosim()
; 0000 00F1 {
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00F2 lcd_gotoxy(0, 0);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00F3 lcd_puts("khoi tao sim...");
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00F4 delay_ms(50);
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00F5 puts("AT");
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00F6 putchar(13);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00F7 putchar(10);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00F8 delay_ms(200);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00F9 puts("ATE0");
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00FA putchar(13);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00FB putchar(10);
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00FC delay_ms(200);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00FD puts("AT+IPR=9600");
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00FE putchar(13);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00FF putchar(10);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0100 delay_ms(200);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0101 puts("AT&W");
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 0102 putchar(13);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0103 putchar(10);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0104 delay_ms(200); // LUU LAI CAC CAI DAT DA CAI
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0105 puts("ATX4");
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0106 putchar(13);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0107 putchar(10);
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0108 delay_ms(200); // LENH CHO CUOC GOI
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 0109 puts("AT&W");
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 010A putchar(13);
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 010B putchar(10);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 010C delay_ms(200);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 010D puts("AT+CSCS=\"GSM\"");
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 010E putchar(13);
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 010F putchar(10);
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0110 delay_ms(200);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0111 puts("AT+CMGF=1");
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0112 putchar(13);
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0113 putchar(10);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0114 delay_ms(200); // DUA TIN NHAN TRA VE VE DANG TEXT
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0115 puts("AT+CNMI=2,1,0,0,0");
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0116 putchar(13);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 0117 putchar(10);
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 0118 delay_ms(200);
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0119 puts("AT+CSAS");
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 011A putchar(13);
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 011B putchar(10);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 011C delay_ms(200); // luu cac cai dat
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 011D puts("AT+CNMI=2,2");
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 011E putchar(13);
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 011F putchar(10);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0120 delay_ms(300);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0121 lcd_clear();
;PCODE: $000001C8 VOL: 0
; 0000 0122 }
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0

	.DSEG
_0x42:
	.BYTE 0x71
;void call(char sdt[])
; 0000 0124 {

	.CSEG
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 0125 sprintf(sim, "ATD;%s%c%c", sdt, 13, 10);
;PCODE: $000001CD VOL: 0
;	sdt -> Y+0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0126 puts(sim);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0127 delay_ms(500);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0128 }
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;void send_sms(char sdt[], char text[])
; 0000 012A {
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 012B lcd_clear();
;PCODE: $000001E7 VOL: 0
;	sdt -> Y+2
;	text -> Y+0
;PCODE: $000001E8 VOL: 0
; 0000 012C delay_ms(500);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 012D sprintf(sim, "AT+CMGS=%c%s%c%c%c", '"', sdt, '"', 13, 10);
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 012E puts(sim);
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 012F delay_ms(500);
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0130 sprintf(sim, "%s %c%c", text, 13, 10);
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0131 puts(sim);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0132 delay_ms(200);
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0133 putchar(26);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0134 }
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
; 0000 0136 {
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0137 /* Wait for completion of previous write */
; 0000 0138 while (EECR & (1 << EEWE))
;PCODE: $0000021F VOL: 0
;	uiAddress -> Y+1
;	ucData -> Y+0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0139 ;
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 013A /* Set up address and data registers */
; 0000 013B EEAR = uiAddress;
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 013C EEDR = ucData;
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 013D /* Write logical one to EEMWE */
; 0000 013E EECR |= (1 << EEMWE);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 013F /* Start eeprom write by setting EEWE */
; 0000 0140 EECR |= (1 << EEWE);
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0141 }
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;unsigned char EEPROM_read(unsigned int uiAddress)
; 0000 0143 {
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0144 /* Wait for completion of previous write */
; 0000 0145 while (EECR & (1 << EEWE))
;PCODE: $00000233 VOL: 0
;	uiAddress -> Y+0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0146 ;
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 0147 /* Set up address register */
; 0000 0148 EEAR = uiAddress;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0149 /* Start eeprom read by writing EERE */
; 0000 014A EECR |= (1 << EERE);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 014B /* Return data from data register */
; 0000 014C return EEDR;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 014D }
;PCODE: $00000241 VOL: 0
;void trohang()
; 0000 014F {
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0150 for (i = 0; i < 4; i++)
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0151 if (i == hang)
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 0152 {
; 0000 0153 lcd_gotoxy(19, i);
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 0154 lcd_putchar('<');
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0155 }
; 0000 0156 else
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0157 {
; 0000 0158 lcd_gotoxy(19, i);
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 0159 lcd_putchar(' ');
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 015A }
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 015B }
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;void ct_hienthichung(void)
; 0000 018E {
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 018F delay_ms(1);
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 0190 rtc_get_date(&week_day, &day, &month, &year);
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0191 delay_ms(1);
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 0192 rtc_get_time(&hour, &min, &sec);
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0193 delay_ms(1);
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0194 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0195 delay_ms(1);
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0196 if (strcmp(hienthi, "chung") == 0)
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0197 {
; 0000 0198 doam11 = EEPROM_read(0);
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 0199 doam22 = EEPROM_read(1);
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 019A nhietdo11 = EEPROM_read(2);
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 019B nhietdo22 = EEPROM_read(3);
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 019C h11 = hour / 10;
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 019D h12 = hour % 10;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 019E m11 = min / 10;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 019F m12 = min % 10;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 01A0 d1 = day / 10;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 01A1 d2 = day % 10;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 01A2 m1 = month / 10;
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 01A3 m2 = month % 10;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 01A4 y1 = year / 10;
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 01A5 y2 = year % 10;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 01A6 if (doam11 > 99)
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 01A7 {
; 0000 01A8 doam11 = 40;
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01A9 EEPROM_write(0, doam11);
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 01AA }
; 0000 01AB if (doam22 > 99)
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 01AC {
; 0000 01AD doam22 = 70;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 01AE EEPROM_write(1, doam22);
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01AF }
; 0000 01B0 if (nhietdo11 > 99)
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01B1 {
; 0000 01B2 nhietdo11 = 20;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 01B3 EEPROM_write(2, nhietdo11);
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 01B4 }
; 0000 01B5 if (nhietdo22 > 99)
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 01B6 {
; 0000 01B7 nhietdo22 = 25;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 01B8 EEPROM_write(3, nhietdo22);
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 01B9 }
; 0000 01BA lcd_gotoxy(0, 0);
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 01BB sprintf(lcd, "DC1:%2d%c%dv   %1d%1d:%1d%1d:%1d%1d", dc11, ',', dc12, hour / 10,  ...
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
; 0000 01BC lcd_puts(lcd);
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0000 01BD delay_us(50);
;PCODE: $00000337 VOL: 0
; 0000 01BE lcd_gotoxy(0, 1);
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 01BF sprintf(lcd, "DC2:%2d%c%dv   %1d%1d/%1d%1d/%2d", dc21, ',', dc22, day / 10, day  ...
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
; 0000 01C0 lcd_puts(lcd);
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 01C1 delay_us(50);
;PCODE: $0000036A VOL: 0
; 0000 01C2 lcd_gotoxy(0, 2);
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 01C3 if (KTAC1 == 0)
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 01C4 {
; 0000 01C5 strcpy(AC1, "OFF");
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
; 0000 01C6 }
; 0000 01C7 else
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 01C8 {
; 0000 01C9 strcpy(AC1, "ON");
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 01CA }
;PCODE: $0000037E VOL: 0
; 0000 01CB // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 01CC sprintf(lcd, "Humi:%2d%c%d%%   AC1:%3s", dht_do_am / 10, ',', dht_do_am % 10, AC ...
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
; 0000 01CD lcd_puts(lcd);
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 01CE if (KTAC2 == 0)
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
; 0000 01CF {
; 0000 01D0 strcpy(AC1, "OFF");
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 01D1 }
; 0000 01D2 else
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 01D3 {
; 0000 01D4 strcpy(AC1, "ON");
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 01D5 }
;PCODE: $000003A8 VOL: 0
; 0000 01D6 delay_us(50);
;PCODE: $000003A9 VOL: 0
; 0000 01D7 lcd_gotoxy(0, 3);
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 01D8 sprintf(lcd, "Temp:%2d%c%d%cC  AC2:%3s", dht_nhiet_do / 10, ',', dht_nhiet_do %  ...
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
; 0000 01D9 lcd_puts(lcd);
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0000 01DA delay_us(50);
;PCODE: $000003CA VOL: 0
; 0000 01DB }
; 0000 01DC if (strcmp(hienthi, "Mode") == 0)
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 01DD {
; 0000 01DE dc_low_1 = EEPROM_read(31) * 10 + EEPROM_read(32);
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 01DF dc_low_2 = EEPROM_read(33) * 10 + EEPROM_read(34);
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 01E0 dc_high = EEPROM_read(35) * 10 + EEPROM_read(36);
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
; 0000 01E1 if ((dc_low_1 > 999) | (dc_low_2 > 999) | (dc_high > 999))
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 01E2 {
; 0000 01E3 dc_low_1 = 470;
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 01E4 dc_low_2 = 480;
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 01E5 dc_high = 585;
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 01E6 EEPROM_write(31, dc_low_1 / 10);
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 01E7 EEPROM_write(32, dc_low_1 % 10);
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 01E8 EEPROM_write(33, dc_low_2 / 10);
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 01E9 EEPROM_write(34, dc_low_2 % 10);
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 01EA EEPROM_write(35, dc_high / 10);
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 01EB EEPROM_write(36, dc_high % 10);
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
; 0000 01EC }
; 0000 01ED trohang();
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 01EE lcd_gotoxy(0, 0);
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
; 0000 01EF sprintf(lcd, "time:    %1d%1d:%1d%1d", h11, h12, m11, m12);
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 01F0 lcd_puts(lcd);
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 01F1 lcd_gotoxy(0, 1);
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 01F2 sprintf(lcd, "date:    %1d%1d/%1d%1d/%2d", d1, d2, m1, m2, y1 * 10 + y2);
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
; 0000 01F3 lcd_puts(lcd);
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 01F4 lcd_gotoxy(0, 2);
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 01F5 sprintf(lcd, "humi: %1d%1d to %1d%1d%%", doam11 / 10, doam11 % 10, doam22 / 10,  ...
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 01F6 lcd_puts(lcd);
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
; 0000 01F7 lcd_gotoxy(0, 3);
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 01F8 sprintf(lcd, "temp: %1d%1d to %1d%1d%cC", nhietdo11 / 10, nhietdo11 % 10, nhietd ...
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
; 0000 01F9 lcd_puts(lcd);
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
; 0000 01FA // hang 1
; 0000 01FB if (hang == 0)
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
; 0000 01FC {
; 0000 01FD 
; 0000 01FE switch (cot)
;PCODE: $000004C2 VOL: 0
; 0000 01FF {
; 0000 0200 case 1:
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
; 0000 0201 
; 0000 0202 lcd_gotoxy(9, 0);
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
; 0000 0203 delay_ms(200);
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 0204 lcd_putchar('_');
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
; 0000 0205 // phim up
; 0000 0206 
; 0000 0207 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
; 0000 0208 {
; 0000 0209 h11++;
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0000 020A if (h11 > 2)
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
; 0000 020B h11 = 0;
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
; 0000 020C bit_phim = 0;
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
; 0000 020D delay_ms(50);
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0000 020E }
; 0000 020F else
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0000 0210 {
; 0000 0211 bit_phim = 1;
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
; 0000 0212 delay_ms(25);
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
; 0000 0213 }
;PCODE: $000004F1 VOL: 0
; 0000 0214 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0000 0215 {
; 0000 0216 h11--;
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 0217 if (h11 == -1)
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 0218 h11 = 2;
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 0219 bit_phim = 0;
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
; 0000 021A delay_ms(50);
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
; 0000 021B }
; 0000 021C else
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
; 0000 021D {
; 0000 021E bit_phim = 1;
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
; 0000 021F delay_ms(25);
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 0220 }
;PCODE: $00000514 VOL: 0
; 0000 0221 break;
;PCODE: $00000515 VOL: 0
; 0000 0222 case 2:
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 0223 
; 0000 0224 lcd_gotoxy(10, 0);
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
; 0000 0225 delay_ms(200);
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0000 0226 lcd_putchar('_');
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
; 0000 0227 
; 0000 0228 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
; 0000 0229 {
; 0000 022A h12++;
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
; 0000 022B if (h12 > 9)
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0000 022C h12 = 0;
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
; 0000 022D if (h11 == 2)
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
; 0000 022E if (h12 > 4)
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
; 0000 022F h12 = 0;
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 0230 
; 0000 0231 bit_phim = 0;
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
; 0000 0232 delay_ms(50);
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 0233 }
; 0000 0234 else
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
; 0000 0235 {
; 0000 0236 bit_phim = 1;
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
; 0000 0237 delay_ms(25);
;PCODE: $0000054C VOL: 0
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
; 0000 0238 }
;PCODE: $0000054F VOL: 0
; 0000 0239 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
; 0000 023A {
; 0000 023B h12--;
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
; 0000 023C if (h11 == 2)
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
; 0000 023D if (h12 == -1)
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
; 0000 023E h12 = 4;
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 023F if (h12 == -1)
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
; 0000 0240 h12 = 9;
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
; 0000 0241 bit_phim = 0;
;PCODE: $0000056D VOL: 0
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
; 0000 0242 delay_ms(50);
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
; 0000 0243 }
; 0000 0244 else
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
; 0000 0245 {
; 0000 0246 bit_phim = 1;
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
; 0000 0247 delay_ms(25);
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
; 0000 0248 }
;PCODE: $0000057C VOL: 0
; 0000 0249 break;
;PCODE: $0000057D VOL: 0
; 0000 024A case 3:
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
; 0000 024B 
; 0000 024C lcd_gotoxy(12, 0);
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
; 0000 024D delay_ms(200);
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
; 0000 024E lcd_putchar('_');
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
; 0000 024F if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
; 0000 0250 {
; 0000 0251 m11++;
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
; 0000 0252 if (m11 > 5)
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0000 0253 m11 = 0;
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
; 0000 0254 
; 0000 0255 bit_phim = 0;
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
; 0000 0256 delay_ms(50);
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
; 0000 0257 }
; 0000 0258 else
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0000 0259 {
; 0000 025A bit_phim = 1;
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
; 0000 025B delay_ms(25);
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
; 0000 025C }
;PCODE: $000005AD VOL: 0
; 0000 025D if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
; 0000 025E {
; 0000 025F m11--;
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
; 0000 0260 if (m11 == -1)
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
; 0000 0261 m11 = 5;
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
; 0000 0262 bit_phim = 0;
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
; 0000 0263 delay_ms(50);
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
; 0000 0264 }
; 0000 0265 else
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0000 0266 {
; 0000 0267 bit_phim = 1;
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
; 0000 0268 delay_ms(25);
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
; 0000 0269 }
;PCODE: $000005D0 VOL: 0
; 0000 026A break;
;PCODE: $000005D1 VOL: 0
; 0000 026B case 4:
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0000 026C 
; 0000 026D lcd_gotoxy(13, 0);
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
; 0000 026E delay_ms(200);
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
; 0000 026F lcd_putchar('_');
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
; 0000 0270 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
; 0000 0271 {
; 0000 0272 m12++;
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
; 0000 0273 if (m12 > 9)
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
; 0000 0274 m12 = 0;
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
; 0000 0275 bit_phim = 0;
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
; 0000 0276 delay_ms(50);
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
; 0000 0277 }
; 0000 0278 else
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
; 0000 0279 {
; 0000 027A bit_phim = 1;
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
; 0000 027B delay_ms(25);
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
; 0000 027C }
;PCODE: $00000601 VOL: 0
; 0000 027D if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0000 027E {
; 0000 027F m12--;
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
; 0000 0280 if (m12 == -1)
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
; 0000 0281 m12 = 9;
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
; 0000 0282 bit_phim = 0;
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
; 0000 0283 delay_ms(50);
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
; 0000 0284 }
; 0000 0285 else
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
; 0000 0286 {
; 0000 0287 bit_phim = 1;
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0000 0288 delay_ms(50);
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 0289 }
;PCODE: $00000624 VOL: 0
; 0000 028A break;
;PCODE: $00000625 VOL: 0
; 0000 028B default:
;PCODE: $00000626 VOL: 0
; 0000 028C cot = 1;
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
; 0000 028D delay_ms(25);
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
;PCODE: $0000062B VOL: 0
; 0000 028E break;
;PCODE: $0000062C VOL: 0
; 0000 028F }
;PCODE: $0000062D VOL: 0
; 0000 0290 // luu
; 0000 0291 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
; 0000 0292 {
; 0000 0293 hour1 = h11 * 10 + h12;
;PCODE: $00000638 VOL: 0
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
; 0000 0294 min1 = m11 * 10 + m12;
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
; 0000 0295 if (hour1 > 24)
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
; 0000 0296 {
; 0000 0297 lcd_clear();
;PCODE: $00000647 VOL: 0
; 0000 0298 lcd_gotoxy(1, 1);
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
; 0000 0299 lcd_puts("!vui long nhap lai gio!");
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
; 0000 029A delay_ms(500);
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
; 0000 029B lcd_clear();
;PCODE: $00000651 VOL: 0
; 0000 029C }
; 0000 029D else
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
; 0000 029E {
; 0000 029F rtc_set_time(hour1, min1, 0);
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
; 0000 02A0 cot = 1;
;PCODE: $0000065A VOL: 0
;PCODE: $0000065B VOL: 0
; 0000 02A1 lcd_clear();
;PCODE: $0000065C VOL: 0
; 0000 02A2 lcd_gotoxy(2, 1);
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
; 0000 02A3 lcd_puts("luu thanh cong!");
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0000 02A4 delay_ms(500);
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
; 0000 02A5 lcd_clear();
;PCODE: $00000666 VOL: 0
; 0000 02A6 }
;PCODE: $00000667 VOL: 0
; 0000 02A7 bit_phim = 0;
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
; 0000 02A8 delay_ms(50);
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
; 0000 02A9 }
; 0000 02AA else
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
; 0000 02AB {
; 0000 02AC bit_phim = 1;
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
; 0000 02AD 
; 0000 02AE delay_ms(25);
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
; 0000 02AF }
;PCODE: $00000676 VOL: 0
; 0000 02B0 };
;PCODE: $00000677 VOL: 0
; 0000 02B1 // hang 2
; 0000 02B2 if (hang == 1)
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0000 02B3 {
; 0000 02B4 
; 0000 02B5 switch (cot)
;PCODE: $0000067B VOL: 0
; 0000 02B6 {
; 0000 02B7 case 1:
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
; 0000 02B8 
; 0000 02B9 lcd_gotoxy(9, 1);
;PCODE: $0000067F VOL: 0
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
; 0000 02BA delay_ms(200);
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
; 0000 02BB lcd_putchar('_');
;PCODE: $00000686 VOL: 0
;PCODE: $00000687 VOL: 0
; 0000 02BC // phim up
; 0000 02BD 
; 0000 02BE if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
;PCODE: $00000691 VOL: 0
; 0000 02BF {
; 0000 02C0 d1++;
;PCODE: $00000692 VOL: 0
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
; 0000 02C1 if (d1 > 3)
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
;PCODE: $00000698 VOL: 0
; 0000 02C2 d1 = 0;
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
; 0000 02C3 bit_phim = 0;
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
; 0000 02C4 delay_ms(50);
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
; 0000 02C5 }
; 0000 02C6 else
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
; 0000 02C7 {
; 0000 02C8 bit_phim = 1;
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
;PCODE: $000006A6 VOL: 0
; 0000 02C9 delay_ms(25);
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
; 0000 02CA }
;PCODE: $000006AA VOL: 0
; 0000 02CB if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
; 0000 02CC {
; 0000 02CD d1--;
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
; 0000 02CE if (d1 == -1)
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
; 0000 02CF d1 = 3;
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
; 0000 02D0 led_do = ~led_do;
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
; 0000 02D1 bit_phim = 0;
;PCODE: $000006C9 VOL: 0
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
; 0000 02D2 delay_ms(50);
;PCODE: $000006CC VOL: 0
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
; 0000 02D3 }
; 0000 02D4 else
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
; 0000 02D5 {
; 0000 02D6 bit_phim = 1;
;PCODE: $000006D1 VOL: 0
;PCODE: $000006D2 VOL: 0
;PCODE: $000006D3 VOL: 0
; 0000 02D7 delay_ms(25);
;PCODE: $000006D4 VOL: 0
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
; 0000 02D8 }
;PCODE: $000006D7 VOL: 0
; 0000 02D9 break;
;PCODE: $000006D8 VOL: 0
; 0000 02DA case 2:
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
; 0000 02DB 
; 0000 02DC lcd_gotoxy(10, 1);
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0000 02DD delay_ms(200);
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
; 0000 02DE lcd_putchar('_');
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
; 0000 02DF 
; 0000 02E0 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
;PCODE: $000006ED VOL: 0
;PCODE: $000006EE VOL: 0
;PCODE: $000006EF VOL: 0
; 0000 02E1 {
; 0000 02E2 d2++;
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
; 0000 02E3 if (d2 > 9)
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
; 0000 02E4 d2 = 0;
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
; 0000 02E5 if (d1 == 3)
;PCODE: $000006F9 VOL: 0
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
;PCODE: $000006FC VOL: 0
; 0000 02E6 if (d2 > 1)
;PCODE: $000006FD VOL: 0
;PCODE: $000006FE VOL: 0
;PCODE: $000006FF VOL: 0
; 0000 02E7 d2 = 0;
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
; 0000 02E8 
; 0000 02E9 bit_phim = 0;
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
; 0000 02EA delay_ms(50);
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
; 0000 02EB }
; 0000 02EC else
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
; 0000 02ED {
; 0000 02EE bit_phim = 1;
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
;PCODE: $0000070E VOL: 0
; 0000 02EF delay_ms(25);
;PCODE: $0000070F VOL: 0
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
; 0000 02F0 }
;PCODE: $00000712 VOL: 0
; 0000 02F1 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
; 0000 02F2 {
; 0000 02F3 d2--;
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
; 0000 02F4 if (d1 == 3)
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
;PCODE: $00000723 VOL: 0
; 0000 02F5 if (d2 == -1)
;PCODE: $00000724 VOL: 0
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
; 0000 02F6 d2 = 1;
;PCODE: $00000727 VOL: 0
;PCODE: $00000728 VOL: 0
; 0000 02F7 if (d2 == -1)
;PCODE: $00000729 VOL: 0
;PCODE: $0000072A VOL: 0
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
;PCODE: $0000072D VOL: 0
; 0000 02F8 d2 = 9;
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
; 0000 02F9 bit_phim = 0;
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
; 0000 02FA delay_ms(50);
;PCODE: $00000734 VOL: 0
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
; 0000 02FB }
; 0000 02FC else
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
; 0000 02FD {
; 0000 02FE bit_phim = 1;
;PCODE: $00000739 VOL: 0
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
; 0000 02FF delay_ms(25);
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
; 0000 0300 }
;PCODE: $0000073F VOL: 0
; 0000 0301 break;
;PCODE: $00000740 VOL: 0
; 0000 0302 case 3:
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
;PCODE: $00000744 VOL: 0
; 0000 0303 
; 0000 0304 lcd_gotoxy(12, 1);
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
; 0000 0305 delay_ms(200);
;PCODE: $00000749 VOL: 0
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
; 0000 0306 lcd_putchar('_');
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
; 0000 0307 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000074E VOL: 0
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
; 0000 0308 {
; 0000 0309 m1++;
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
; 0000 030A if (m1 > 1)
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;PCODE: $0000075E VOL: 0
; 0000 030B m1 = 0;
;PCODE: $0000075F VOL: 0
;PCODE: $00000760 VOL: 0
; 0000 030C bit_phim = 0;
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
; 0000 030D delay_ms(50);
;PCODE: $00000765 VOL: 0
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
; 0000 030E }
; 0000 030F else
;PCODE: $00000768 VOL: 0
;PCODE: $00000769 VOL: 0
; 0000 0310 {
; 0000 0311 bit_phim = 1;
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
;PCODE: $0000076C VOL: 0
; 0000 0312 delay_ms(25);
;PCODE: $0000076D VOL: 0
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
; 0000 0313 }
;PCODE: $00000770 VOL: 0
; 0000 0314 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000771 VOL: 0
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
;PCODE: $00000777 VOL: 0
;PCODE: $00000778 VOL: 0
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
; 0000 0315 {
; 0000 0316 m1--;
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
;PCODE: $0000077E VOL: 0
; 0000 0317 if (m1 == -1)
;PCODE: $0000077F VOL: 0
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
; 0000 0318 m1 = 1;
;PCODE: $00000782 VOL: 0
;PCODE: $00000783 VOL: 0
; 0000 0319 bit_phim = 0;
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
; 0000 031A delay_ms(50);
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
; 0000 031B }
; 0000 031C else
;PCODE: $0000078B VOL: 0
;PCODE: $0000078C VOL: 0
; 0000 031D {
; 0000 031E bit_phim = 1;
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
; 0000 031F delay_ms(25);
;PCODE: $00000790 VOL: 0
;PCODE: $00000791 VOL: 0
;PCODE: $00000792 VOL: 0
; 0000 0320 }
;PCODE: $00000793 VOL: 0
; 0000 0321 break;
;PCODE: $00000794 VOL: 0
; 0000 0322 case 4:
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
;PCODE: $00000798 VOL: 0
; 0000 0323 
; 0000 0324 lcd_gotoxy(13, 1);
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
; 0000 0325 delay_ms(200);
;PCODE: $0000079D VOL: 0
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
; 0000 0326 lcd_putchar('_');
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
; 0000 0327 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000007A2 VOL: 0
;PCODE: $000007A3 VOL: 0
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
; 0000 0328 {
; 0000 0329 m2++;
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
;PCODE: $000007AE VOL: 0
;PCODE: $000007AF VOL: 0
; 0000 032A if (m1 == 1)
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
; 0000 032B {
; 0000 032C if (m2 > 2)
;PCODE: $000007B3 VOL: 0
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
; 0000 032D m2 = 0;
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
; 0000 032E }
;PCODE: $000007B8 VOL: 0
; 0000 032F if (m2 > 9)
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
; 0000 0330 m2 = 0;
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
; 0000 0331 bit_phim = 0;
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
; 0000 0332 delay_ms(50);
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
; 0000 0333 }
; 0000 0334 else
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
; 0000 0335 {
; 0000 0336 bit_phim = 1;
;PCODE: $000007C8 VOL: 0
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
; 0000 0337 delay_ms(25);
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
; 0000 0338 }
;PCODE: $000007CE VOL: 0
; 0000 0339 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;PCODE: $000007D1 VOL: 0
;PCODE: $000007D2 VOL: 0
;PCODE: $000007D3 VOL: 0
;PCODE: $000007D4 VOL: 0
;PCODE: $000007D5 VOL: 0
;PCODE: $000007D6 VOL: 0
;PCODE: $000007D7 VOL: 0
;PCODE: $000007D8 VOL: 0
; 0000 033A {
; 0000 033B m2--;
;PCODE: $000007D9 VOL: 0
;PCODE: $000007DA VOL: 0
;PCODE: $000007DB VOL: 0
;PCODE: $000007DC VOL: 0
; 0000 033C if (m1 == 1)
;PCODE: $000007DD VOL: 0
;PCODE: $000007DE VOL: 0
;PCODE: $000007DF VOL: 0
; 0000 033D if (m2 == -1)
;PCODE: $000007E0 VOL: 0
;PCODE: $000007E1 VOL: 0
;PCODE: $000007E2 VOL: 0
; 0000 033E m2 = 2;
;PCODE: $000007E3 VOL: 0
;PCODE: $000007E4 VOL: 0
; 0000 033F if (m2 == -1)
;PCODE: $000007E5 VOL: 0
;PCODE: $000007E6 VOL: 0
;PCODE: $000007E7 VOL: 0
;PCODE: $000007E8 VOL: 0
;PCODE: $000007E9 VOL: 0
; 0000 0340 m2 = 9;
;PCODE: $000007EA VOL: 0
;PCODE: $000007EB VOL: 0
; 0000 0341 bit_phim = 0;
;PCODE: $000007EC VOL: 0
;PCODE: $000007ED VOL: 0
;PCODE: $000007EE VOL: 0
;PCODE: $000007EF VOL: 0
; 0000 0342 delay_ms(50);
;PCODE: $000007F0 VOL: 0
;PCODE: $000007F1 VOL: 0
;PCODE: $000007F2 VOL: 0
; 0000 0343 }
; 0000 0344 else
;PCODE: $000007F3 VOL: 0
;PCODE: $000007F4 VOL: 0
; 0000 0345 {
; 0000 0346 bit_phim = 1;
;PCODE: $000007F5 VOL: 0
;PCODE: $000007F6 VOL: 0
;PCODE: $000007F7 VOL: 0
; 0000 0347 delay_ms(25);
;PCODE: $000007F8 VOL: 0
;PCODE: $000007F9 VOL: 0
;PCODE: $000007FA VOL: 0
; 0000 0348 }
;PCODE: $000007FB VOL: 0
; 0000 0349 break;
;PCODE: $000007FC VOL: 0
; 0000 034A case 5:
;PCODE: $000007FD VOL: 0
;PCODE: $000007FE VOL: 0
;PCODE: $000007FF VOL: 0
;PCODE: $00000800 VOL: 0
; 0000 034B 
; 0000 034C lcd_gotoxy(15, 1);
;PCODE: $00000801 VOL: 0
;PCODE: $00000802 VOL: 0
;PCODE: $00000803 VOL: 0
;PCODE: $00000804 VOL: 0
; 0000 034D delay_ms(200);
;PCODE: $00000805 VOL: 0
;PCODE: $00000806 VOL: 0
;PCODE: $00000807 VOL: 0
; 0000 034E lcd_putchar('_');
;PCODE: $00000808 VOL: 0
;PCODE: $00000809 VOL: 0
; 0000 034F if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000080A VOL: 0
;PCODE: $0000080B VOL: 0
;PCODE: $0000080C VOL: 0
;PCODE: $0000080D VOL: 0
;PCODE: $0000080E VOL: 0
;PCODE: $0000080F VOL: 0
;PCODE: $00000810 VOL: 0
;PCODE: $00000811 VOL: 0
;PCODE: $00000812 VOL: 0
;PCODE: $00000813 VOL: 0
; 0000 0350 {
; 0000 0351 y1++;
;PCODE: $00000814 VOL: 0
;PCODE: $00000815 VOL: 0
;PCODE: $00000816 VOL: 0
;PCODE: $00000817 VOL: 0
; 0000 0352 if (y1 > 9)
;PCODE: $00000818 VOL: 0
;PCODE: $00000819 VOL: 0
;PCODE: $0000081A VOL: 0
; 0000 0353 y1 = 0;
;PCODE: $0000081B VOL: 0
;PCODE: $0000081C VOL: 0
; 0000 0354 bit_phim = 0;
;PCODE: $0000081D VOL: 0
;PCODE: $0000081E VOL: 0
;PCODE: $0000081F VOL: 0
;PCODE: $00000820 VOL: 0
; 0000 0355 delay_ms(50);
;PCODE: $00000821 VOL: 0
;PCODE: $00000822 VOL: 0
;PCODE: $00000823 VOL: 0
; 0000 0356 }
; 0000 0357 else
;PCODE: $00000824 VOL: 0
;PCODE: $00000825 VOL: 0
; 0000 0358 {
; 0000 0359 bit_phim = 1;
;PCODE: $00000826 VOL: 0
;PCODE: $00000827 VOL: 0
;PCODE: $00000828 VOL: 0
; 0000 035A delay_ms(25);
;PCODE: $00000829 VOL: 0
;PCODE: $0000082A VOL: 0
;PCODE: $0000082B VOL: 0
; 0000 035B }
;PCODE: $0000082C VOL: 0
; 0000 035C if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $0000082D VOL: 0
;PCODE: $0000082E VOL: 0
;PCODE: $0000082F VOL: 0
;PCODE: $00000830 VOL: 0
;PCODE: $00000831 VOL: 0
;PCODE: $00000832 VOL: 0
;PCODE: $00000833 VOL: 0
;PCODE: $00000834 VOL: 0
;PCODE: $00000835 VOL: 0
;PCODE: $00000836 VOL: 0
; 0000 035D {
; 0000 035E y1--;
;PCODE: $00000837 VOL: 0
;PCODE: $00000838 VOL: 0
;PCODE: $00000839 VOL: 0
;PCODE: $0000083A VOL: 0
; 0000 035F if (y1 == -1)
;PCODE: $0000083B VOL: 0
;PCODE: $0000083C VOL: 0
;PCODE: $0000083D VOL: 0
; 0000 0360 y1 = 9;
;PCODE: $0000083E VOL: 0
;PCODE: $0000083F VOL: 0
; 0000 0361 bit_phim = 0;
;PCODE: $00000840 VOL: 0
;PCODE: $00000841 VOL: 0
;PCODE: $00000842 VOL: 0
;PCODE: $00000843 VOL: 0
; 0000 0362 delay_ms(50);
;PCODE: $00000844 VOL: 0
;PCODE: $00000845 VOL: 0
;PCODE: $00000846 VOL: 0
; 0000 0363 }
; 0000 0364 else
;PCODE: $00000847 VOL: 0
;PCODE: $00000848 VOL: 0
; 0000 0365 {
; 0000 0366 bit_phim = 1;
;PCODE: $00000849 VOL: 0
;PCODE: $0000084A VOL: 0
;PCODE: $0000084B VOL: 0
; 0000 0367 delay_ms(25);
;PCODE: $0000084C VOL: 0
;PCODE: $0000084D VOL: 0
;PCODE: $0000084E VOL: 0
; 0000 0368 }
;PCODE: $0000084F VOL: 0
; 0000 0369 break;
;PCODE: $00000850 VOL: 0
; 0000 036A case 6:
;PCODE: $00000851 VOL: 0
;PCODE: $00000852 VOL: 0
;PCODE: $00000853 VOL: 0
;PCODE: $00000854 VOL: 0
; 0000 036B 
; 0000 036C lcd_gotoxy(16, 1);
;PCODE: $00000855 VOL: 0
;PCODE: $00000856 VOL: 0
;PCODE: $00000857 VOL: 0
;PCODE: $00000858 VOL: 0
; 0000 036D delay_ms(200);
;PCODE: $00000859 VOL: 0
;PCODE: $0000085A VOL: 0
;PCODE: $0000085B VOL: 0
; 0000 036E lcd_putchar('_');
;PCODE: $0000085C VOL: 0
;PCODE: $0000085D VOL: 0
; 0000 036F if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000085E VOL: 0
;PCODE: $0000085F VOL: 0
;PCODE: $00000860 VOL: 0
;PCODE: $00000861 VOL: 0
;PCODE: $00000862 VOL: 0
;PCODE: $00000863 VOL: 0
;PCODE: $00000864 VOL: 0
;PCODE: $00000865 VOL: 0
;PCODE: $00000866 VOL: 0
;PCODE: $00000867 VOL: 0
; 0000 0370 {
; 0000 0371 y2++;
;PCODE: $00000868 VOL: 0
;PCODE: $00000869 VOL: 0
;PCODE: $0000086A VOL: 0
;PCODE: $0000086B VOL: 0
; 0000 0372 if (y2 > 9)
;PCODE: $0000086C VOL: 0
;PCODE: $0000086D VOL: 0
;PCODE: $0000086E VOL: 0
; 0000 0373 y2 = 0;
;PCODE: $0000086F VOL: 0
;PCODE: $00000870 VOL: 0
; 0000 0374 bit_phim = 0;
;PCODE: $00000871 VOL: 0
;PCODE: $00000872 VOL: 0
;PCODE: $00000873 VOL: 0
;PCODE: $00000874 VOL: 0
; 0000 0375 delay_ms(50);
;PCODE: $00000875 VOL: 0
;PCODE: $00000876 VOL: 0
;PCODE: $00000877 VOL: 0
; 0000 0376 }
; 0000 0377 else
;PCODE: $00000878 VOL: 0
;PCODE: $00000879 VOL: 0
; 0000 0378 {
; 0000 0379 bit_phim = 1;
;PCODE: $0000087A VOL: 0
;PCODE: $0000087B VOL: 0
;PCODE: $0000087C VOL: 0
; 0000 037A delay_ms(25);
;PCODE: $0000087D VOL: 0
;PCODE: $0000087E VOL: 0
;PCODE: $0000087F VOL: 0
; 0000 037B }
;PCODE: $00000880 VOL: 0
; 0000 037C if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000881 VOL: 0
;PCODE: $00000882 VOL: 0
;PCODE: $00000883 VOL: 0
;PCODE: $00000884 VOL: 0
;PCODE: $00000885 VOL: 0
;PCODE: $00000886 VOL: 0
;PCODE: $00000887 VOL: 0
;PCODE: $00000888 VOL: 0
;PCODE: $00000889 VOL: 0
;PCODE: $0000088A VOL: 0
; 0000 037D {
; 0000 037E y2--;
;PCODE: $0000088B VOL: 0
;PCODE: $0000088C VOL: 0
;PCODE: $0000088D VOL: 0
;PCODE: $0000088E VOL: 0
; 0000 037F if (y2 == -1)
;PCODE: $0000088F VOL: 0
;PCODE: $00000890 VOL: 0
;PCODE: $00000891 VOL: 0
; 0000 0380 y2 = 9;
;PCODE: $00000892 VOL: 0
;PCODE: $00000893 VOL: 0
; 0000 0381 bit_phim = 0;
;PCODE: $00000894 VOL: 0
;PCODE: $00000895 VOL: 0
;PCODE: $00000896 VOL: 0
;PCODE: $00000897 VOL: 0
; 0000 0382 delay_ms(50);
;PCODE: $00000898 VOL: 0
;PCODE: $00000899 VOL: 0
;PCODE: $0000089A VOL: 0
; 0000 0383 }
; 0000 0384 else
;PCODE: $0000089B VOL: 0
;PCODE: $0000089C VOL: 0
; 0000 0385 {
; 0000 0386 bit_phim = 1;
;PCODE: $0000089D VOL: 0
;PCODE: $0000089E VOL: 0
;PCODE: $0000089F VOL: 0
; 0000 0387 delay_ms(25);
;PCODE: $000008A0 VOL: 0
;PCODE: $000008A1 VOL: 0
;PCODE: $000008A2 VOL: 0
; 0000 0388 }
;PCODE: $000008A3 VOL: 0
; 0000 0389 break;
;PCODE: $000008A4 VOL: 0
; 0000 038A default:
;PCODE: $000008A5 VOL: 0
; 0000 038B cot = 1;
;PCODE: $000008A6 VOL: 0
;PCODE: $000008A7 VOL: 0
; 0000 038C break;
;PCODE: $000008A8 VOL: 0
; 0000 038D }
;PCODE: $000008A9 VOL: 0
; 0000 038E // luu
; 0000 038F if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $000008AA VOL: 0
;PCODE: $000008AB VOL: 0
;PCODE: $000008AC VOL: 0
;PCODE: $000008AD VOL: 0
;PCODE: $000008AE VOL: 0
;PCODE: $000008AF VOL: 0
;PCODE: $000008B0 VOL: 0
;PCODE: $000008B1 VOL: 0
;PCODE: $000008B2 VOL: 0
;PCODE: $000008B3 VOL: 0
; 0000 0390 {
; 0000 0391 day1 = d1 * 10 + d2;
;PCODE: $000008B4 VOL: 0
;PCODE: $000008B5 VOL: 0
;PCODE: $000008B6 VOL: 0
;PCODE: $000008B7 VOL: 0
;PCODE: $000008B8 VOL: 0
;PCODE: $000008B9 VOL: 0
; 0000 0392 month1 = m1 * 10 + m2;
;PCODE: $000008BA VOL: 0
;PCODE: $000008BB VOL: 0
;PCODE: $000008BC VOL: 0
;PCODE: $000008BD VOL: 0
;PCODE: $000008BE VOL: 0
;PCODE: $000008BF VOL: 0
; 0000 0393 year1 = y1 * 10 + y2;
;PCODE: $000008C0 VOL: 0
;PCODE: $000008C1 VOL: 0
;PCODE: $000008C2 VOL: 0
;PCODE: $000008C3 VOL: 0
;PCODE: $000008C4 VOL: 0
;PCODE: $000008C5 VOL: 0
; 0000 0394 if ((day1 > 31) | (month1 > 12) | (day1 == 0) | (month1 == 0))
;PCODE: $000008C6 VOL: 0
;PCODE: $000008C7 VOL: 0
;PCODE: $000008C8 VOL: 0
;PCODE: $000008C9 VOL: 0
;PCODE: $000008CA VOL: 0
;PCODE: $000008CB VOL: 0
;PCODE: $000008CC VOL: 0
;PCODE: $000008CD VOL: 0
;PCODE: $000008CE VOL: 0
;PCODE: $000008CF VOL: 0
;PCODE: $000008D0 VOL: 0
;PCODE: $000008D1 VOL: 0
;PCODE: $000008D2 VOL: 0
;PCODE: $000008D3 VOL: 0
;PCODE: $000008D4 VOL: 0
;PCODE: $000008D5 VOL: 0
;PCODE: $000008D6 VOL: 0
;PCODE: $000008D7 VOL: 0
;PCODE: $000008D8 VOL: 0
; 0000 0395 {
; 0000 0396 lcd_clear();
;PCODE: $000008D9 VOL: 0
; 0000 0397 lcd_gotoxy(1, 1);
;PCODE: $000008DA VOL: 0
;PCODE: $000008DB VOL: 0
;PCODE: $000008DC VOL: 0
;PCODE: $000008DD VOL: 0
; 0000 0398 lcd_puts("nhap lai ngay thang!");
;PCODE: $000008DE VOL: 0
;PCODE: $000008DF VOL: 0
;PCODE: $000008E0 VOL: 0
; 0000 0399 delay_ms(500);
;PCODE: $000008E1 VOL: 0
;PCODE: $000008E2 VOL: 0
; 0000 039A lcd_clear();
;PCODE: $000008E3 VOL: 0
; 0000 039B }
; 0000 039C else
;PCODE: $000008E4 VOL: 0
;PCODE: $000008E5 VOL: 0
; 0000 039D {
; 0000 039E rtc_set_date(2, day1, month1, year1);
;PCODE: $000008E6 VOL: 0
;PCODE: $000008E7 VOL: 0
;PCODE: $000008E8 VOL: 0
;PCODE: $000008E9 VOL: 0
;PCODE: $000008EA VOL: 0
;PCODE: $000008EB VOL: 0
;PCODE: $000008EC VOL: 0
;PCODE: $000008ED VOL: 0
; 0000 039F cot = 1;
;PCODE: $000008EE VOL: 0
;PCODE: $000008EF VOL: 0
; 0000 03A0 lcd_clear();
;PCODE: $000008F0 VOL: 0
; 0000 03A1 lcd_gotoxy(2, 1);
;PCODE: $000008F1 VOL: 0
;PCODE: $000008F2 VOL: 0
;PCODE: $000008F3 VOL: 0
;PCODE: $000008F4 VOL: 0
; 0000 03A2 lcd_puts("luu thanh cong!");
;PCODE: $000008F5 VOL: 0
;PCODE: $000008F6 VOL: 0
;PCODE: $000008F7 VOL: 0
; 0000 03A3 delay_ms(500);
;PCODE: $000008F8 VOL: 0
;PCODE: $000008F9 VOL: 0
; 0000 03A4 lcd_clear();
;PCODE: $000008FA VOL: 0
; 0000 03A5 }
;PCODE: $000008FB VOL: 0
; 0000 03A6 bit_phim = 0;
;PCODE: $000008FC VOL: 0
;PCODE: $000008FD VOL: 0
;PCODE: $000008FE VOL: 0
; 0000 03A7 delay_ms(50);
;PCODE: $000008FF VOL: 0
;PCODE: $00000900 VOL: 0
;PCODE: $00000901 VOL: 0
; 0000 03A8 }
; 0000 03A9 else
;PCODE: $00000902 VOL: 0
;PCODE: $00000903 VOL: 0
; 0000 03AA {
; 0000 03AB bit_phim = 1;
;PCODE: $00000904 VOL: 0
;PCODE: $00000905 VOL: 0
;PCODE: $00000906 VOL: 0
; 0000 03AC delay_ms(25);
;PCODE: $00000907 VOL: 0
;PCODE: $00000908 VOL: 0
;PCODE: $00000909 VOL: 0
; 0000 03AD }
;PCODE: $0000090A VOL: 0
; 0000 03AE };
;PCODE: $0000090B VOL: 0
; 0000 03AF // hang 3
; 0000 03B0 if (hang == 2)
;PCODE: $0000090C VOL: 0
;PCODE: $0000090D VOL: 0
;PCODE: $0000090E VOL: 0
; 0000 03B1 {
; 0000 03B2 
; 0000 03B3 switch (cot)
;PCODE: $0000090F VOL: 0
; 0000 03B4 {
; 0000 03B5 case 1:
;PCODE: $00000910 VOL: 0
;PCODE: $00000911 VOL: 0
;PCODE: $00000912 VOL: 0
; 0000 03B6 
; 0000 03B7 lcd_gotoxy(6, 2);
;PCODE: $00000913 VOL: 0
;PCODE: $00000914 VOL: 0
;PCODE: $00000915 VOL: 0
;PCODE: $00000916 VOL: 0
; 0000 03B8 delay_ms(200);
;PCODE: $00000917 VOL: 0
;PCODE: $00000918 VOL: 0
;PCODE: $00000919 VOL: 0
; 0000 03B9 lcd_putchar('_');
;PCODE: $0000091A VOL: 0
;PCODE: $0000091B VOL: 0
; 0000 03BA if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000091C VOL: 0
;PCODE: $0000091D VOL: 0
;PCODE: $0000091E VOL: 0
;PCODE: $0000091F VOL: 0
;PCODE: $00000920 VOL: 0
;PCODE: $00000921 VOL: 0
;PCODE: $00000922 VOL: 0
;PCODE: $00000923 VOL: 0
;PCODE: $00000924 VOL: 0
;PCODE: $00000925 VOL: 0
; 0000 03BB {
; 0000 03BC doam11 = doam11 + 10;
;PCODE: $00000926 VOL: 0
;PCODE: $00000927 VOL: 0
;PCODE: $00000928 VOL: 0
; 0000 03BD if (doam11 > 99)
;PCODE: $00000929 VOL: 0
;PCODE: $0000092A VOL: 0
;PCODE: $0000092B VOL: 0
; 0000 03BE doam11 = doam11 - 100;
;PCODE: $0000092C VOL: 0
;PCODE: $0000092D VOL: 0
;PCODE: $0000092E VOL: 0
; 0000 03BF bit_phim = 0;
;PCODE: $0000092F VOL: 0
;PCODE: $00000930 VOL: 0
;PCODE: $00000931 VOL: 0
;PCODE: $00000932 VOL: 0
; 0000 03C0 delay_ms(50);
;PCODE: $00000933 VOL: 0
;PCODE: $00000934 VOL: 0
;PCODE: $00000935 VOL: 0
; 0000 03C1 }
; 0000 03C2 else
;PCODE: $00000936 VOL: 0
;PCODE: $00000937 VOL: 0
; 0000 03C3 {
; 0000 03C4 bit_phim = 1;
;PCODE: $00000938 VOL: 0
;PCODE: $00000939 VOL: 0
;PCODE: $0000093A VOL: 0
; 0000 03C5 delay_ms(25);
;PCODE: $0000093B VOL: 0
;PCODE: $0000093C VOL: 0
;PCODE: $0000093D VOL: 0
; 0000 03C6 }
;PCODE: $0000093E VOL: 0
; 0000 03C7 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $0000093F VOL: 0
;PCODE: $00000940 VOL: 0
;PCODE: $00000941 VOL: 0
;PCODE: $00000942 VOL: 0
;PCODE: $00000943 VOL: 0
;PCODE: $00000944 VOL: 0
;PCODE: $00000945 VOL: 0
;PCODE: $00000946 VOL: 0
;PCODE: $00000947 VOL: 0
;PCODE: $00000948 VOL: 0
; 0000 03C8 {
; 0000 03C9 doam11 = doam11 - 10;
;PCODE: $00000949 VOL: 0
;PCODE: $0000094A VOL: 0
;PCODE: $0000094B VOL: 0
; 0000 03CA if (doam11 < 0)
;PCODE: $0000094C VOL: 0
;PCODE: $0000094D VOL: 0
;PCODE: $0000094E VOL: 0
; 0000 03CB doam11 = doam11 + 100;
;PCODE: $0000094F VOL: 0
;PCODE: $00000950 VOL: 0
;PCODE: $00000951 VOL: 0
; 0000 03CC bit_phim = 0;
;PCODE: $00000952 VOL: 0
;PCODE: $00000953 VOL: 0
;PCODE: $00000954 VOL: 0
;PCODE: $00000955 VOL: 0
; 0000 03CD delay_ms(50);
;PCODE: $00000956 VOL: 0
;PCODE: $00000957 VOL: 0
;PCODE: $00000958 VOL: 0
; 0000 03CE }
; 0000 03CF else
;PCODE: $00000959 VOL: 0
;PCODE: $0000095A VOL: 0
; 0000 03D0 {
; 0000 03D1 bit_phim = 1;
;PCODE: $0000095B VOL: 0
;PCODE: $0000095C VOL: 0
;PCODE: $0000095D VOL: 0
; 0000 03D2 delay_ms(25);
;PCODE: $0000095E VOL: 0
;PCODE: $0000095F VOL: 0
;PCODE: $00000960 VOL: 0
; 0000 03D3 }
;PCODE: $00000961 VOL: 0
; 0000 03D4 break;
;PCODE: $00000962 VOL: 0
; 0000 03D5 case 2:
;PCODE: $00000963 VOL: 0
;PCODE: $00000964 VOL: 0
;PCODE: $00000965 VOL: 0
;PCODE: $00000966 VOL: 0
; 0000 03D6 lcd_gotoxy(7, 2);
;PCODE: $00000967 VOL: 0
;PCODE: $00000968 VOL: 0
;PCODE: $00000969 VOL: 0
;PCODE: $0000096A VOL: 0
; 0000 03D7 delay_ms(200);
;PCODE: $0000096B VOL: 0
;PCODE: $0000096C VOL: 0
;PCODE: $0000096D VOL: 0
; 0000 03D8 lcd_putchar('_');
;PCODE: $0000096E VOL: 0
;PCODE: $0000096F VOL: 0
; 0000 03D9 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000970 VOL: 0
;PCODE: $00000971 VOL: 0
;PCODE: $00000972 VOL: 0
;PCODE: $00000973 VOL: 0
;PCODE: $00000974 VOL: 0
;PCODE: $00000975 VOL: 0
;PCODE: $00000976 VOL: 0
;PCODE: $00000977 VOL: 0
;PCODE: $00000978 VOL: 0
;PCODE: $00000979 VOL: 0
; 0000 03DA {
; 0000 03DB doam11++;
;PCODE: $0000097A VOL: 0
;PCODE: $0000097B VOL: 0
;PCODE: $0000097C VOL: 0
;PCODE: $0000097D VOL: 0
; 0000 03DC if ((doam11 - 1) % 10 == 9)
;PCODE: $0000097E VOL: 0
;PCODE: $0000097F VOL: 0
;PCODE: $00000980 VOL: 0
;PCODE: $00000981 VOL: 0
;PCODE: $00000982 VOL: 0
;PCODE: $00000983 VOL: 0
; 0000 03DD doam11 = doam11 - 10;
;PCODE: $00000984 VOL: 0
;PCODE: $00000985 VOL: 0
;PCODE: $00000986 VOL: 0
; 0000 03DE bit_phim = 0;
;PCODE: $00000987 VOL: 0
;PCODE: $00000988 VOL: 0
;PCODE: $00000989 VOL: 0
;PCODE: $0000098A VOL: 0
; 0000 03DF delay_ms(50);
;PCODE: $0000098B VOL: 0
;PCODE: $0000098C VOL: 0
;PCODE: $0000098D VOL: 0
; 0000 03E0 }
; 0000 03E1 else
;PCODE: $0000098E VOL: 0
;PCODE: $0000098F VOL: 0
; 0000 03E2 {
; 0000 03E3 bit_phim = 1;
;PCODE: $00000990 VOL: 0
;PCODE: $00000991 VOL: 0
;PCODE: $00000992 VOL: 0
; 0000 03E4 delay_ms(25);
;PCODE: $00000993 VOL: 0
;PCODE: $00000994 VOL: 0
;PCODE: $00000995 VOL: 0
; 0000 03E5 }
;PCODE: $00000996 VOL: 0
; 0000 03E6 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000997 VOL: 0
;PCODE: $00000998 VOL: 0
;PCODE: $00000999 VOL: 0
;PCODE: $0000099A VOL: 0
;PCODE: $0000099B VOL: 0
;PCODE: $0000099C VOL: 0
;PCODE: $0000099D VOL: 0
;PCODE: $0000099E VOL: 0
;PCODE: $0000099F VOL: 0
;PCODE: $000009A0 VOL: 0
; 0000 03E7 {
; 0000 03E8 doam11--;
;PCODE: $000009A1 VOL: 0
;PCODE: $000009A2 VOL: 0
;PCODE: $000009A3 VOL: 0
;PCODE: $000009A4 VOL: 0
; 0000 03E9 if ((doam11 + 1) % 10 == 0)
;PCODE: $000009A5 VOL: 0
;PCODE: $000009A6 VOL: 0
;PCODE: $000009A7 VOL: 0
;PCODE: $000009A8 VOL: 0
;PCODE: $000009A9 VOL: 0
;PCODE: $000009AA VOL: 0
; 0000 03EA doam11 = doam11 + 10;
;PCODE: $000009AB VOL: 0
;PCODE: $000009AC VOL: 0
;PCODE: $000009AD VOL: 0
; 0000 03EB bit_phim = 0;
;PCODE: $000009AE VOL: 0
;PCODE: $000009AF VOL: 0
;PCODE: $000009B0 VOL: 0
;PCODE: $000009B1 VOL: 0
; 0000 03EC delay_ms(50);
;PCODE: $000009B2 VOL: 0
;PCODE: $000009B3 VOL: 0
;PCODE: $000009B4 VOL: 0
; 0000 03ED }
; 0000 03EE else
;PCODE: $000009B5 VOL: 0
;PCODE: $000009B6 VOL: 0
; 0000 03EF {
; 0000 03F0 bit_phim = 1;
;PCODE: $000009B7 VOL: 0
;PCODE: $000009B8 VOL: 0
;PCODE: $000009B9 VOL: 0
; 0000 03F1 delay_ms(25);
;PCODE: $000009BA VOL: 0
;PCODE: $000009BB VOL: 0
;PCODE: $000009BC VOL: 0
; 0000 03F2 }
;PCODE: $000009BD VOL: 0
; 0000 03F3 break;
;PCODE: $000009BE VOL: 0
; 0000 03F4 case 3:
;PCODE: $000009BF VOL: 0
;PCODE: $000009C0 VOL: 0
;PCODE: $000009C1 VOL: 0
;PCODE: $000009C2 VOL: 0
; 0000 03F5 
; 0000 03F6 lcd_gotoxy(12, 2);
;PCODE: $000009C3 VOL: 0
;PCODE: $000009C4 VOL: 0
;PCODE: $000009C5 VOL: 0
;PCODE: $000009C6 VOL: 0
; 0000 03F7 delay_ms(200);
;PCODE: $000009C7 VOL: 0
;PCODE: $000009C8 VOL: 0
;PCODE: $000009C9 VOL: 0
; 0000 03F8 lcd_putchar('_');
;PCODE: $000009CA VOL: 0
;PCODE: $000009CB VOL: 0
; 0000 03F9 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000009CC VOL: 0
;PCODE: $000009CD VOL: 0
;PCODE: $000009CE VOL: 0
;PCODE: $000009CF VOL: 0
;PCODE: $000009D0 VOL: 0
;PCODE: $000009D1 VOL: 0
;PCODE: $000009D2 VOL: 0
;PCODE: $000009D3 VOL: 0
;PCODE: $000009D4 VOL: 0
;PCODE: $000009D5 VOL: 0
; 0000 03FA {
; 0000 03FB doam22 = doam22 + 10;
;PCODE: $000009D6 VOL: 0
;PCODE: $000009D7 VOL: 0
;PCODE: $000009D8 VOL: 0
; 0000 03FC if (doam22 > 99)
;PCODE: $000009D9 VOL: 0
;PCODE: $000009DA VOL: 0
;PCODE: $000009DB VOL: 0
; 0000 03FD doam22 = doam22 - 100;
;PCODE: $000009DC VOL: 0
;PCODE: $000009DD VOL: 0
;PCODE: $000009DE VOL: 0
; 0000 03FE bit_phim = 0;
;PCODE: $000009DF VOL: 0
;PCODE: $000009E0 VOL: 0
;PCODE: $000009E1 VOL: 0
;PCODE: $000009E2 VOL: 0
; 0000 03FF delay_ms(50);
;PCODE: $000009E3 VOL: 0
;PCODE: $000009E4 VOL: 0
;PCODE: $000009E5 VOL: 0
; 0000 0400 }
; 0000 0401 else
;PCODE: $000009E6 VOL: 0
;PCODE: $000009E7 VOL: 0
; 0000 0402 {
; 0000 0403 bit_phim = 1;
;PCODE: $000009E8 VOL: 0
;PCODE: $000009E9 VOL: 0
;PCODE: $000009EA VOL: 0
; 0000 0404 delay_ms(25);
;PCODE: $000009EB VOL: 0
;PCODE: $000009EC VOL: 0
;PCODE: $000009ED VOL: 0
; 0000 0405 }
;PCODE: $000009EE VOL: 0
; 0000 0406 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000009EF VOL: 0
;PCODE: $000009F0 VOL: 0
;PCODE: $000009F1 VOL: 0
;PCODE: $000009F2 VOL: 0
;PCODE: $000009F3 VOL: 0
;PCODE: $000009F4 VOL: 0
;PCODE: $000009F5 VOL: 0
;PCODE: $000009F6 VOL: 0
;PCODE: $000009F7 VOL: 0
;PCODE: $000009F8 VOL: 0
; 0000 0407 {
; 0000 0408 doam22 = doam22 - 10;
;PCODE: $000009F9 VOL: 0
;PCODE: $000009FA VOL: 0
;PCODE: $000009FB VOL: 0
; 0000 0409 if (doam22 < 0)
;PCODE: $000009FC VOL: 0
;PCODE: $000009FD VOL: 0
;PCODE: $000009FE VOL: 0
; 0000 040A doam22 = doam22 + 100;
;PCODE: $000009FF VOL: 0
;PCODE: $00000A00 VOL: 0
;PCODE: $00000A01 VOL: 0
; 0000 040B bit_phim = 0;
;PCODE: $00000A02 VOL: 0
;PCODE: $00000A03 VOL: 0
;PCODE: $00000A04 VOL: 0
;PCODE: $00000A05 VOL: 0
; 0000 040C delay_ms(50);
;PCODE: $00000A06 VOL: 0
;PCODE: $00000A07 VOL: 0
;PCODE: $00000A08 VOL: 0
; 0000 040D }
; 0000 040E else
;PCODE: $00000A09 VOL: 0
;PCODE: $00000A0A VOL: 0
; 0000 040F {
; 0000 0410 bit_phim = 1;
;PCODE: $00000A0B VOL: 0
;PCODE: $00000A0C VOL: 0
;PCODE: $00000A0D VOL: 0
; 0000 0411 delay_ms(25);
;PCODE: $00000A0E VOL: 0
;PCODE: $00000A0F VOL: 0
;PCODE: $00000A10 VOL: 0
; 0000 0412 }
;PCODE: $00000A11 VOL: 0
; 0000 0413 break;
;PCODE: $00000A12 VOL: 0
; 0000 0414 case 4:
;PCODE: $00000A13 VOL: 0
;PCODE: $00000A14 VOL: 0
;PCODE: $00000A15 VOL: 0
;PCODE: $00000A16 VOL: 0
; 0000 0415 lcd_gotoxy(13, 2);
;PCODE: $00000A17 VOL: 0
;PCODE: $00000A18 VOL: 0
;PCODE: $00000A19 VOL: 0
;PCODE: $00000A1A VOL: 0
; 0000 0416 delay_ms(200);
;PCODE: $00000A1B VOL: 0
;PCODE: $00000A1C VOL: 0
;PCODE: $00000A1D VOL: 0
; 0000 0417 lcd_putchar('_');
;PCODE: $00000A1E VOL: 0
;PCODE: $00000A1F VOL: 0
; 0000 0418 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000A20 VOL: 0
;PCODE: $00000A21 VOL: 0
;PCODE: $00000A22 VOL: 0
;PCODE: $00000A23 VOL: 0
;PCODE: $00000A24 VOL: 0
;PCODE: $00000A25 VOL: 0
;PCODE: $00000A26 VOL: 0
;PCODE: $00000A27 VOL: 0
;PCODE: $00000A28 VOL: 0
;PCODE: $00000A29 VOL: 0
; 0000 0419 {
; 0000 041A doam22++;
;PCODE: $00000A2A VOL: 0
;PCODE: $00000A2B VOL: 0
;PCODE: $00000A2C VOL: 0
;PCODE: $00000A2D VOL: 0
; 0000 041B if ((doam22 - 1) % 10 == 9)
;PCODE: $00000A2E VOL: 0
;PCODE: $00000A2F VOL: 0
;PCODE: $00000A30 VOL: 0
;PCODE: $00000A31 VOL: 0
;PCODE: $00000A32 VOL: 0
;PCODE: $00000A33 VOL: 0
; 0000 041C doam22 = doam22 - 10;
;PCODE: $00000A34 VOL: 0
;PCODE: $00000A35 VOL: 0
;PCODE: $00000A36 VOL: 0
; 0000 041D bit_phim = 0;
;PCODE: $00000A37 VOL: 0
;PCODE: $00000A38 VOL: 0
;PCODE: $00000A39 VOL: 0
;PCODE: $00000A3A VOL: 0
; 0000 041E delay_ms(50);
;PCODE: $00000A3B VOL: 0
;PCODE: $00000A3C VOL: 0
;PCODE: $00000A3D VOL: 0
; 0000 041F }
; 0000 0420 else
;PCODE: $00000A3E VOL: 0
;PCODE: $00000A3F VOL: 0
; 0000 0421 {
; 0000 0422 bit_phim = 1;
;PCODE: $00000A40 VOL: 0
;PCODE: $00000A41 VOL: 0
;PCODE: $00000A42 VOL: 0
; 0000 0423 delay_ms(25);
;PCODE: $00000A43 VOL: 0
;PCODE: $00000A44 VOL: 0
;PCODE: $00000A45 VOL: 0
; 0000 0424 }
;PCODE: $00000A46 VOL: 0
; 0000 0425 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000A47 VOL: 0
;PCODE: $00000A48 VOL: 0
;PCODE: $00000A49 VOL: 0
;PCODE: $00000A4A VOL: 0
;PCODE: $00000A4B VOL: 0
;PCODE: $00000A4C VOL: 0
;PCODE: $00000A4D VOL: 0
;PCODE: $00000A4E VOL: 0
;PCODE: $00000A4F VOL: 0
;PCODE: $00000A50 VOL: 0
; 0000 0426 {
; 0000 0427 doam22--;
;PCODE: $00000A51 VOL: 0
;PCODE: $00000A52 VOL: 0
;PCODE: $00000A53 VOL: 0
;PCODE: $00000A54 VOL: 0
; 0000 0428 if ((doam22 + 1) % 10 == 0)
;PCODE: $00000A55 VOL: 0
;PCODE: $00000A56 VOL: 0
;PCODE: $00000A57 VOL: 0
;PCODE: $00000A58 VOL: 0
;PCODE: $00000A59 VOL: 0
;PCODE: $00000A5A VOL: 0
; 0000 0429 doam22 = doam22 + 10;
;PCODE: $00000A5B VOL: 0
;PCODE: $00000A5C VOL: 0
;PCODE: $00000A5D VOL: 0
; 0000 042A bit_phim = 0;
;PCODE: $00000A5E VOL: 0
;PCODE: $00000A5F VOL: 0
;PCODE: $00000A60 VOL: 0
;PCODE: $00000A61 VOL: 0
; 0000 042B delay_ms(50);
;PCODE: $00000A62 VOL: 0
;PCODE: $00000A63 VOL: 0
;PCODE: $00000A64 VOL: 0
; 0000 042C }
; 0000 042D else
;PCODE: $00000A65 VOL: 0
;PCODE: $00000A66 VOL: 0
; 0000 042E {
; 0000 042F bit_phim = 1;
;PCODE: $00000A67 VOL: 0
;PCODE: $00000A68 VOL: 0
;PCODE: $00000A69 VOL: 0
; 0000 0430 delay_ms(25);
;PCODE: $00000A6A VOL: 0
;PCODE: $00000A6B VOL: 0
;PCODE: $00000A6C VOL: 0
; 0000 0431 }
;PCODE: $00000A6D VOL: 0
; 0000 0432 break;
;PCODE: $00000A6E VOL: 0
; 0000 0433 
; 0000 0434 default:
;PCODE: $00000A6F VOL: 0
; 0000 0435 cot = 1;
;PCODE: $00000A70 VOL: 0
;PCODE: $00000A71 VOL: 0
; 0000 0436 break;
;PCODE: $00000A72 VOL: 0
; 0000 0437 }
;PCODE: $00000A73 VOL: 0
; 0000 0438 // luu
; 0000 0439 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $00000A74 VOL: 0
;PCODE: $00000A75 VOL: 0
;PCODE: $00000A76 VOL: 0
;PCODE: $00000A77 VOL: 0
;PCODE: $00000A78 VOL: 0
;PCODE: $00000A79 VOL: 0
;PCODE: $00000A7A VOL: 0
;PCODE: $00000A7B VOL: 0
;PCODE: $00000A7C VOL: 0
;PCODE: $00000A7D VOL: 0
; 0000 043A {
; 0000 043B if (doam11 < doam22)
;PCODE: $00000A7E VOL: 0
;PCODE: $00000A7F VOL: 0
;PCODE: $00000A80 VOL: 0
;PCODE: $00000A81 VOL: 0
; 0000 043C {
; 0000 043D EEPROM_write(0, doam11);
;PCODE: $00000A82 VOL: 0
;PCODE: $00000A83 VOL: 0
;PCODE: $00000A84 VOL: 0
;PCODE: $00000A85 VOL: 0
; 0000 043E EEPROM_write(1, doam22);
;PCODE: $00000A86 VOL: 0
;PCODE: $00000A87 VOL: 0
;PCODE: $00000A88 VOL: 0
;PCODE: $00000A89 VOL: 0
; 0000 043F cot = 1;
;PCODE: $00000A8A VOL: 0
;PCODE: $00000A8B VOL: 0
; 0000 0440 sprintf(enthernet, "%s,doam_low,%d %c%c%c", IP, doam11, 0, 13, 10);
;PCODE: $00000A8C VOL: 0
;PCODE: $00000A8D VOL: 0
;PCODE: $00000A8E VOL: 0
;PCODE: $00000A8F VOL: 0
;PCODE: $00000A90 VOL: 0
;PCODE: $00000A91 VOL: 0
;PCODE: $00000A92 VOL: 0
;PCODE: $00000A93 VOL: 0
;PCODE: $00000A94 VOL: 0
;PCODE: $00000A95 VOL: 0
;PCODE: $00000A96 VOL: 0
;PCODE: $00000A97 VOL: 0
;PCODE: $00000A98 VOL: 0
;PCODE: $00000A99 VOL: 0
;PCODE: $00000A9A VOL: 0
;PCODE: $00000A9B VOL: 0
;PCODE: $00000A9C VOL: 0
;PCODE: $00000A9D VOL: 0
;PCODE: $00000A9E VOL: 0
;PCODE: $00000A9F VOL: 0
;PCODE: $00000AA0 VOL: 0
; 0000 0441 puts1(enthernet);
;PCODE: $00000AA1 VOL: 0
;PCODE: $00000AA2 VOL: 0
; 0000 0442 delay_ms(100);
;PCODE: $00000AA3 VOL: 0
;PCODE: $00000AA4 VOL: 0
;PCODE: $00000AA5 VOL: 0
; 0000 0443 sprintf(enthernet, "%s,doam_high,%d %c%c%c", IP, doam22, 0, 13, 10);
;PCODE: $00000AA6 VOL: 0
;PCODE: $00000AA7 VOL: 0
;PCODE: $00000AA8 VOL: 0
;PCODE: $00000AA9 VOL: 0
;PCODE: $00000AAA VOL: 0
;PCODE: $00000AAB VOL: 0
;PCODE: $00000AAC VOL: 0
;PCODE: $00000AAD VOL: 0
;PCODE: $00000AAE VOL: 0
;PCODE: $00000AAF VOL: 0
;PCODE: $00000AB0 VOL: 0
;PCODE: $00000AB1 VOL: 0
;PCODE: $00000AB2 VOL: 0
;PCODE: $00000AB3 VOL: 0
;PCODE: $00000AB4 VOL: 0
;PCODE: $00000AB5 VOL: 0
;PCODE: $00000AB6 VOL: 0
;PCODE: $00000AB7 VOL: 0
;PCODE: $00000AB8 VOL: 0
;PCODE: $00000AB9 VOL: 0
;PCODE: $00000ABA VOL: 0
; 0000 0444 puts1(enthernet);
;PCODE: $00000ABB VOL: 0
;PCODE: $00000ABC VOL: 0
; 0000 0445 delay_ms(100);
;PCODE: $00000ABD VOL: 0
;PCODE: $00000ABE VOL: 0
;PCODE: $00000ABF VOL: 0
; 0000 0446 lcd_clear();
;PCODE: $00000AC0 VOL: 0
; 0000 0447 lcd_gotoxy(2, 1);
;PCODE: $00000AC1 VOL: 0
;PCODE: $00000AC2 VOL: 0
;PCODE: $00000AC3 VOL: 0
;PCODE: $00000AC4 VOL: 0
; 0000 0448 lcd_puts("luu thanh cong!");
;PCODE: $00000AC5 VOL: 0
;PCODE: $00000AC6 VOL: 0
;PCODE: $00000AC7 VOL: 0
; 0000 0449 delay_ms(500);
;PCODE: $00000AC8 VOL: 0
;PCODE: $00000AC9 VOL: 0
; 0000 044A lcd_clear();
;PCODE: $00000ACA VOL: 0
; 0000 044B bit_phim = 0;
;PCODE: $00000ACB VOL: 0
;PCODE: $00000ACC VOL: 0
;PCODE: $00000ACD VOL: 0
; 0000 044C delay_ms(50);
;PCODE: $00000ACE VOL: 0
;PCODE: $00000ACF VOL: 0
;PCODE: $00000AD0 VOL: 0
; 0000 044D }
; 0000 044E else
;PCODE: $00000AD1 VOL: 0
;PCODE: $00000AD2 VOL: 0
; 0000 044F {
; 0000 0450 bit_phim = 0;
;PCODE: $00000AD3 VOL: 0
;PCODE: $00000AD4 VOL: 0
;PCODE: $00000AD5 VOL: 0
; 0000 0451 lcd_gotoxy(2, 2);
;PCODE: $00000AD6 VOL: 0
;PCODE: $00000AD7 VOL: 0
;PCODE: $00000AD8 VOL: 0
;PCODE: $00000AD9 VOL: 0
; 0000 0452 lcd_clear();
;PCODE: $00000ADA VOL: 0
; 0000 0453 sprintf(lcd, "!!nhap lai nguong!!");
;PCODE: $00000ADB VOL: 0
;PCODE: $00000ADC VOL: 0
;PCODE: $00000ADD VOL: 0
;PCODE: $00000ADE VOL: 0
;PCODE: $00000ADF VOL: 0
;PCODE: $00000AE0 VOL: 0
;PCODE: $00000AE1 VOL: 0
;PCODE: $00000AE2 VOL: 0
;PCODE: $00000AE3 VOL: 0
; 0000 0454 lcd_puts(lcd);
;PCODE: $00000AE4 VOL: 0
;PCODE: $00000AE5 VOL: 0
; 0000 0455 delay_ms(500);
;PCODE: $00000AE6 VOL: 0
;PCODE: $00000AE7 VOL: 0
; 0000 0456 lcd_clear();
;PCODE: $00000AE8 VOL: 0
; 0000 0457 }
;PCODE: $00000AE9 VOL: 0
; 0000 0458 }
; 0000 0459 else
;PCODE: $00000AEA VOL: 0
;PCODE: $00000AEB VOL: 0
; 0000 045A {
; 0000 045B bit_phim = 1;
;PCODE: $00000AEC VOL: 0
;PCODE: $00000AED VOL: 0
;PCODE: $00000AEE VOL: 0
; 0000 045C delay_ms(25);
;PCODE: $00000AEF VOL: 0
;PCODE: $00000AF0 VOL: 0
;PCODE: $00000AF1 VOL: 0
; 0000 045D }
;PCODE: $00000AF2 VOL: 0
; 0000 045E };
;PCODE: $00000AF3 VOL: 0
; 0000 045F // hang 4
; 0000 0460 if (hang == 3)
;PCODE: $00000AF4 VOL: 0
;PCODE: $00000AF5 VOL: 0
;PCODE: $00000AF6 VOL: 0
; 0000 0461 {
; 0000 0462 
; 0000 0463 switch (cot)
;PCODE: $00000AF7 VOL: 0
; 0000 0464 {
; 0000 0465 case 1:
;PCODE: $00000AF8 VOL: 0
;PCODE: $00000AF9 VOL: 0
;PCODE: $00000AFA VOL: 0
; 0000 0466 lcd_gotoxy(6, 3);
;PCODE: $00000AFB VOL: 0
;PCODE: $00000AFC VOL: 0
;PCODE: $00000AFD VOL: 0
;PCODE: $00000AFE VOL: 0
; 0000 0467 delay_ms(200);
;PCODE: $00000AFF VOL: 0
;PCODE: $00000B00 VOL: 0
;PCODE: $00000B01 VOL: 0
; 0000 0468 lcd_putchar('_');
;PCODE: $00000B02 VOL: 0
;PCODE: $00000B03 VOL: 0
; 0000 0469 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000B04 VOL: 0
;PCODE: $00000B05 VOL: 0
;PCODE: $00000B06 VOL: 0
;PCODE: $00000B07 VOL: 0
;PCODE: $00000B08 VOL: 0
;PCODE: $00000B09 VOL: 0
;PCODE: $00000B0A VOL: 0
;PCODE: $00000B0B VOL: 0
;PCODE: $00000B0C VOL: 0
;PCODE: $00000B0D VOL: 0
; 0000 046A {
; 0000 046B nhietdo11 = nhietdo11 + 10;
;PCODE: $00000B0E VOL: 0
;PCODE: $00000B0F VOL: 0
;PCODE: $00000B10 VOL: 0
; 0000 046C if (nhietdo11 > 99)
;PCODE: $00000B11 VOL: 0
;PCODE: $00000B12 VOL: 0
;PCODE: $00000B13 VOL: 0
; 0000 046D nhietdo11 = nhietdo11 - 100;
;PCODE: $00000B14 VOL: 0
;PCODE: $00000B15 VOL: 0
;PCODE: $00000B16 VOL: 0
; 0000 046E bit_phim = 0;
;PCODE: $00000B17 VOL: 0
;PCODE: $00000B18 VOL: 0
;PCODE: $00000B19 VOL: 0
;PCODE: $00000B1A VOL: 0
; 0000 046F delay_ms(50);
;PCODE: $00000B1B VOL: 0
;PCODE: $00000B1C VOL: 0
;PCODE: $00000B1D VOL: 0
; 0000 0470 }
; 0000 0471 else
;PCODE: $00000B1E VOL: 0
;PCODE: $00000B1F VOL: 0
; 0000 0472 {
; 0000 0473 bit_phim = 1;
;PCODE: $00000B20 VOL: 0
;PCODE: $00000B21 VOL: 0
;PCODE: $00000B22 VOL: 0
; 0000 0474 delay_ms(25);
;PCODE: $00000B23 VOL: 0
;PCODE: $00000B24 VOL: 0
;PCODE: $00000B25 VOL: 0
; 0000 0475 }
;PCODE: $00000B26 VOL: 0
; 0000 0476 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000B27 VOL: 0
;PCODE: $00000B28 VOL: 0
;PCODE: $00000B29 VOL: 0
;PCODE: $00000B2A VOL: 0
;PCODE: $00000B2B VOL: 0
;PCODE: $00000B2C VOL: 0
;PCODE: $00000B2D VOL: 0
;PCODE: $00000B2E VOL: 0
;PCODE: $00000B2F VOL: 0
;PCODE: $00000B30 VOL: 0
; 0000 0477 {
; 0000 0478 nhietdo11 = nhietdo11 - 10;
;PCODE: $00000B31 VOL: 0
;PCODE: $00000B32 VOL: 0
;PCODE: $00000B33 VOL: 0
; 0000 0479 if (nhietdo11 < 0)
;PCODE: $00000B34 VOL: 0
;PCODE: $00000B35 VOL: 0
;PCODE: $00000B36 VOL: 0
; 0000 047A nhietdo11 = nhietdo11 + 100;
;PCODE: $00000B37 VOL: 0
;PCODE: $00000B38 VOL: 0
;PCODE: $00000B39 VOL: 0
; 0000 047B bit_phim = 0;
;PCODE: $00000B3A VOL: 0
;PCODE: $00000B3B VOL: 0
;PCODE: $00000B3C VOL: 0
;PCODE: $00000B3D VOL: 0
; 0000 047C delay_ms(50);
;PCODE: $00000B3E VOL: 0
;PCODE: $00000B3F VOL: 0
;PCODE: $00000B40 VOL: 0
; 0000 047D }
; 0000 047E else
;PCODE: $00000B41 VOL: 0
;PCODE: $00000B42 VOL: 0
; 0000 047F {
; 0000 0480 bit_phim = 1;
;PCODE: $00000B43 VOL: 0
;PCODE: $00000B44 VOL: 0
;PCODE: $00000B45 VOL: 0
; 0000 0481 delay_ms(25);
;PCODE: $00000B46 VOL: 0
;PCODE: $00000B47 VOL: 0
;PCODE: $00000B48 VOL: 0
; 0000 0482 }
;PCODE: $00000B49 VOL: 0
; 0000 0483 
; 0000 0484 break;
;PCODE: $00000B4A VOL: 0
; 0000 0485 case 2:
;PCODE: $00000B4B VOL: 0
;PCODE: $00000B4C VOL: 0
;PCODE: $00000B4D VOL: 0
;PCODE: $00000B4E VOL: 0
; 0000 0486 
; 0000 0487 lcd_gotoxy(7, 3);
;PCODE: $00000B4F VOL: 0
;PCODE: $00000B50 VOL: 0
;PCODE: $00000B51 VOL: 0
;PCODE: $00000B52 VOL: 0
; 0000 0488 delay_ms(200);
;PCODE: $00000B53 VOL: 0
;PCODE: $00000B54 VOL: 0
;PCODE: $00000B55 VOL: 0
; 0000 0489 lcd_putchar('_');
;PCODE: $00000B56 VOL: 0
;PCODE: $00000B57 VOL: 0
; 0000 048A if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000B58 VOL: 0
;PCODE: $00000B59 VOL: 0
;PCODE: $00000B5A VOL: 0
;PCODE: $00000B5B VOL: 0
;PCODE: $00000B5C VOL: 0
;PCODE: $00000B5D VOL: 0
;PCODE: $00000B5E VOL: 0
;PCODE: $00000B5F VOL: 0
;PCODE: $00000B60 VOL: 0
;PCODE: $00000B61 VOL: 0
; 0000 048B {
; 0000 048C nhietdo11++;
;PCODE: $00000B62 VOL: 0
;PCODE: $00000B63 VOL: 0
;PCODE: $00000B64 VOL: 0
;PCODE: $00000B65 VOL: 0
; 0000 048D if ((nhietdo11 - 1) % 10 == 9)
;PCODE: $00000B66 VOL: 0
;PCODE: $00000B67 VOL: 0
;PCODE: $00000B68 VOL: 0
;PCODE: $00000B69 VOL: 0
;PCODE: $00000B6A VOL: 0
;PCODE: $00000B6B VOL: 0
; 0000 048E nhietdo11 = nhietdo11 - 10;
;PCODE: $00000B6C VOL: 0
;PCODE: $00000B6D VOL: 0
;PCODE: $00000B6E VOL: 0
; 0000 048F bit_phim = 0;
;PCODE: $00000B6F VOL: 0
;PCODE: $00000B70 VOL: 0
;PCODE: $00000B71 VOL: 0
;PCODE: $00000B72 VOL: 0
; 0000 0490 delay_ms(50);
;PCODE: $00000B73 VOL: 0
;PCODE: $00000B74 VOL: 0
;PCODE: $00000B75 VOL: 0
; 0000 0491 }
; 0000 0492 else
;PCODE: $00000B76 VOL: 0
;PCODE: $00000B77 VOL: 0
; 0000 0493 {
; 0000 0494 bit_phim = 1;
;PCODE: $00000B78 VOL: 0
;PCODE: $00000B79 VOL: 0
;PCODE: $00000B7A VOL: 0
; 0000 0495 delay_ms(25);
;PCODE: $00000B7B VOL: 0
;PCODE: $00000B7C VOL: 0
;PCODE: $00000B7D VOL: 0
; 0000 0496 }
;PCODE: $00000B7E VOL: 0
; 0000 0497 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000B7F VOL: 0
;PCODE: $00000B80 VOL: 0
;PCODE: $00000B81 VOL: 0
;PCODE: $00000B82 VOL: 0
;PCODE: $00000B83 VOL: 0
;PCODE: $00000B84 VOL: 0
;PCODE: $00000B85 VOL: 0
;PCODE: $00000B86 VOL: 0
;PCODE: $00000B87 VOL: 0
;PCODE: $00000B88 VOL: 0
; 0000 0498 {
; 0000 0499 nhietdo11--;
;PCODE: $00000B89 VOL: 0
;PCODE: $00000B8A VOL: 0
;PCODE: $00000B8B VOL: 0
;PCODE: $00000B8C VOL: 0
; 0000 049A if ((nhietdo11 + 1) % 10 == 0)
;PCODE: $00000B8D VOL: 0
;PCODE: $00000B8E VOL: 0
;PCODE: $00000B8F VOL: 0
;PCODE: $00000B90 VOL: 0
;PCODE: $00000B91 VOL: 0
;PCODE: $00000B92 VOL: 0
; 0000 049B nhietdo11 = nhietdo11 + 10;
;PCODE: $00000B93 VOL: 0
;PCODE: $00000B94 VOL: 0
;PCODE: $00000B95 VOL: 0
; 0000 049C bit_phim = 0;
;PCODE: $00000B96 VOL: 0
;PCODE: $00000B97 VOL: 0
;PCODE: $00000B98 VOL: 0
;PCODE: $00000B99 VOL: 0
; 0000 049D delay_ms(50);
;PCODE: $00000B9A VOL: 0
;PCODE: $00000B9B VOL: 0
;PCODE: $00000B9C VOL: 0
; 0000 049E }
; 0000 049F else
;PCODE: $00000B9D VOL: 0
;PCODE: $00000B9E VOL: 0
; 0000 04A0 {
; 0000 04A1 bit_phim = 1;
;PCODE: $00000B9F VOL: 0
;PCODE: $00000BA0 VOL: 0
;PCODE: $00000BA1 VOL: 0
; 0000 04A2 delay_ms(25);
;PCODE: $00000BA2 VOL: 0
;PCODE: $00000BA3 VOL: 0
;PCODE: $00000BA4 VOL: 0
; 0000 04A3 }
;PCODE: $00000BA5 VOL: 0
; 0000 04A4 break;
;PCODE: $00000BA6 VOL: 0
; 0000 04A5 case 3:
;PCODE: $00000BA7 VOL: 0
;PCODE: $00000BA8 VOL: 0
;PCODE: $00000BA9 VOL: 0
;PCODE: $00000BAA VOL: 0
; 0000 04A6 
; 0000 04A7 lcd_gotoxy(12, 3);
;PCODE: $00000BAB VOL: 0
;PCODE: $00000BAC VOL: 0
;PCODE: $00000BAD VOL: 0
;PCODE: $00000BAE VOL: 0
; 0000 04A8 delay_ms(200);
;PCODE: $00000BAF VOL: 0
;PCODE: $00000BB0 VOL: 0
;PCODE: $00000BB1 VOL: 0
; 0000 04A9 lcd_putchar('_');
;PCODE: $00000BB2 VOL: 0
;PCODE: $00000BB3 VOL: 0
; 0000 04AA if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000BB4 VOL: 0
;PCODE: $00000BB5 VOL: 0
;PCODE: $00000BB6 VOL: 0
;PCODE: $00000BB7 VOL: 0
;PCODE: $00000BB8 VOL: 0
;PCODE: $00000BB9 VOL: 0
;PCODE: $00000BBA VOL: 0
;PCODE: $00000BBB VOL: 0
;PCODE: $00000BBC VOL: 0
;PCODE: $00000BBD VOL: 0
; 0000 04AB {
; 0000 04AC nhietdo22 = nhietdo22 + 10;
;PCODE: $00000BBE VOL: 0
;PCODE: $00000BBF VOL: 0
;PCODE: $00000BC0 VOL: 0
; 0000 04AD if (nhietdo22 > 99)
;PCODE: $00000BC1 VOL: 0
;PCODE: $00000BC2 VOL: 0
;PCODE: $00000BC3 VOL: 0
; 0000 04AE nhietdo22 = nhietdo22 - 100;
;PCODE: $00000BC4 VOL: 0
;PCODE: $00000BC5 VOL: 0
;PCODE: $00000BC6 VOL: 0
; 0000 04AF bit_phim = 0;
;PCODE: $00000BC7 VOL: 0
;PCODE: $00000BC8 VOL: 0
;PCODE: $00000BC9 VOL: 0
;PCODE: $00000BCA VOL: 0
; 0000 04B0 delay_ms(50);
;PCODE: $00000BCB VOL: 0
;PCODE: $00000BCC VOL: 0
;PCODE: $00000BCD VOL: 0
; 0000 04B1 }
; 0000 04B2 else
;PCODE: $00000BCE VOL: 0
;PCODE: $00000BCF VOL: 0
; 0000 04B3 {
; 0000 04B4 bit_phim = 1;
;PCODE: $00000BD0 VOL: 0
;PCODE: $00000BD1 VOL: 0
;PCODE: $00000BD2 VOL: 0
; 0000 04B5 delay_ms(25);
;PCODE: $00000BD3 VOL: 0
;PCODE: $00000BD4 VOL: 0
;PCODE: $00000BD5 VOL: 0
; 0000 04B6 }
;PCODE: $00000BD6 VOL: 0
; 0000 04B7 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000BD7 VOL: 0
;PCODE: $00000BD8 VOL: 0
;PCODE: $00000BD9 VOL: 0
;PCODE: $00000BDA VOL: 0
;PCODE: $00000BDB VOL: 0
;PCODE: $00000BDC VOL: 0
;PCODE: $00000BDD VOL: 0
;PCODE: $00000BDE VOL: 0
;PCODE: $00000BDF VOL: 0
;PCODE: $00000BE0 VOL: 0
; 0000 04B8 {
; 0000 04B9 nhietdo22 = nhietdo22 - 10;
;PCODE: $00000BE1 VOL: 0
;PCODE: $00000BE2 VOL: 0
;PCODE: $00000BE3 VOL: 0
; 0000 04BA if (nhietdo22 < 0)
;PCODE: $00000BE4 VOL: 0
;PCODE: $00000BE5 VOL: 0
;PCODE: $00000BE6 VOL: 0
; 0000 04BB nhietdo22 = nhietdo22 + 100;
;PCODE: $00000BE7 VOL: 0
;PCODE: $00000BE8 VOL: 0
;PCODE: $00000BE9 VOL: 0
; 0000 04BC bit_phim = 0;
;PCODE: $00000BEA VOL: 0
;PCODE: $00000BEB VOL: 0
;PCODE: $00000BEC VOL: 0
;PCODE: $00000BED VOL: 0
; 0000 04BD delay_ms(50);
;PCODE: $00000BEE VOL: 0
;PCODE: $00000BEF VOL: 0
;PCODE: $00000BF0 VOL: 0
; 0000 04BE }
; 0000 04BF else
;PCODE: $00000BF1 VOL: 0
;PCODE: $00000BF2 VOL: 0
; 0000 04C0 {
; 0000 04C1 bit_phim = 1;
;PCODE: $00000BF3 VOL: 0
;PCODE: $00000BF4 VOL: 0
;PCODE: $00000BF5 VOL: 0
; 0000 04C2 delay_ms(25);
;PCODE: $00000BF6 VOL: 0
;PCODE: $00000BF7 VOL: 0
;PCODE: $00000BF8 VOL: 0
; 0000 04C3 }
;PCODE: $00000BF9 VOL: 0
; 0000 04C4 break;
;PCODE: $00000BFA VOL: 0
; 0000 04C5 case 4:
;PCODE: $00000BFB VOL: 0
;PCODE: $00000BFC VOL: 0
;PCODE: $00000BFD VOL: 0
;PCODE: $00000BFE VOL: 0
; 0000 04C6 lcd_gotoxy(13, 3);
;PCODE: $00000BFF VOL: 0
;PCODE: $00000C00 VOL: 0
;PCODE: $00000C01 VOL: 0
;PCODE: $00000C02 VOL: 0
; 0000 04C7 delay_ms(200);
;PCODE: $00000C03 VOL: 0
;PCODE: $00000C04 VOL: 0
;PCODE: $00000C05 VOL: 0
; 0000 04C8 lcd_putchar('_');
;PCODE: $00000C06 VOL: 0
;PCODE: $00000C07 VOL: 0
; 0000 04C9 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000C08 VOL: 0
;PCODE: $00000C09 VOL: 0
;PCODE: $00000C0A VOL: 0
;PCODE: $00000C0B VOL: 0
;PCODE: $00000C0C VOL: 0
;PCODE: $00000C0D VOL: 0
;PCODE: $00000C0E VOL: 0
;PCODE: $00000C0F VOL: 0
;PCODE: $00000C10 VOL: 0
;PCODE: $00000C11 VOL: 0
; 0000 04CA {
; 0000 04CB nhietdo22++;
;PCODE: $00000C12 VOL: 0
;PCODE: $00000C13 VOL: 0
;PCODE: $00000C14 VOL: 0
;PCODE: $00000C15 VOL: 0
; 0000 04CC if ((nhietdo22 - 1) % 10 == 9)
;PCODE: $00000C16 VOL: 0
;PCODE: $00000C17 VOL: 0
;PCODE: $00000C18 VOL: 0
;PCODE: $00000C19 VOL: 0
;PCODE: $00000C1A VOL: 0
;PCODE: $00000C1B VOL: 0
; 0000 04CD nhietdo22 = nhietdo22 - 10;
;PCODE: $00000C1C VOL: 0
;PCODE: $00000C1D VOL: 0
;PCODE: $00000C1E VOL: 0
; 0000 04CE bit_phim = 0;
;PCODE: $00000C1F VOL: 0
;PCODE: $00000C20 VOL: 0
;PCODE: $00000C21 VOL: 0
;PCODE: $00000C22 VOL: 0
; 0000 04CF delay_ms(50);
;PCODE: $00000C23 VOL: 0
;PCODE: $00000C24 VOL: 0
;PCODE: $00000C25 VOL: 0
; 0000 04D0 }
; 0000 04D1 else
;PCODE: $00000C26 VOL: 0
;PCODE: $00000C27 VOL: 0
; 0000 04D2 {
; 0000 04D3 bit_phim = 1;
;PCODE: $00000C28 VOL: 0
;PCODE: $00000C29 VOL: 0
;PCODE: $00000C2A VOL: 0
; 0000 04D4 delay_ms(25);
;PCODE: $00000C2B VOL: 0
;PCODE: $00000C2C VOL: 0
;PCODE: $00000C2D VOL: 0
; 0000 04D5 }
;PCODE: $00000C2E VOL: 0
; 0000 04D6 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000C2F VOL: 0
;PCODE: $00000C30 VOL: 0
;PCODE: $00000C31 VOL: 0
;PCODE: $00000C32 VOL: 0
;PCODE: $00000C33 VOL: 0
;PCODE: $00000C34 VOL: 0
;PCODE: $00000C35 VOL: 0
;PCODE: $00000C36 VOL: 0
;PCODE: $00000C37 VOL: 0
;PCODE: $00000C38 VOL: 0
; 0000 04D7 {
; 0000 04D8 nhietdo22--;
;PCODE: $00000C39 VOL: 0
;PCODE: $00000C3A VOL: 0
;PCODE: $00000C3B VOL: 0
;PCODE: $00000C3C VOL: 0
; 0000 04D9 if ((nhietdo22 + 1) % 10 == 0)
;PCODE: $00000C3D VOL: 0
;PCODE: $00000C3E VOL: 0
;PCODE: $00000C3F VOL: 0
;PCODE: $00000C40 VOL: 0
;PCODE: $00000C41 VOL: 0
;PCODE: $00000C42 VOL: 0
; 0000 04DA nhietdo22 = nhietdo22 + 10;
;PCODE: $00000C43 VOL: 0
;PCODE: $00000C44 VOL: 0
;PCODE: $00000C45 VOL: 0
; 0000 04DB bit_phim = 0;
;PCODE: $00000C46 VOL: 0
;PCODE: $00000C47 VOL: 0
;PCODE: $00000C48 VOL: 0
;PCODE: $00000C49 VOL: 0
; 0000 04DC delay_ms(50);
;PCODE: $00000C4A VOL: 0
;PCODE: $00000C4B VOL: 0
;PCODE: $00000C4C VOL: 0
; 0000 04DD }
; 0000 04DE else
;PCODE: $00000C4D VOL: 0
;PCODE: $00000C4E VOL: 0
; 0000 04DF {
; 0000 04E0 bit_phim = 1;
;PCODE: $00000C4F VOL: 0
;PCODE: $00000C50 VOL: 0
;PCODE: $00000C51 VOL: 0
; 0000 04E1 delay_ms(25);
;PCODE: $00000C52 VOL: 0
;PCODE: $00000C53 VOL: 0
;PCODE: $00000C54 VOL: 0
; 0000 04E2 }
;PCODE: $00000C55 VOL: 0
; 0000 04E3 break;
;PCODE: $00000C56 VOL: 0
; 0000 04E4 default:
;PCODE: $00000C57 VOL: 0
; 0000 04E5 cot = 1;
;PCODE: $00000C58 VOL: 0
;PCODE: $00000C59 VOL: 0
; 0000 04E6 break;
;PCODE: $00000C5A VOL: 0
; 0000 04E7 }
;PCODE: $00000C5B VOL: 0
; 0000 04E8 // luu
; 0000 04E9 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $00000C5C VOL: 0
;PCODE: $00000C5D VOL: 0
;PCODE: $00000C5E VOL: 0
;PCODE: $00000C5F VOL: 0
;PCODE: $00000C60 VOL: 0
;PCODE: $00000C61 VOL: 0
;PCODE: $00000C62 VOL: 0
;PCODE: $00000C63 VOL: 0
;PCODE: $00000C64 VOL: 0
;PCODE: $00000C65 VOL: 0
; 0000 04EA {
; 0000 04EB if (nhietdo11 < nhietdo22)
;PCODE: $00000C66 VOL: 0
;PCODE: $00000C67 VOL: 0
;PCODE: $00000C68 VOL: 0
;PCODE: $00000C69 VOL: 0
; 0000 04EC {
; 0000 04ED EEPROM_write(2, nhietdo11);
;PCODE: $00000C6A VOL: 0
;PCODE: $00000C6B VOL: 0
;PCODE: $00000C6C VOL: 0
;PCODE: $00000C6D VOL: 0
; 0000 04EE EEPROM_write(3, nhietdo22);
;PCODE: $00000C6E VOL: 0
;PCODE: $00000C6F VOL: 0
;PCODE: $00000C70 VOL: 0
;PCODE: $00000C71 VOL: 0
; 0000 04EF cot = 1;
;PCODE: $00000C72 VOL: 0
;PCODE: $00000C73 VOL: 0
; 0000 04F0 sprintf(enthernet, "%s,nhietdo_lower,%d %c%c%c", IP, nhietdo11, 0, 13, 10);
;PCODE: $00000C74 VOL: 0
;PCODE: $00000C75 VOL: 0
;PCODE: $00000C76 VOL: 0
;PCODE: $00000C77 VOL: 0
;PCODE: $00000C78 VOL: 0
;PCODE: $00000C79 VOL: 0
;PCODE: $00000C7A VOL: 0
;PCODE: $00000C7B VOL: 0
;PCODE: $00000C7C VOL: 0
;PCODE: $00000C7D VOL: 0
;PCODE: $00000C7E VOL: 0
;PCODE: $00000C7F VOL: 0
;PCODE: $00000C80 VOL: 0
;PCODE: $00000C81 VOL: 0
;PCODE: $00000C82 VOL: 0
;PCODE: $00000C83 VOL: 0
;PCODE: $00000C84 VOL: 0
;PCODE: $00000C85 VOL: 0
;PCODE: $00000C86 VOL: 0
;PCODE: $00000C87 VOL: 0
;PCODE: $00000C88 VOL: 0
; 0000 04F1 puts1(enthernet);
;PCODE: $00000C89 VOL: 0
;PCODE: $00000C8A VOL: 0
; 0000 04F2 delay_ms(100);
;PCODE: $00000C8B VOL: 0
;PCODE: $00000C8C VOL: 0
;PCODE: $00000C8D VOL: 0
; 0000 04F3 sprintf(enthernet, "%s,nhietdo_high,%d %c%c%c", IP, nhietdo22, 0, 13, 10);
;PCODE: $00000C8E VOL: 0
;PCODE: $00000C8F VOL: 0
;PCODE: $00000C90 VOL: 0
;PCODE: $00000C91 VOL: 0
;PCODE: $00000C92 VOL: 0
;PCODE: $00000C93 VOL: 0
;PCODE: $00000C94 VOL: 0
;PCODE: $00000C95 VOL: 0
;PCODE: $00000C96 VOL: 0
;PCODE: $00000C97 VOL: 0
;PCODE: $00000C98 VOL: 0
;PCODE: $00000C99 VOL: 0
;PCODE: $00000C9A VOL: 0
;PCODE: $00000C9B VOL: 0
;PCODE: $00000C9C VOL: 0
;PCODE: $00000C9D VOL: 0
;PCODE: $00000C9E VOL: 0
;PCODE: $00000C9F VOL: 0
;PCODE: $00000CA0 VOL: 0
;PCODE: $00000CA1 VOL: 0
;PCODE: $00000CA2 VOL: 0
; 0000 04F4 puts1(enthernet);
;PCODE: $00000CA3 VOL: 0
;PCODE: $00000CA4 VOL: 0
; 0000 04F5 delay_ms(100);
;PCODE: $00000CA5 VOL: 0
;PCODE: $00000CA6 VOL: 0
;PCODE: $00000CA7 VOL: 0
; 0000 04F6 lcd_clear();
;PCODE: $00000CA8 VOL: 0
; 0000 04F7 lcd_gotoxy(2, 1);
;PCODE: $00000CA9 VOL: 0
;PCODE: $00000CAA VOL: 0
;PCODE: $00000CAB VOL: 0
;PCODE: $00000CAC VOL: 0
; 0000 04F8 lcd_puts("luu thanh cong!");
;PCODE: $00000CAD VOL: 0
;PCODE: $00000CAE VOL: 0
;PCODE: $00000CAF VOL: 0
; 0000 04F9 delay_ms(500);
;PCODE: $00000CB0 VOL: 0
;PCODE: $00000CB1 VOL: 0
; 0000 04FA lcd_clear();
;PCODE: $00000CB2 VOL: 0
; 0000 04FB bit_phim = 0;
;PCODE: $00000CB3 VOL: 0
;PCODE: $00000CB4 VOL: 0
;PCODE: $00000CB5 VOL: 0
; 0000 04FC delay_ms(50);
;PCODE: $00000CB6 VOL: 0
;PCODE: $00000CB7 VOL: 0
;PCODE: $00000CB8 VOL: 0
; 0000 04FD }
; 0000 04FE else
;PCODE: $00000CB9 VOL: 0
;PCODE: $00000CBA VOL: 0
; 0000 04FF {
; 0000 0500 bit_phim = 0;
;PCODE: $00000CBB VOL: 0
;PCODE: $00000CBC VOL: 0
;PCODE: $00000CBD VOL: 0
; 0000 0501 lcd_gotoxy(2, 2);
;PCODE: $00000CBE VOL: 0
;PCODE: $00000CBF VOL: 0
;PCODE: $00000CC0 VOL: 0
;PCODE: $00000CC1 VOL: 0
; 0000 0502 lcd_clear();
;PCODE: $00000CC2 VOL: 0
; 0000 0503 sprintf(lcd, "!!nhap lai nguong!!");
;PCODE: $00000CC3 VOL: 0
;PCODE: $00000CC4 VOL: 0
;PCODE: $00000CC5 VOL: 0
;PCODE: $00000CC6 VOL: 0
;PCODE: $00000CC7 VOL: 0
;PCODE: $00000CC8 VOL: 0
;PCODE: $00000CC9 VOL: 0
;PCODE: $00000CCA VOL: 0
;PCODE: $00000CCB VOL: 0
; 0000 0504 lcd_puts(lcd);
;PCODE: $00000CCC VOL: 0
;PCODE: $00000CCD VOL: 0
; 0000 0505 delay_ms(500);
;PCODE: $00000CCE VOL: 0
;PCODE: $00000CCF VOL: 0
; 0000 0506 lcd_clear();
;PCODE: $00000CD0 VOL: 0
; 0000 0507 }
;PCODE: $00000CD1 VOL: 0
; 0000 0508 }
; 0000 0509 else
;PCODE: $00000CD2 VOL: 0
;PCODE: $00000CD3 VOL: 0
; 0000 050A {
; 0000 050B bit_phim = 1;
;PCODE: $00000CD4 VOL: 0
;PCODE: $00000CD5 VOL: 0
;PCODE: $00000CD6 VOL: 0
; 0000 050C delay_ms(25);
;PCODE: $00000CD7 VOL: 0
;PCODE: $00000CD8 VOL: 0
;PCODE: $00000CD9 VOL: 0
; 0000 050D }
;PCODE: $00000CDA VOL: 0
; 0000 050E };
;PCODE: $00000CDB VOL: 0
; 0000 050F }
; 0000 0510 if (strcmp(hienthi, "setDC") == 0)
;PCODE: $00000CDC VOL: 0
;PCODE: $00000CDD VOL: 0
;PCODE: $00000CDE VOL: 0
;PCODE: $00000CDF VOL: 0
;PCODE: $00000CE0 VOL: 0
;PCODE: $00000CE1 VOL: 0
;PCODE: $00000CE2 VOL: 0
;PCODE: $00000CE3 VOL: 0
; 0000 0511 {
; 0000 0512 sdt_call1 = EEPROM_read(11);
;PCODE: $00000CE4 VOL: 0
;PCODE: $00000CE5 VOL: 0
;PCODE: $00000CE6 VOL: 0
;PCODE: $00000CE7 VOL: 0
;PCODE: $00000CE8 VOL: 0
; 0000 0513 sdt_call2 = EEPROM_read(12);
;PCODE: $00000CE9 VOL: 0
;PCODE: $00000CEA VOL: 0
;PCODE: $00000CEB VOL: 0
;PCODE: $00000CEC VOL: 0
;PCODE: $00000CED VOL: 0
; 0000 0514 sdt_call3 = EEPROM_read(13);
;PCODE: $00000CEE VOL: 0
;PCODE: $00000CEF VOL: 0
;PCODE: $00000CF0 VOL: 0
;PCODE: $00000CF1 VOL: 0
;PCODE: $00000CF2 VOL: 0
; 0000 0515 sdt_call4 = EEPROM_read(14);
;PCODE: $00000CF3 VOL: 0
;PCODE: $00000CF4 VOL: 0
;PCODE: $00000CF5 VOL: 0
;PCODE: $00000CF6 VOL: 0
;PCODE: $00000CF7 VOL: 0
; 0000 0516 sdt_call5 = EEPROM_read(15);
;PCODE: $00000CF8 VOL: 0
;PCODE: $00000CF9 VOL: 0
;PCODE: $00000CFA VOL: 0
;PCODE: $00000CFB VOL: 0
;PCODE: $00000CFC VOL: 0
; 0000 0517 sdt_call6 = EEPROM_read(16);
;PCODE: $00000CFD VOL: 0
;PCODE: $00000CFE VOL: 0
;PCODE: $00000CFF VOL: 0
;PCODE: $00000D00 VOL: 0
;PCODE: $00000D01 VOL: 0
; 0000 0518 sdt_call7 = EEPROM_read(17);
;PCODE: $00000D02 VOL: 0
;PCODE: $00000D03 VOL: 0
;PCODE: $00000D04 VOL: 0
;PCODE: $00000D05 VOL: 0
;PCODE: $00000D06 VOL: 0
; 0000 0519 sdt_call8 = EEPROM_read(18);
;PCODE: $00000D07 VOL: 0
;PCODE: $00000D08 VOL: 0
;PCODE: $00000D09 VOL: 0
;PCODE: $00000D0A VOL: 0
;PCODE: $00000D0B VOL: 0
; 0000 051A sdt_call9 = EEPROM_read(19);
;PCODE: $00000D0C VOL: 0
;PCODE: $00000D0D VOL: 0
;PCODE: $00000D0E VOL: 0
;PCODE: $00000D0F VOL: 0
;PCODE: $00000D10 VOL: 0
; 0000 051B sdt_sms1 = EEPROM_read(21);
;PCODE: $00000D11 VOL: 0
;PCODE: $00000D12 VOL: 0
;PCODE: $00000D13 VOL: 0
;PCODE: $00000D14 VOL: 0
;PCODE: $00000D15 VOL: 0
; 0000 051C sdt_sms2 = EEPROM_read(22);
;PCODE: $00000D16 VOL: 0
;PCODE: $00000D17 VOL: 0
;PCODE: $00000D18 VOL: 0
;PCODE: $00000D19 VOL: 0
;PCODE: $00000D1A VOL: 0
; 0000 051D sdt_sms3 = EEPROM_read(23);
;PCODE: $00000D1B VOL: 0
;PCODE: $00000D1C VOL: 0
;PCODE: $00000D1D VOL: 0
;PCODE: $00000D1E VOL: 0
;PCODE: $00000D1F VOL: 0
; 0000 051E sdt_sms4 = EEPROM_read(24);
;PCODE: $00000D20 VOL: 0
;PCODE: $00000D21 VOL: 0
;PCODE: $00000D22 VOL: 0
;PCODE: $00000D23 VOL: 0
;PCODE: $00000D24 VOL: 0
; 0000 051F sdt_sms5 = EEPROM_read(25);
;PCODE: $00000D25 VOL: 0
;PCODE: $00000D26 VOL: 0
;PCODE: $00000D27 VOL: 0
;PCODE: $00000D28 VOL: 0
;PCODE: $00000D29 VOL: 0
; 0000 0520 sdt_sms6 = EEPROM_read(26);
;PCODE: $00000D2A VOL: 0
;PCODE: $00000D2B VOL: 0
;PCODE: $00000D2C VOL: 0
;PCODE: $00000D2D VOL: 0
;PCODE: $00000D2E VOL: 0
; 0000 0521 sdt_sms7 = EEPROM_read(27);
;PCODE: $00000D2F VOL: 0
;PCODE: $00000D30 VOL: 0
;PCODE: $00000D31 VOL: 0
;PCODE: $00000D32 VOL: 0
;PCODE: $00000D33 VOL: 0
; 0000 0522 sdt_sms8 = EEPROM_read(28);
;PCODE: $00000D34 VOL: 0
;PCODE: $00000D35 VOL: 0
;PCODE: $00000D36 VOL: 0
;PCODE: $00000D37 VOL: 0
;PCODE: $00000D38 VOL: 0
; 0000 0523 sdt_sms9 = EEPROM_read(29);
;PCODE: $00000D39 VOL: 0
;PCODE: $00000D3A VOL: 0
;PCODE: $00000D3B VOL: 0
;PCODE: $00000D3C VOL: 0
;PCODE: $00000D3D VOL: 0
; 0000 0524 // if ((sdt_sms1 > 9) | (sdt_sms2 > 9) | (sdt_sms3 > 9) | (sdt_sms4 > 9) | (sdt_ ...
; 0000 0525 // {
; 0000 0526 //    sdt_sms1 = sdt_sms2 = sdt_sms3 = sdt_sms4 = sdt_sms5 = sdt_sms6 = sdt_sms7 ...
; 0000 0527 //    EEPROM_write(21, sdt_sms1);
; 0000 0528 //    EEPROM_write(22, sdt_sms2);
; 0000 0529 //    EEPROM_write(23, sdt_sms3);
; 0000 052A //    EEPROM_write(24, sdt_sms4);
; 0000 052B //    EEPROM_write(25, sdt_sms5);
; 0000 052C //    EEPROM_write(26, sdt_sms6);
; 0000 052D //    EEPROM_write(27, sdt_sms7);
; 0000 052E //    EEPROM_write(28, sdt_sms8);
; 0000 052F //    EEPROM_write(29, sdt_sms9);
; 0000 0530 // }
; 0000 0531 // if ((sdt_call1 > 9) | (sdt_call2 > 9) | (sdt_call3 > 9) | (sdt_call4 > 9) | ( ...
; 0000 0532 // {
; 0000 0533 //    sdt_call1 = sdt_call2 = sdt_call3 = sdt_call4 = sdt_call5 = sdt_call6 = sd ...
; 0000 0534 //    EEPROM_write(11, sdt_call1);
; 0000 0535 //    EEPROM_write(12, sdt_call2);
; 0000 0536 //    EEPROM_write(13, sdt_call3);
; 0000 0537 //    EEPROM_write(14, sdt_call4);
; 0000 0538 //    EEPROM_write(15, sdt_call5);
; 0000 0539 //    EEPROM_write(16, sdt_call6);
; 0000 053A //    EEPROM_write(17, sdt_call7);
; 0000 053B //    EEPROM_write(18, sdt_call8);
; 0000 053C //    EEPROM_write(19, sdt_call9);
; 0000 053D // }
; 0000 053E ////////////////////////////////
; 0000 053F for (i = 1; i < 4; i++)
;PCODE: $00000D3E VOL: 0
;PCODE: $00000D3F VOL: 0
;PCODE: $00000D40 VOL: 0
;PCODE: $00000D41 VOL: 0
;PCODE: $00000D42 VOL: 0
;PCODE: $00000D43 VOL: 0
;PCODE: $00000D44 VOL: 0
;PCODE: $00000D45 VOL: 0
;PCODE: $00000D46 VOL: 0
;PCODE: $00000D47 VOL: 0
;PCODE: $00000D48 VOL: 0
; 0000 0540 if (i == hang - 3)
;PCODE: $00000D49 VOL: 0
;PCODE: $00000D4A VOL: 0
;PCODE: $00000D4B VOL: 0
;PCODE: $00000D4C VOL: 0
;PCODE: $00000D4D VOL: 0
; 0000 0541 {
; 0000 0542 lcd_gotoxy(19, i);
;PCODE: $00000D4E VOL: 0
;PCODE: $00000D4F VOL: 0
;PCODE: $00000D50 VOL: 0
;PCODE: $00000D51 VOL: 0
; 0000 0543 lcd_putchar('<');
;PCODE: $00000D52 VOL: 0
;PCODE: $00000D53 VOL: 0
; 0000 0544 }
; 0000 0545 else
;PCODE: $00000D54 VOL: 0
;PCODE: $00000D55 VOL: 0
; 0000 0546 {
; 0000 0547 lcd_gotoxy(19, i);
;PCODE: $00000D56 VOL: 0
;PCODE: $00000D57 VOL: 0
;PCODE: $00000D58 VOL: 0
;PCODE: $00000D59 VOL: 0
; 0000 0548 lcd_putchar(' ');
;PCODE: $00000D5A VOL: 0
;PCODE: $00000D5B VOL: 0
; 0000 0549 }
;PCODE: $00000D5C VOL: 0
;PCODE: $00000D5D VOL: 0
;PCODE: $00000D5E VOL: 0
;PCODE: $00000D5F VOL: 0
;PCODE: $00000D60 VOL: 0
;PCODE: $00000D61 VOL: 0
;PCODE: $00000D62 VOL: 0
;PCODE: $00000D63 VOL: 0
; 0000 054A lcd_gotoxy(3, 0);
;PCODE: $00000D64 VOL: 0
;PCODE: $00000D65 VOL: 0
;PCODE: $00000D66 VOL: 0
;PCODE: $00000D67 VOL: 0
; 0000 054B sprintf(lcd, "Cai dat muc DC");
;PCODE: $00000D68 VOL: 0
;PCODE: $00000D69 VOL: 0
;PCODE: $00000D6A VOL: 0
;PCODE: $00000D6B VOL: 0
;PCODE: $00000D6C VOL: 0
;PCODE: $00000D6D VOL: 0
;PCODE: $00000D6E VOL: 0
;PCODE: $00000D6F VOL: 0
;PCODE: $00000D70 VOL: 0
; 0000 054C lcd_puts(lcd);
;PCODE: $00000D71 VOL: 0
;PCODE: $00000D72 VOL: 0
; 0000 054D lcd_gotoxy(0, 1);
;PCODE: $00000D73 VOL: 0
;PCODE: $00000D74 VOL: 0
;PCODE: $00000D75 VOL: 0
;PCODE: $00000D76 VOL: 0
; 0000 054E sprintf(lcd, "DC_low_1: %1d%1d,%1d", dc_low_1 / 100, (dc_low_1 % 100) / 10, dc_l ...
;PCODE: $00000D77 VOL: 0
;PCODE: $00000D78 VOL: 0
;PCODE: $00000D79 VOL: 0
;PCODE: $00000D7A VOL: 0
;PCODE: $00000D7B VOL: 0
;PCODE: $00000D7C VOL: 0
;PCODE: $00000D7D VOL: 0
;PCODE: $00000D7E VOL: 0
;PCODE: $00000D7F VOL: 0
;PCODE: $00000D80 VOL: 0
;PCODE: $00000D81 VOL: 0
;PCODE: $00000D82 VOL: 0
;PCODE: $00000D83 VOL: 0
;PCODE: $00000D84 VOL: 0
;PCODE: $00000D85 VOL: 0
;PCODE: $00000D86 VOL: 0
;PCODE: $00000D87 VOL: 0
;PCODE: $00000D88 VOL: 0
;PCODE: $00000D89 VOL: 0
;PCODE: $00000D8A VOL: 0
;PCODE: $00000D8B VOL: 0
;PCODE: $00000D8C VOL: 0
;PCODE: $00000D8D VOL: 0
;PCODE: $00000D8E VOL: 0
;PCODE: $00000D8F VOL: 0
;PCODE: $00000D90 VOL: 0
;PCODE: $00000D91 VOL: 0
; 0000 054F lcd_puts(lcd);
;PCODE: $00000D92 VOL: 0
;PCODE: $00000D93 VOL: 0
; 0000 0550 lcd_gotoxy(0, 2);
;PCODE: $00000D94 VOL: 0
;PCODE: $00000D95 VOL: 0
;PCODE: $00000D96 VOL: 0
;PCODE: $00000D97 VOL: 0
; 0000 0551 sprintf(lcd, "DC_low_2: %1d%1d,%1d", dc_low_2 / 100, (dc_low_2 % 100) / 10, dc_l ...
;PCODE: $00000D98 VOL: 0
;PCODE: $00000D99 VOL: 0
;PCODE: $00000D9A VOL: 0
;PCODE: $00000D9B VOL: 0
;PCODE: $00000D9C VOL: 0
;PCODE: $00000D9D VOL: 0
;PCODE: $00000D9E VOL: 0
;PCODE: $00000D9F VOL: 0
;PCODE: $00000DA0 VOL: 0
;PCODE: $00000DA1 VOL: 0
;PCODE: $00000DA2 VOL: 0
;PCODE: $00000DA3 VOL: 0
;PCODE: $00000DA4 VOL: 0
;PCODE: $00000DA5 VOL: 0
;PCODE: $00000DA6 VOL: 0
;PCODE: $00000DA7 VOL: 0
;PCODE: $00000DA8 VOL: 0
;PCODE: $00000DA9 VOL: 0
;PCODE: $00000DAA VOL: 0
;PCODE: $00000DAB VOL: 0
;PCODE: $00000DAC VOL: 0
;PCODE: $00000DAD VOL: 0
;PCODE: $00000DAE VOL: 0
;PCODE: $00000DAF VOL: 0
;PCODE: $00000DB0 VOL: 0
;PCODE: $00000DB1 VOL: 0
;PCODE: $00000DB2 VOL: 0
; 0000 0552 lcd_puts(lcd);
;PCODE: $00000DB3 VOL: 0
;PCODE: $00000DB4 VOL: 0
; 0000 0553 lcd_gotoxy(0, 3);
;PCODE: $00000DB5 VOL: 0
;PCODE: $00000DB6 VOL: 0
;PCODE: $00000DB7 VOL: 0
;PCODE: $00000DB8 VOL: 0
; 0000 0554 sprintf(lcd, "DC_high : %1d%1d,%1d", dc_high / 100, (dc_high % 100) / 10, dc_hig ...
;PCODE: $00000DB9 VOL: 0
;PCODE: $00000DBA VOL: 0
;PCODE: $00000DBB VOL: 0
;PCODE: $00000DBC VOL: 0
;PCODE: $00000DBD VOL: 0
;PCODE: $00000DBE VOL: 0
;PCODE: $00000DBF VOL: 0
;PCODE: $00000DC0 VOL: 0
;PCODE: $00000DC1 VOL: 0
;PCODE: $00000DC2 VOL: 0
;PCODE: $00000DC3 VOL: 0
;PCODE: $00000DC4 VOL: 0
;PCODE: $00000DC5 VOL: 0
;PCODE: $00000DC6 VOL: 0
;PCODE: $00000DC7 VOL: 0
;PCODE: $00000DC8 VOL: 0
;PCODE: $00000DC9 VOL: 0
;PCODE: $00000DCA VOL: 0
;PCODE: $00000DCB VOL: 0
;PCODE: $00000DCC VOL: 0
;PCODE: $00000DCD VOL: 0
;PCODE: $00000DCE VOL: 0
;PCODE: $00000DCF VOL: 0
;PCODE: $00000DD0 VOL: 0
;PCODE: $00000DD1 VOL: 0
;PCODE: $00000DD2 VOL: 0
;PCODE: $00000DD3 VOL: 0
; 0000 0555 lcd_puts(lcd);
;PCODE: $00000DD4 VOL: 0
;PCODE: $00000DD5 VOL: 0
; 0000 0556 //
; 0000 0557 // hang1
; 0000 0558 if (hang - 4 == 0)
;PCODE: $00000DD6 VOL: 0
;PCODE: $00000DD7 VOL: 0
;PCODE: $00000DD8 VOL: 0
; 0000 0559 {
; 0000 055A 
; 0000 055B switch (cot)
;PCODE: $00000DD9 VOL: 0
; 0000 055C {
; 0000 055D case 1:
;PCODE: $00000DDA VOL: 0
;PCODE: $00000DDB VOL: 0
;PCODE: $00000DDC VOL: 0
; 0000 055E 
; 0000 055F lcd_gotoxy(10, 1);
;PCODE: $00000DDD VOL: 0
;PCODE: $00000DDE VOL: 0
;PCODE: $00000DDF VOL: 0
;PCODE: $00000DE0 VOL: 0
; 0000 0560 delay_ms(200);
;PCODE: $00000DE1 VOL: 0
;PCODE: $00000DE2 VOL: 0
;PCODE: $00000DE3 VOL: 0
; 0000 0561 lcd_putchar('_');
;PCODE: $00000DE4 VOL: 0
;PCODE: $00000DE5 VOL: 0
; 0000 0562 // phim up
; 0000 0563 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000DE6 VOL: 0
;PCODE: $00000DE7 VOL: 0
;PCODE: $00000DE8 VOL: 0
;PCODE: $00000DE9 VOL: 0
;PCODE: $00000DEA VOL: 0
;PCODE: $00000DEB VOL: 0
;PCODE: $00000DEC VOL: 0
;PCODE: $00000DED VOL: 0
;PCODE: $00000DEE VOL: 0
;PCODE: $00000DEF VOL: 0
; 0000 0564 {
; 0000 0565 dc_low_1 = dc_low_1 + 100;
;PCODE: $00000DF0 VOL: 0
;PCODE: $00000DF1 VOL: 0
;PCODE: $00000DF2 VOL: 0
; 0000 0566 if (dc_low_1 >= 1000)
;PCODE: $00000DF3 VOL: 0
;PCODE: $00000DF4 VOL: 0
;PCODE: $00000DF5 VOL: 0
; 0000 0567 dc_low_1 = dc_low_1 - 1000;
;PCODE: $00000DF6 VOL: 0
;PCODE: $00000DF7 VOL: 0
;PCODE: $00000DF8 VOL: 0
; 0000 0568 bit_phim = 0;
;PCODE: $00000DF9 VOL: 0
;PCODE: $00000DFA VOL: 0
;PCODE: $00000DFB VOL: 0
;PCODE: $00000DFC VOL: 0
; 0000 0569 delay_ms(50);
;PCODE: $00000DFD VOL: 0
;PCODE: $00000DFE VOL: 0
;PCODE: $00000DFF VOL: 0
; 0000 056A }
; 0000 056B else
;PCODE: $00000E00 VOL: 0
;PCODE: $00000E01 VOL: 0
; 0000 056C {
; 0000 056D bit_phim = 1;
;PCODE: $00000E02 VOL: 0
;PCODE: $00000E03 VOL: 0
;PCODE: $00000E04 VOL: 0
; 0000 056E delay_ms(25);
;PCODE: $00000E05 VOL: 0
;PCODE: $00000E06 VOL: 0
;PCODE: $00000E07 VOL: 0
; 0000 056F }
;PCODE: $00000E08 VOL: 0
; 0000 0570 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000E09 VOL: 0
;PCODE: $00000E0A VOL: 0
;PCODE: $00000E0B VOL: 0
;PCODE: $00000E0C VOL: 0
;PCODE: $00000E0D VOL: 0
;PCODE: $00000E0E VOL: 0
;PCODE: $00000E0F VOL: 0
;PCODE: $00000E10 VOL: 0
;PCODE: $00000E11 VOL: 0
;PCODE: $00000E12 VOL: 0
; 0000 0571 {
; 0000 0572 dc_low_1 = dc_low_1 - 100;
;PCODE: $00000E13 VOL: 0
;PCODE: $00000E14 VOL: 0
;PCODE: $00000E15 VOL: 0
; 0000 0573 if (dc_low_1 < 0)
;PCODE: $00000E16 VOL: 0
;PCODE: $00000E17 VOL: 0
;PCODE: $00000E18 VOL: 0
; 0000 0574 dc_low_1 = dc_low_1 + 1000;
;PCODE: $00000E19 VOL: 0
;PCODE: $00000E1A VOL: 0
;PCODE: $00000E1B VOL: 0
; 0000 0575 bit_phim = 0;
;PCODE: $00000E1C VOL: 0
;PCODE: $00000E1D VOL: 0
;PCODE: $00000E1E VOL: 0
;PCODE: $00000E1F VOL: 0
; 0000 0576 delay_ms(50);
;PCODE: $00000E20 VOL: 0
;PCODE: $00000E21 VOL: 0
;PCODE: $00000E22 VOL: 0
; 0000 0577 }
; 0000 0578 else
;PCODE: $00000E23 VOL: 0
;PCODE: $00000E24 VOL: 0
; 0000 0579 {
; 0000 057A bit_phim = 1;
;PCODE: $00000E25 VOL: 0
;PCODE: $00000E26 VOL: 0
;PCODE: $00000E27 VOL: 0
; 0000 057B delay_ms(25);
;PCODE: $00000E28 VOL: 0
;PCODE: $00000E29 VOL: 0
;PCODE: $00000E2A VOL: 0
; 0000 057C }
;PCODE: $00000E2B VOL: 0
; 0000 057D break;
;PCODE: $00000E2C VOL: 0
; 0000 057E case 2:
;PCODE: $00000E2D VOL: 0
;PCODE: $00000E2E VOL: 0
;PCODE: $00000E2F VOL: 0
;PCODE: $00000E30 VOL: 0
; 0000 057F 
; 0000 0580 lcd_gotoxy(11, 1);
;PCODE: $00000E31 VOL: 0
;PCODE: $00000E32 VOL: 0
;PCODE: $00000E33 VOL: 0
;PCODE: $00000E34 VOL: 0
; 0000 0581 delay_ms(200);
;PCODE: $00000E35 VOL: 0
;PCODE: $00000E36 VOL: 0
;PCODE: $00000E37 VOL: 0
; 0000 0582 lcd_putchar('_');
;PCODE: $00000E38 VOL: 0
;PCODE: $00000E39 VOL: 0
; 0000 0583 
; 0000 0584 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000E3A VOL: 0
;PCODE: $00000E3B VOL: 0
;PCODE: $00000E3C VOL: 0
;PCODE: $00000E3D VOL: 0
;PCODE: $00000E3E VOL: 0
;PCODE: $00000E3F VOL: 0
;PCODE: $00000E40 VOL: 0
;PCODE: $00000E41 VOL: 0
;PCODE: $00000E42 VOL: 0
;PCODE: $00000E43 VOL: 0
; 0000 0585 {
; 0000 0586 dc_low_1 = dc_low_1 + 10;
;PCODE: $00000E44 VOL: 0
;PCODE: $00000E45 VOL: 0
;PCODE: $00000E46 VOL: 0
; 0000 0587 if (((dc_low_1 - 10) / 10) % 10 == 9)
;PCODE: $00000E47 VOL: 0
;PCODE: $00000E48 VOL: 0
;PCODE: $00000E49 VOL: 0
;PCODE: $00000E4A VOL: 0
;PCODE: $00000E4B VOL: 0
;PCODE: $00000E4C VOL: 0
;PCODE: $00000E4D VOL: 0
;PCODE: $00000E4E VOL: 0
;PCODE: $00000E4F VOL: 0
; 0000 0588 dc_low_1 = dc_low_1 - 100;
;PCODE: $00000E50 VOL: 0
;PCODE: $00000E51 VOL: 0
;PCODE: $00000E52 VOL: 0
; 0000 0589 bit_phim = 0;
;PCODE: $00000E53 VOL: 0
;PCODE: $00000E54 VOL: 0
;PCODE: $00000E55 VOL: 0
;PCODE: $00000E56 VOL: 0
; 0000 058A delay_ms(50);
;PCODE: $00000E57 VOL: 0
;PCODE: $00000E58 VOL: 0
;PCODE: $00000E59 VOL: 0
; 0000 058B }
; 0000 058C else
;PCODE: $00000E5A VOL: 0
;PCODE: $00000E5B VOL: 0
; 0000 058D {
; 0000 058E bit_phim = 1;
;PCODE: $00000E5C VOL: 0
;PCODE: $00000E5D VOL: 0
;PCODE: $00000E5E VOL: 0
; 0000 058F delay_ms(25);
;PCODE: $00000E5F VOL: 0
;PCODE: $00000E60 VOL: 0
;PCODE: $00000E61 VOL: 0
; 0000 0590 }
;PCODE: $00000E62 VOL: 0
; 0000 0591 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000E63 VOL: 0
;PCODE: $00000E64 VOL: 0
;PCODE: $00000E65 VOL: 0
;PCODE: $00000E66 VOL: 0
;PCODE: $00000E67 VOL: 0
;PCODE: $00000E68 VOL: 0
;PCODE: $00000E69 VOL: 0
;PCODE: $00000E6A VOL: 0
;PCODE: $00000E6B VOL: 0
;PCODE: $00000E6C VOL: 0
; 0000 0592 {
; 0000 0593 dc_low_1 = dc_low_1 - 10;
;PCODE: $00000E6D VOL: 0
;PCODE: $00000E6E VOL: 0
;PCODE: $00000E6F VOL: 0
; 0000 0594 if (((dc_low_1 + 10) / 10) % 10 == 0)
;PCODE: $00000E70 VOL: 0
;PCODE: $00000E71 VOL: 0
;PCODE: $00000E72 VOL: 0
;PCODE: $00000E73 VOL: 0
;PCODE: $00000E74 VOL: 0
;PCODE: $00000E75 VOL: 0
;PCODE: $00000E76 VOL: 0
;PCODE: $00000E77 VOL: 0
;PCODE: $00000E78 VOL: 0
; 0000 0595 dc_low_1 = dc_low_1 + 100;
;PCODE: $00000E79 VOL: 0
;PCODE: $00000E7A VOL: 0
;PCODE: $00000E7B VOL: 0
; 0000 0596 bit_phim = 0;
;PCODE: $00000E7C VOL: 0
;PCODE: $00000E7D VOL: 0
;PCODE: $00000E7E VOL: 0
;PCODE: $00000E7F VOL: 0
; 0000 0597 delay_ms(50);
;PCODE: $00000E80 VOL: 0
;PCODE: $00000E81 VOL: 0
;PCODE: $00000E82 VOL: 0
; 0000 0598 }
; 0000 0599 else
;PCODE: $00000E83 VOL: 0
;PCODE: $00000E84 VOL: 0
; 0000 059A {
; 0000 059B bit_phim = 1;
;PCODE: $00000E85 VOL: 0
;PCODE: $00000E86 VOL: 0
;PCODE: $00000E87 VOL: 0
; 0000 059C delay_ms(25);
;PCODE: $00000E88 VOL: 0
;PCODE: $00000E89 VOL: 0
;PCODE: $00000E8A VOL: 0
; 0000 059D }
;PCODE: $00000E8B VOL: 0
; 0000 059E break;
;PCODE: $00000E8C VOL: 0
; 0000 059F case 3:
;PCODE: $00000E8D VOL: 0
;PCODE: $00000E8E VOL: 0
;PCODE: $00000E8F VOL: 0
;PCODE: $00000E90 VOL: 0
; 0000 05A0 
; 0000 05A1 lcd_gotoxy(13, 1);
;PCODE: $00000E91 VOL: 0
;PCODE: $00000E92 VOL: 0
;PCODE: $00000E93 VOL: 0
;PCODE: $00000E94 VOL: 0
; 0000 05A2 delay_ms(200);
;PCODE: $00000E95 VOL: 0
;PCODE: $00000E96 VOL: 0
;PCODE: $00000E97 VOL: 0
; 0000 05A3 lcd_putchar('_');
;PCODE: $00000E98 VOL: 0
;PCODE: $00000E99 VOL: 0
; 0000 05A4 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000E9A VOL: 0
;PCODE: $00000E9B VOL: 0
;PCODE: $00000E9C VOL: 0
;PCODE: $00000E9D VOL: 0
;PCODE: $00000E9E VOL: 0
;PCODE: $00000E9F VOL: 0
;PCODE: $00000EA0 VOL: 0
;PCODE: $00000EA1 VOL: 0
;PCODE: $00000EA2 VOL: 0
;PCODE: $00000EA3 VOL: 0
; 0000 05A5 {
; 0000 05A6 dc_low_1++;
;PCODE: $00000EA4 VOL: 0
;PCODE: $00000EA5 VOL: 0
;PCODE: $00000EA6 VOL: 0
;PCODE: $00000EA7 VOL: 0
; 0000 05A7 if (((dc_low_1 - 1) % 10) == 9)
;PCODE: $00000EA8 VOL: 0
;PCODE: $00000EA9 VOL: 0
;PCODE: $00000EAA VOL: 0
;PCODE: $00000EAB VOL: 0
;PCODE: $00000EAC VOL: 0
;PCODE: $00000EAD VOL: 0
; 0000 05A8 dc_low_1 = dc_low_1 - 10;
;PCODE: $00000EAE VOL: 0
;PCODE: $00000EAF VOL: 0
;PCODE: $00000EB0 VOL: 0
; 0000 05A9 bit_phim = 0;
;PCODE: $00000EB1 VOL: 0
;PCODE: $00000EB2 VOL: 0
;PCODE: $00000EB3 VOL: 0
;PCODE: $00000EB4 VOL: 0
; 0000 05AA delay_ms(50);
;PCODE: $00000EB5 VOL: 0
;PCODE: $00000EB6 VOL: 0
;PCODE: $00000EB7 VOL: 0
; 0000 05AB }
; 0000 05AC else
;PCODE: $00000EB8 VOL: 0
;PCODE: $00000EB9 VOL: 0
; 0000 05AD {
; 0000 05AE bit_phim = 1;
;PCODE: $00000EBA VOL: 0
;PCODE: $00000EBB VOL: 0
;PCODE: $00000EBC VOL: 0
; 0000 05AF delay_ms(25);
;PCODE: $00000EBD VOL: 0
;PCODE: $00000EBE VOL: 0
;PCODE: $00000EBF VOL: 0
; 0000 05B0 }
;PCODE: $00000EC0 VOL: 0
; 0000 05B1 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000EC1 VOL: 0
;PCODE: $00000EC2 VOL: 0
;PCODE: $00000EC3 VOL: 0
;PCODE: $00000EC4 VOL: 0
;PCODE: $00000EC5 VOL: 0
;PCODE: $00000EC6 VOL: 0
;PCODE: $00000EC7 VOL: 0
;PCODE: $00000EC8 VOL: 0
;PCODE: $00000EC9 VOL: 0
;PCODE: $00000ECA VOL: 0
; 0000 05B2 {
; 0000 05B3 dc_low_1--;
;PCODE: $00000ECB VOL: 0
;PCODE: $00000ECC VOL: 0
;PCODE: $00000ECD VOL: 0
;PCODE: $00000ECE VOL: 0
; 0000 05B4 if (((dc_low_1 + 1) % 10) == 0)
;PCODE: $00000ECF VOL: 0
;PCODE: $00000ED0 VOL: 0
;PCODE: $00000ED1 VOL: 0
;PCODE: $00000ED2 VOL: 0
;PCODE: $00000ED3 VOL: 0
;PCODE: $00000ED4 VOL: 0
; 0000 05B5 dc_low_1 = dc_low_1 + 10;
;PCODE: $00000ED5 VOL: 0
;PCODE: $00000ED6 VOL: 0
;PCODE: $00000ED7 VOL: 0
; 0000 05B6 bit_phim = 0;
;PCODE: $00000ED8 VOL: 0
;PCODE: $00000ED9 VOL: 0
;PCODE: $00000EDA VOL: 0
;PCODE: $00000EDB VOL: 0
; 0000 05B7 delay_ms(50);
;PCODE: $00000EDC VOL: 0
;PCODE: $00000EDD VOL: 0
;PCODE: $00000EDE VOL: 0
; 0000 05B8 }
; 0000 05B9 else
;PCODE: $00000EDF VOL: 0
;PCODE: $00000EE0 VOL: 0
; 0000 05BA {
; 0000 05BB bit_phim = 1;
;PCODE: $00000EE1 VOL: 0
;PCODE: $00000EE2 VOL: 0
;PCODE: $00000EE3 VOL: 0
; 0000 05BC delay_ms(25);
;PCODE: $00000EE4 VOL: 0
;PCODE: $00000EE5 VOL: 0
;PCODE: $00000EE6 VOL: 0
; 0000 05BD }
;PCODE: $00000EE7 VOL: 0
; 0000 05BE break;
;PCODE: $00000EE8 VOL: 0
; 0000 05BF default:
;PCODE: $00000EE9 VOL: 0
; 0000 05C0 cot = 1;
;PCODE: $00000EEA VOL: 0
;PCODE: $00000EEB VOL: 0
; 0000 05C1 delay_ms(25);
;PCODE: $00000EEC VOL: 0
;PCODE: $00000EED VOL: 0
;PCODE: $00000EEE VOL: 0
; 0000 05C2 break;
;PCODE: $00000EEF VOL: 0
; 0000 05C3 }
;PCODE: $00000EF0 VOL: 0
; 0000 05C4 // luu
; 0000 05C5 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $00000EF1 VOL: 0
;PCODE: $00000EF2 VOL: 0
;PCODE: $00000EF3 VOL: 0
;PCODE: $00000EF4 VOL: 0
;PCODE: $00000EF5 VOL: 0
;PCODE: $00000EF6 VOL: 0
;PCODE: $00000EF7 VOL: 0
;PCODE: $00000EF8 VOL: 0
;PCODE: $00000EF9 VOL: 0
;PCODE: $00000EFA VOL: 0
; 0000 05C6 {
; 0000 05C7 if ((dc_low_1 != 0) & (dc_low_1 < EEPROM_read(33) * 10 + EEPROM_read(34)))
;PCODE: $00000EFB VOL: 0
;PCODE: $00000EFC VOL: 0
;PCODE: $00000EFD VOL: 0
;PCODE: $00000EFE VOL: 0
;PCODE: $00000EFF VOL: 0
;PCODE: $00000F00 VOL: 0
;PCODE: $00000F01 VOL: 0
;PCODE: $00000F02 VOL: 0
;PCODE: $00000F03 VOL: 0
;PCODE: $00000F04 VOL: 0
;PCODE: $00000F05 VOL: 0
;PCODE: $00000F06 VOL: 0
;PCODE: $00000F07 VOL: 0
;PCODE: $00000F08 VOL: 0
;PCODE: $00000F09 VOL: 0
;PCODE: $00000F0A VOL: 0
;PCODE: $00000F0B VOL: 0
;PCODE: $00000F0C VOL: 0
;PCODE: $00000F0D VOL: 0
;PCODE: $00000F0E VOL: 0
;PCODE: $00000F0F VOL: 0
; 0000 05C8 {
; 0000 05C9 lcd_clear();
;PCODE: $00000F10 VOL: 0
; 0000 05CA EEPROM_write(31, dc_low_1 / 10);
;PCODE: $00000F11 VOL: 0
;PCODE: $00000F12 VOL: 0
;PCODE: $00000F13 VOL: 0
;PCODE: $00000F14 VOL: 0
;PCODE: $00000F15 VOL: 0
;PCODE: $00000F16 VOL: 0
;PCODE: $00000F17 VOL: 0
; 0000 05CB EEPROM_write(32, dc_low_1 % 10);
;PCODE: $00000F18 VOL: 0
;PCODE: $00000F19 VOL: 0
;PCODE: $00000F1A VOL: 0
;PCODE: $00000F1B VOL: 0
;PCODE: $00000F1C VOL: 0
;PCODE: $00000F1D VOL: 0
;PCODE: $00000F1E VOL: 0
; 0000 05CC cot = 1;
;PCODE: $00000F1F VOL: 0
;PCODE: $00000F20 VOL: 0
; 0000 05CD lcd_gotoxy(3, 1);
;PCODE: $00000F21 VOL: 0
;PCODE: $00000F22 VOL: 0
;PCODE: $00000F23 VOL: 0
;PCODE: $00000F24 VOL: 0
; 0000 05CE sprintf(enthernet, "%s,dienap_low,%d.%d", IP, dc_low_1 / 10, dc_low_1 % 10);
;PCODE: $00000F25 VOL: 0
;PCODE: $00000F26 VOL: 0
;PCODE: $00000F27 VOL: 0
;PCODE: $00000F28 VOL: 0
;PCODE: $00000F29 VOL: 0
;PCODE: $00000F2A VOL: 0
;PCODE: $00000F2B VOL: 0
;PCODE: $00000F2C VOL: 0
;PCODE: $00000F2D VOL: 0
;PCODE: $00000F2E VOL: 0
;PCODE: $00000F2F VOL: 0
;PCODE: $00000F30 VOL: 0
;PCODE: $00000F31 VOL: 0
;PCODE: $00000F32 VOL: 0
;PCODE: $00000F33 VOL: 0
;PCODE: $00000F34 VOL: 0
;PCODE: $00000F35 VOL: 0
;PCODE: $00000F36 VOL: 0
;PCODE: $00000F37 VOL: 0
;PCODE: $00000F38 VOL: 0
;PCODE: $00000F39 VOL: 0
;PCODE: $00000F3A VOL: 0
; 0000 05CF puts1(enthernet);
;PCODE: $00000F3B VOL: 0
;PCODE: $00000F3C VOL: 0
; 0000 05D0 sprintf(lcd, "Da luu nguong");
;PCODE: $00000F3D VOL: 0
;PCODE: $00000F3E VOL: 0
;PCODE: $00000F3F VOL: 0
;PCODE: $00000F40 VOL: 0
;PCODE: $00000F41 VOL: 0
;PCODE: $00000F42 VOL: 0
;PCODE: $00000F43 VOL: 0
;PCODE: $00000F44 VOL: 0
;PCODE: $00000F45 VOL: 0
; 0000 05D1 lcd_puts(lcd);
;PCODE: $00000F46 VOL: 0
;PCODE: $00000F47 VOL: 0
; 0000 05D2 lcd_gotoxy(3, 2);
;PCODE: $00000F48 VOL: 0
;PCODE: $00000F49 VOL: 0
;PCODE: $00000F4A VOL: 0
;PCODE: $00000F4B VOL: 0
; 0000 05D3 sprintf(lcd, "DC_low_1:%d,%dV", dc_low_1 / 10, dc_low_1 % 10);
;PCODE: $00000F4C VOL: 0
;PCODE: $00000F4D VOL: 0
;PCODE: $00000F4E VOL: 0
;PCODE: $00000F4F VOL: 0
;PCODE: $00000F50 VOL: 0
;PCODE: $00000F51 VOL: 0
;PCODE: $00000F52 VOL: 0
;PCODE: $00000F53 VOL: 0
;PCODE: $00000F54 VOL: 0
;PCODE: $00000F55 VOL: 0
;PCODE: $00000F56 VOL: 0
;PCODE: $00000F57 VOL: 0
;PCODE: $00000F58 VOL: 0
;PCODE: $00000F59 VOL: 0
;PCODE: $00000F5A VOL: 0
;PCODE: $00000F5B VOL: 0
;PCODE: $00000F5C VOL: 0
;PCODE: $00000F5D VOL: 0
;PCODE: $00000F5E VOL: 0
; 0000 05D4 lcd_puts(lcd);
;PCODE: $00000F5F VOL: 0
;PCODE: $00000F60 VOL: 0
; 0000 05D5 delay_ms(500);
;PCODE: $00000F61 VOL: 0
;PCODE: $00000F62 VOL: 0
; 0000 05D6 lcd_clear();
;PCODE: $00000F63 VOL: 0
; 0000 05D7 }
; 0000 05D8 else
;PCODE: $00000F64 VOL: 0
;PCODE: $00000F65 VOL: 0
; 0000 05D9 {
; 0000 05DA lcd_clear();
;PCODE: $00000F66 VOL: 0
; 0000 05DB lcd_gotoxy(2, 1);
;PCODE: $00000F67 VOL: 0
;PCODE: $00000F68 VOL: 0
;PCODE: $00000F69 VOL: 0
;PCODE: $00000F6A VOL: 0
; 0000 05DC lcd_puts("Kiem tra lai muc DC_low_1!");
;PCODE: $00000F6B VOL: 0
;PCODE: $00000F6C VOL: 0
;PCODE: $00000F6D VOL: 0
; 0000 05DD delay_ms(500);
;PCODE: $00000F6E VOL: 0
;PCODE: $00000F6F VOL: 0
; 0000 05DE lcd_clear();
;PCODE: $00000F70 VOL: 0
; 0000 05DF }
;PCODE: $00000F71 VOL: 0
; 0000 05E0 bit_phim = 0;
;PCODE: $00000F72 VOL: 0
;PCODE: $00000F73 VOL: 0
;PCODE: $00000F74 VOL: 0
; 0000 05E1 delay_ms(50);
;PCODE: $00000F75 VOL: 0
;PCODE: $00000F76 VOL: 0
;PCODE: $00000F77 VOL: 0
; 0000 05E2 }
; 0000 05E3 else
;PCODE: $00000F78 VOL: 0
;PCODE: $00000F79 VOL: 0
; 0000 05E4 {
; 0000 05E5 bit_phim = 1;
;PCODE: $00000F7A VOL: 0
;PCODE: $00000F7B VOL: 0
;PCODE: $00000F7C VOL: 0
; 0000 05E6 
; 0000 05E7 delay_ms(25);
;PCODE: $00000F7D VOL: 0
;PCODE: $00000F7E VOL: 0
;PCODE: $00000F7F VOL: 0
; 0000 05E8 }
;PCODE: $00000F80 VOL: 0
; 0000 05E9 };
;PCODE: $00000F81 VOL: 0
; 0000 05EA // hang 2
; 0000 05EB if (hang - 4 == 1)
;PCODE: $00000F82 VOL: 0
;PCODE: $00000F83 VOL: 0
;PCODE: $00000F84 VOL: 0
;PCODE: $00000F85 VOL: 0
; 0000 05EC {
; 0000 05ED 
; 0000 05EE switch (cot)
;PCODE: $00000F86 VOL: 0
; 0000 05EF {
; 0000 05F0 case 1:
;PCODE: $00000F87 VOL: 0
;PCODE: $00000F88 VOL: 0
;PCODE: $00000F89 VOL: 0
; 0000 05F1 
; 0000 05F2 lcd_gotoxy(10, 2);
;PCODE: $00000F8A VOL: 0
;PCODE: $00000F8B VOL: 0
;PCODE: $00000F8C VOL: 0
;PCODE: $00000F8D VOL: 0
; 0000 05F3 delay_ms(200);
;PCODE: $00000F8E VOL: 0
;PCODE: $00000F8F VOL: 0
;PCODE: $00000F90 VOL: 0
; 0000 05F4 lcd_putchar('_');
;PCODE: $00000F91 VOL: 0
;PCODE: $00000F92 VOL: 0
; 0000 05F5 // phim up
; 0000 05F6 
; 0000 05F7 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000F93 VOL: 0
;PCODE: $00000F94 VOL: 0
;PCODE: $00000F95 VOL: 0
;PCODE: $00000F96 VOL: 0
;PCODE: $00000F97 VOL: 0
;PCODE: $00000F98 VOL: 0
;PCODE: $00000F99 VOL: 0
;PCODE: $00000F9A VOL: 0
;PCODE: $00000F9B VOL: 0
;PCODE: $00000F9C VOL: 0
; 0000 05F8 {
; 0000 05F9 dc_low_2 = dc_low_2 + 100;
;PCODE: $00000F9D VOL: 0
;PCODE: $00000F9E VOL: 0
;PCODE: $00000F9F VOL: 0
; 0000 05FA if (dc_low_2 >= 1000)
;PCODE: $00000FA0 VOL: 0
;PCODE: $00000FA1 VOL: 0
;PCODE: $00000FA2 VOL: 0
; 0000 05FB dc_low_2 = dc_low_2 - 1000;
;PCODE: $00000FA3 VOL: 0
;PCODE: $00000FA4 VOL: 0
;PCODE: $00000FA5 VOL: 0
; 0000 05FC bit_phim = 0;
;PCODE: $00000FA6 VOL: 0
;PCODE: $00000FA7 VOL: 0
;PCODE: $00000FA8 VOL: 0
;PCODE: $00000FA9 VOL: 0
; 0000 05FD delay_ms(50);
;PCODE: $00000FAA VOL: 0
;PCODE: $00000FAB VOL: 0
;PCODE: $00000FAC VOL: 0
; 0000 05FE }
; 0000 05FF else
;PCODE: $00000FAD VOL: 0
;PCODE: $00000FAE VOL: 0
; 0000 0600 {
; 0000 0601 bit_phim = 1;
;PCODE: $00000FAF VOL: 0
;PCODE: $00000FB0 VOL: 0
;PCODE: $00000FB1 VOL: 0
; 0000 0602 delay_ms(25);
;PCODE: $00000FB2 VOL: 0
;PCODE: $00000FB3 VOL: 0
;PCODE: $00000FB4 VOL: 0
; 0000 0603 }
;PCODE: $00000FB5 VOL: 0
; 0000 0604 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00000FB6 VOL: 0
;PCODE: $00000FB7 VOL: 0
;PCODE: $00000FB8 VOL: 0
;PCODE: $00000FB9 VOL: 0
;PCODE: $00000FBA VOL: 0
;PCODE: $00000FBB VOL: 0
;PCODE: $00000FBC VOL: 0
;PCODE: $00000FBD VOL: 0
;PCODE: $00000FBE VOL: 0
;PCODE: $00000FBF VOL: 0
; 0000 0605 {
; 0000 0606 dc_low_2 = dc_low_2 - 100;
;PCODE: $00000FC0 VOL: 0
;PCODE: $00000FC1 VOL: 0
;PCODE: $00000FC2 VOL: 0
; 0000 0607 if (dc_low_2 < 0)
;PCODE: $00000FC3 VOL: 0
;PCODE: $00000FC4 VOL: 0
;PCODE: $00000FC5 VOL: 0
; 0000 0608 dc_low_2 = dc_low_2 + 1000;
;PCODE: $00000FC6 VOL: 0
;PCODE: $00000FC7 VOL: 0
;PCODE: $00000FC8 VOL: 0
; 0000 0609 bit_phim = 0;
;PCODE: $00000FC9 VOL: 0
;PCODE: $00000FCA VOL: 0
;PCODE: $00000FCB VOL: 0
;PCODE: $00000FCC VOL: 0
; 0000 060A delay_ms(50);
;PCODE: $00000FCD VOL: 0
;PCODE: $00000FCE VOL: 0
;PCODE: $00000FCF VOL: 0
; 0000 060B }
; 0000 060C else
;PCODE: $00000FD0 VOL: 0
;PCODE: $00000FD1 VOL: 0
; 0000 060D {
; 0000 060E bit_phim = 1;
;PCODE: $00000FD2 VOL: 0
;PCODE: $00000FD3 VOL: 0
;PCODE: $00000FD4 VOL: 0
; 0000 060F delay_ms(25);
;PCODE: $00000FD5 VOL: 0
;PCODE: $00000FD6 VOL: 0
;PCODE: $00000FD7 VOL: 0
; 0000 0610 }
;PCODE: $00000FD8 VOL: 0
; 0000 0611 break;
;PCODE: $00000FD9 VOL: 0
; 0000 0612 case 2:
;PCODE: $00000FDA VOL: 0
;PCODE: $00000FDB VOL: 0
;PCODE: $00000FDC VOL: 0
;PCODE: $00000FDD VOL: 0
; 0000 0613 
; 0000 0614 lcd_gotoxy(11, 2);
;PCODE: $00000FDE VOL: 0
;PCODE: $00000FDF VOL: 0
;PCODE: $00000FE0 VOL: 0
;PCODE: $00000FE1 VOL: 0
; 0000 0615 delay_ms(200);
;PCODE: $00000FE2 VOL: 0
;PCODE: $00000FE3 VOL: 0
;PCODE: $00000FE4 VOL: 0
; 0000 0616 lcd_putchar('_');
;PCODE: $00000FE5 VOL: 0
;PCODE: $00000FE6 VOL: 0
; 0000 0617 
; 0000 0618 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00000FE7 VOL: 0
;PCODE: $00000FE8 VOL: 0
;PCODE: $00000FE9 VOL: 0
;PCODE: $00000FEA VOL: 0
;PCODE: $00000FEB VOL: 0
;PCODE: $00000FEC VOL: 0
;PCODE: $00000FED VOL: 0
;PCODE: $00000FEE VOL: 0
;PCODE: $00000FEF VOL: 0
;PCODE: $00000FF0 VOL: 0
; 0000 0619 {
; 0000 061A dc_low_2 = dc_low_2 + 10;
;PCODE: $00000FF1 VOL: 0
;PCODE: $00000FF2 VOL: 0
;PCODE: $00000FF3 VOL: 0
; 0000 061B if (((dc_low_2 - 10) / 10) % 10 == 9)
;PCODE: $00000FF4 VOL: 0
;PCODE: $00000FF5 VOL: 0
;PCODE: $00000FF6 VOL: 0
;PCODE: $00000FF7 VOL: 0
;PCODE: $00000FF8 VOL: 0
;PCODE: $00000FF9 VOL: 0
;PCODE: $00000FFA VOL: 0
;PCODE: $00000FFB VOL: 0
;PCODE: $00000FFC VOL: 0
; 0000 061C dc_low_2 = dc_low_2 - 100;
;PCODE: $00000FFD VOL: 0
;PCODE: $00000FFE VOL: 0
;PCODE: $00000FFF VOL: 0
; 0000 061D bit_phim = 0;
;PCODE: $00001000 VOL: 0
;PCODE: $00001001 VOL: 0
;PCODE: $00001002 VOL: 0
;PCODE: $00001003 VOL: 0
; 0000 061E delay_ms(50);
;PCODE: $00001004 VOL: 0
;PCODE: $00001005 VOL: 0
;PCODE: $00001006 VOL: 0
; 0000 061F }
; 0000 0620 else
;PCODE: $00001007 VOL: 0
;PCODE: $00001008 VOL: 0
; 0000 0621 {
; 0000 0622 bit_phim = 1;
;PCODE: $00001009 VOL: 0
;PCODE: $0000100A VOL: 0
;PCODE: $0000100B VOL: 0
; 0000 0623 delay_ms(25);
;PCODE: $0000100C VOL: 0
;PCODE: $0000100D VOL: 0
;PCODE: $0000100E VOL: 0
; 0000 0624 }
;PCODE: $0000100F VOL: 0
; 0000 0625 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001010 VOL: 0
;PCODE: $00001011 VOL: 0
;PCODE: $00001012 VOL: 0
;PCODE: $00001013 VOL: 0
;PCODE: $00001014 VOL: 0
;PCODE: $00001015 VOL: 0
;PCODE: $00001016 VOL: 0
;PCODE: $00001017 VOL: 0
;PCODE: $00001018 VOL: 0
;PCODE: $00001019 VOL: 0
; 0000 0626 {
; 0000 0627 dc_low_2 = dc_low_2 - 10;
;PCODE: $0000101A VOL: 0
;PCODE: $0000101B VOL: 0
;PCODE: $0000101C VOL: 0
; 0000 0628 if (((dc_low_2 + 10) / 10) % 10 == 0)
;PCODE: $0000101D VOL: 0
;PCODE: $0000101E VOL: 0
;PCODE: $0000101F VOL: 0
;PCODE: $00001020 VOL: 0
;PCODE: $00001021 VOL: 0
;PCODE: $00001022 VOL: 0
;PCODE: $00001023 VOL: 0
;PCODE: $00001024 VOL: 0
;PCODE: $00001025 VOL: 0
; 0000 0629 dc_low_2 = dc_low_2 + 100;
;PCODE: $00001026 VOL: 0
;PCODE: $00001027 VOL: 0
;PCODE: $00001028 VOL: 0
; 0000 062A bit_phim = 0;
;PCODE: $00001029 VOL: 0
;PCODE: $0000102A VOL: 0
;PCODE: $0000102B VOL: 0
;PCODE: $0000102C VOL: 0
; 0000 062B delay_ms(50);
;PCODE: $0000102D VOL: 0
;PCODE: $0000102E VOL: 0
;PCODE: $0000102F VOL: 0
; 0000 062C }
; 0000 062D else
;PCODE: $00001030 VOL: 0
;PCODE: $00001031 VOL: 0
; 0000 062E {
; 0000 062F bit_phim = 1;
;PCODE: $00001032 VOL: 0
;PCODE: $00001033 VOL: 0
;PCODE: $00001034 VOL: 0
; 0000 0630 delay_ms(25);
;PCODE: $00001035 VOL: 0
;PCODE: $00001036 VOL: 0
;PCODE: $00001037 VOL: 0
; 0000 0631 }
;PCODE: $00001038 VOL: 0
; 0000 0632 break;
;PCODE: $00001039 VOL: 0
; 0000 0633 case 3:
;PCODE: $0000103A VOL: 0
;PCODE: $0000103B VOL: 0
;PCODE: $0000103C VOL: 0
;PCODE: $0000103D VOL: 0
; 0000 0634 
; 0000 0635 lcd_gotoxy(13, 2);
;PCODE: $0000103E VOL: 0
;PCODE: $0000103F VOL: 0
;PCODE: $00001040 VOL: 0
;PCODE: $00001041 VOL: 0
; 0000 0636 delay_ms(200);
;PCODE: $00001042 VOL: 0
;PCODE: $00001043 VOL: 0
;PCODE: $00001044 VOL: 0
; 0000 0637 lcd_putchar('_');
;PCODE: $00001045 VOL: 0
;PCODE: $00001046 VOL: 0
; 0000 0638 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001047 VOL: 0
;PCODE: $00001048 VOL: 0
;PCODE: $00001049 VOL: 0
;PCODE: $0000104A VOL: 0
;PCODE: $0000104B VOL: 0
;PCODE: $0000104C VOL: 0
;PCODE: $0000104D VOL: 0
;PCODE: $0000104E VOL: 0
;PCODE: $0000104F VOL: 0
;PCODE: $00001050 VOL: 0
; 0000 0639 {
; 0000 063A dc_low_2++;
;PCODE: $00001051 VOL: 0
;PCODE: $00001052 VOL: 0
;PCODE: $00001053 VOL: 0
;PCODE: $00001054 VOL: 0
; 0000 063B if (((dc_low_2 - 1) % 10) == 9)
;PCODE: $00001055 VOL: 0
;PCODE: $00001056 VOL: 0
;PCODE: $00001057 VOL: 0
;PCODE: $00001058 VOL: 0
;PCODE: $00001059 VOL: 0
;PCODE: $0000105A VOL: 0
; 0000 063C dc_low_2 = dc_low_2 - 10;
;PCODE: $0000105B VOL: 0
;PCODE: $0000105C VOL: 0
;PCODE: $0000105D VOL: 0
; 0000 063D bit_phim = 0;
;PCODE: $0000105E VOL: 0
;PCODE: $0000105F VOL: 0
;PCODE: $00001060 VOL: 0
;PCODE: $00001061 VOL: 0
; 0000 063E delay_ms(50);
;PCODE: $00001062 VOL: 0
;PCODE: $00001063 VOL: 0
;PCODE: $00001064 VOL: 0
; 0000 063F }
; 0000 0640 else
;PCODE: $00001065 VOL: 0
;PCODE: $00001066 VOL: 0
; 0000 0641 {
; 0000 0642 bit_phim = 1;
;PCODE: $00001067 VOL: 0
;PCODE: $00001068 VOL: 0
;PCODE: $00001069 VOL: 0
; 0000 0643 delay_ms(25);
;PCODE: $0000106A VOL: 0
;PCODE: $0000106B VOL: 0
;PCODE: $0000106C VOL: 0
; 0000 0644 }
;PCODE: $0000106D VOL: 0
; 0000 0645 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $0000106E VOL: 0
;PCODE: $0000106F VOL: 0
;PCODE: $00001070 VOL: 0
;PCODE: $00001071 VOL: 0
;PCODE: $00001072 VOL: 0
;PCODE: $00001073 VOL: 0
;PCODE: $00001074 VOL: 0
;PCODE: $00001075 VOL: 0
;PCODE: $00001076 VOL: 0
;PCODE: $00001077 VOL: 0
; 0000 0646 {
; 0000 0647 dc_low_2--;
;PCODE: $00001078 VOL: 0
;PCODE: $00001079 VOL: 0
;PCODE: $0000107A VOL: 0
;PCODE: $0000107B VOL: 0
; 0000 0648 if (((dc_low_2 + 1) % 10) == 0)
;PCODE: $0000107C VOL: 0
;PCODE: $0000107D VOL: 0
;PCODE: $0000107E VOL: 0
;PCODE: $0000107F VOL: 0
;PCODE: $00001080 VOL: 0
;PCODE: $00001081 VOL: 0
; 0000 0649 dc_low_2 = dc_low_2 + 10;
;PCODE: $00001082 VOL: 0
;PCODE: $00001083 VOL: 0
;PCODE: $00001084 VOL: 0
; 0000 064A bit_phim = 0;
;PCODE: $00001085 VOL: 0
;PCODE: $00001086 VOL: 0
;PCODE: $00001087 VOL: 0
;PCODE: $00001088 VOL: 0
; 0000 064B delay_ms(50);
;PCODE: $00001089 VOL: 0
;PCODE: $0000108A VOL: 0
;PCODE: $0000108B VOL: 0
; 0000 064C }
; 0000 064D else
;PCODE: $0000108C VOL: 0
;PCODE: $0000108D VOL: 0
; 0000 064E {
; 0000 064F bit_phim = 1;
;PCODE: $0000108E VOL: 0
;PCODE: $0000108F VOL: 0
;PCODE: $00001090 VOL: 0
; 0000 0650 delay_ms(25);
;PCODE: $00001091 VOL: 0
;PCODE: $00001092 VOL: 0
;PCODE: $00001093 VOL: 0
; 0000 0651 }
;PCODE: $00001094 VOL: 0
; 0000 0652 break;
;PCODE: $00001095 VOL: 0
; 0000 0653 default:
;PCODE: $00001096 VOL: 0
; 0000 0654 cot = 1;
;PCODE: $00001097 VOL: 0
;PCODE: $00001098 VOL: 0
; 0000 0655 delay_ms(25);
;PCODE: $00001099 VOL: 0
;PCODE: $0000109A VOL: 0
;PCODE: $0000109B VOL: 0
; 0000 0656 break;
;PCODE: $0000109C VOL: 0
; 0000 0657 }
;PCODE: $0000109D VOL: 0
; 0000 0658 // luu
; 0000 0659 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $0000109E VOL: 0
;PCODE: $0000109F VOL: 0
;PCODE: $000010A0 VOL: 0
;PCODE: $000010A1 VOL: 0
;PCODE: $000010A2 VOL: 0
;PCODE: $000010A3 VOL: 0
;PCODE: $000010A4 VOL: 0
;PCODE: $000010A5 VOL: 0
;PCODE: $000010A6 VOL: 0
;PCODE: $000010A7 VOL: 0
; 0000 065A {
; 0000 065B if ((dc_low_2 != 0) & (dc_low_2 > EEPROM_read(31) * 10 + EEPROM_read(32)) & (dc_ ...
;PCODE: $000010A8 VOL: 0
;PCODE: $000010A9 VOL: 0
;PCODE: $000010AA VOL: 0
;PCODE: $000010AB VOL: 0
;PCODE: $000010AC VOL: 0
;PCODE: $000010AD VOL: 0
;PCODE: $000010AE VOL: 0
;PCODE: $000010AF VOL: 0
;PCODE: $000010B0 VOL: 0
;PCODE: $000010B1 VOL: 0
;PCODE: $000010B2 VOL: 0
;PCODE: $000010B3 VOL: 0
;PCODE: $000010B4 VOL: 0
;PCODE: $000010B5 VOL: 0
;PCODE: $000010B6 VOL: 0
;PCODE: $000010B7 VOL: 0
;PCODE: $000010B8 VOL: 0
;PCODE: $000010B9 VOL: 0
;PCODE: $000010BA VOL: 0
;PCODE: $000010BB VOL: 0
;PCODE: $000010BC VOL: 0
;PCODE: $000010BD VOL: 0
;PCODE: $000010BE VOL: 0
;PCODE: $000010BF VOL: 0
;PCODE: $000010C0 VOL: 0
;PCODE: $000010C1 VOL: 0
;PCODE: $000010C2 VOL: 0
;PCODE: $000010C3 VOL: 0
;PCODE: $000010C4 VOL: 0
;PCODE: $000010C5 VOL: 0
;PCODE: $000010C6 VOL: 0
;PCODE: $000010C7 VOL: 0
;PCODE: $000010C8 VOL: 0
;PCODE: $000010C9 VOL: 0
;PCODE: $000010CA VOL: 0
;PCODE: $000010CB VOL: 0
;PCODE: $000010CC VOL: 0
;PCODE: $000010CD VOL: 0
; 0000 065C {
; 0000 065D lcd_clear();
;PCODE: $000010CE VOL: 0
; 0000 065E EEPROM_write(33, dc_low_2 / 10);
;PCODE: $000010CF VOL: 0
;PCODE: $000010D0 VOL: 0
;PCODE: $000010D1 VOL: 0
;PCODE: $000010D2 VOL: 0
;PCODE: $000010D3 VOL: 0
;PCODE: $000010D4 VOL: 0
;PCODE: $000010D5 VOL: 0
; 0000 065F EEPROM_write(34, dc_low_2 % 10);
;PCODE: $000010D6 VOL: 0
;PCODE: $000010D7 VOL: 0
;PCODE: $000010D8 VOL: 0
;PCODE: $000010D9 VOL: 0
;PCODE: $000010DA VOL: 0
;PCODE: $000010DB VOL: 0
;PCODE: $000010DC VOL: 0
; 0000 0660 cot = 1;
;PCODE: $000010DD VOL: 0
;PCODE: $000010DE VOL: 0
; 0000 0661 lcd_gotoxy(3, 1);
;PCODE: $000010DF VOL: 0
;PCODE: $000010E0 VOL: 0
;PCODE: $000010E1 VOL: 0
;PCODE: $000010E2 VOL: 0
; 0000 0662 sprintf(enthernet, "%s,dienap_low1,%d.%d", IP, dc_low_2 / 10, dc_low_2 % 10);
;PCODE: $000010E3 VOL: 0
;PCODE: $000010E4 VOL: 0
;PCODE: $000010E5 VOL: 0
;PCODE: $000010E6 VOL: 0
;PCODE: $000010E7 VOL: 0
;PCODE: $000010E8 VOL: 0
;PCODE: $000010E9 VOL: 0
;PCODE: $000010EA VOL: 0
;PCODE: $000010EB VOL: 0
;PCODE: $000010EC VOL: 0
;PCODE: $000010ED VOL: 0
;PCODE: $000010EE VOL: 0
;PCODE: $000010EF VOL: 0
;PCODE: $000010F0 VOL: 0
;PCODE: $000010F1 VOL: 0
;PCODE: $000010F2 VOL: 0
;PCODE: $000010F3 VOL: 0
;PCODE: $000010F4 VOL: 0
;PCODE: $000010F5 VOL: 0
;PCODE: $000010F6 VOL: 0
;PCODE: $000010F7 VOL: 0
;PCODE: $000010F8 VOL: 0
; 0000 0663 puts1(enthernet);
;PCODE: $000010F9 VOL: 0
;PCODE: $000010FA VOL: 0
; 0000 0664 sprintf(lcd, "Da luu nguong");
;PCODE: $000010FB VOL: 0
;PCODE: $000010FC VOL: 0
;PCODE: $000010FD VOL: 0
;PCODE: $000010FE VOL: 0
;PCODE: $000010FF VOL: 0
;PCODE: $00001100 VOL: 0
;PCODE: $00001101 VOL: 0
;PCODE: $00001102 VOL: 0
;PCODE: $00001103 VOL: 0
; 0000 0665 lcd_puts(lcd);
;PCODE: $00001104 VOL: 0
;PCODE: $00001105 VOL: 0
; 0000 0666 lcd_gotoxy(3, 2);
;PCODE: $00001106 VOL: 0
;PCODE: $00001107 VOL: 0
;PCODE: $00001108 VOL: 0
;PCODE: $00001109 VOL: 0
; 0000 0667 sprintf(lcd, "Dc_low_2:%d,%dV", dc_low_2 / 10, dc_low_2 % 10);
;PCODE: $0000110A VOL: 0
;PCODE: $0000110B VOL: 0
;PCODE: $0000110C VOL: 0
;PCODE: $0000110D VOL: 0
;PCODE: $0000110E VOL: 0
;PCODE: $0000110F VOL: 0
;PCODE: $00001110 VOL: 0
;PCODE: $00001111 VOL: 0
;PCODE: $00001112 VOL: 0
;PCODE: $00001113 VOL: 0
;PCODE: $00001114 VOL: 0
;PCODE: $00001115 VOL: 0
;PCODE: $00001116 VOL: 0
;PCODE: $00001117 VOL: 0
;PCODE: $00001118 VOL: 0
;PCODE: $00001119 VOL: 0
;PCODE: $0000111A VOL: 0
;PCODE: $0000111B VOL: 0
;PCODE: $0000111C VOL: 0
; 0000 0668 lcd_puts(lcd);
;PCODE: $0000111D VOL: 0
;PCODE: $0000111E VOL: 0
; 0000 0669 delay_ms(500);
;PCODE: $0000111F VOL: 0
;PCODE: $00001120 VOL: 0
; 0000 066A lcd_clear();
;PCODE: $00001121 VOL: 0
; 0000 066B }
; 0000 066C else
;PCODE: $00001122 VOL: 0
;PCODE: $00001123 VOL: 0
; 0000 066D {
; 0000 066E lcd_clear();
;PCODE: $00001124 VOL: 0
; 0000 066F lcd_gotoxy(2, 1);
;PCODE: $00001125 VOL: 0
;PCODE: $00001126 VOL: 0
;PCODE: $00001127 VOL: 0
;PCODE: $00001128 VOL: 0
; 0000 0670 lcd_puts("Kiem tra lai muc Dc_low_2!");
;PCODE: $00001129 VOL: 0
;PCODE: $0000112A VOL: 0
;PCODE: $0000112B VOL: 0
; 0000 0671 delay_ms(500);
;PCODE: $0000112C VOL: 0
;PCODE: $0000112D VOL: 0
; 0000 0672 lcd_clear();
;PCODE: $0000112E VOL: 0
; 0000 0673 }
;PCODE: $0000112F VOL: 0
; 0000 0674 bit_phim = 0;
;PCODE: $00001130 VOL: 0
;PCODE: $00001131 VOL: 0
;PCODE: $00001132 VOL: 0
; 0000 0675 delay_ms(50);
;PCODE: $00001133 VOL: 0
;PCODE: $00001134 VOL: 0
;PCODE: $00001135 VOL: 0
; 0000 0676 }
; 0000 0677 else
;PCODE: $00001136 VOL: 0
;PCODE: $00001137 VOL: 0
; 0000 0678 {
; 0000 0679 bit_phim = 1;
;PCODE: $00001138 VOL: 0
;PCODE: $00001139 VOL: 0
;PCODE: $0000113A VOL: 0
; 0000 067A 
; 0000 067B delay_ms(25);
;PCODE: $0000113B VOL: 0
;PCODE: $0000113C VOL: 0
;PCODE: $0000113D VOL: 0
; 0000 067C }
;PCODE: $0000113E VOL: 0
; 0000 067D };
;PCODE: $0000113F VOL: 0
; 0000 067E if (hang - 4 == 2)
;PCODE: $00001140 VOL: 0
;PCODE: $00001141 VOL: 0
;PCODE: $00001142 VOL: 0
;PCODE: $00001143 VOL: 0
; 0000 067F {
; 0000 0680 
; 0000 0681 switch (cot)
;PCODE: $00001144 VOL: 0
; 0000 0682 {
; 0000 0683 case 1:
;PCODE: $00001145 VOL: 0
;PCODE: $00001146 VOL: 0
;PCODE: $00001147 VOL: 0
; 0000 0684 
; 0000 0685 lcd_gotoxy(10, 3);
;PCODE: $00001148 VOL: 0
;PCODE: $00001149 VOL: 0
;PCODE: $0000114A VOL: 0
;PCODE: $0000114B VOL: 0
; 0000 0686 delay_ms(200);
;PCODE: $0000114C VOL: 0
;PCODE: $0000114D VOL: 0
;PCODE: $0000114E VOL: 0
; 0000 0687 lcd_putchar('_');
;PCODE: $0000114F VOL: 0
;PCODE: $00001150 VOL: 0
; 0000 0688 // phim up
; 0000 0689 
; 0000 068A if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001151 VOL: 0
;PCODE: $00001152 VOL: 0
;PCODE: $00001153 VOL: 0
;PCODE: $00001154 VOL: 0
;PCODE: $00001155 VOL: 0
;PCODE: $00001156 VOL: 0
;PCODE: $00001157 VOL: 0
;PCODE: $00001158 VOL: 0
;PCODE: $00001159 VOL: 0
;PCODE: $0000115A VOL: 0
; 0000 068B {
; 0000 068C dc_high = dc_high + 100;
;PCODE: $0000115B VOL: 0
;PCODE: $0000115C VOL: 0
;PCODE: $0000115D VOL: 0
; 0000 068D if (dc_high >= 1000)
;PCODE: $0000115E VOL: 0
;PCODE: $0000115F VOL: 0
;PCODE: $00001160 VOL: 0
; 0000 068E dc_high = dc_high - 1000;
;PCODE: $00001161 VOL: 0
;PCODE: $00001162 VOL: 0
;PCODE: $00001163 VOL: 0
; 0000 068F bit_phim = 0;
;PCODE: $00001164 VOL: 0
;PCODE: $00001165 VOL: 0
;PCODE: $00001166 VOL: 0
;PCODE: $00001167 VOL: 0
; 0000 0690 delay_ms(50);
;PCODE: $00001168 VOL: 0
;PCODE: $00001169 VOL: 0
;PCODE: $0000116A VOL: 0
; 0000 0691 }
; 0000 0692 else
;PCODE: $0000116B VOL: 0
;PCODE: $0000116C VOL: 0
; 0000 0693 {
; 0000 0694 bit_phim = 1;
;PCODE: $0000116D VOL: 0
;PCODE: $0000116E VOL: 0
;PCODE: $0000116F VOL: 0
; 0000 0695 delay_ms(25);
;PCODE: $00001170 VOL: 0
;PCODE: $00001171 VOL: 0
;PCODE: $00001172 VOL: 0
; 0000 0696 }
;PCODE: $00001173 VOL: 0
; 0000 0697 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001174 VOL: 0
;PCODE: $00001175 VOL: 0
;PCODE: $00001176 VOL: 0
;PCODE: $00001177 VOL: 0
;PCODE: $00001178 VOL: 0
;PCODE: $00001179 VOL: 0
;PCODE: $0000117A VOL: 0
;PCODE: $0000117B VOL: 0
;PCODE: $0000117C VOL: 0
;PCODE: $0000117D VOL: 0
; 0000 0698 {
; 0000 0699 dc_high = dc_high - 100;
;PCODE: $0000117E VOL: 0
;PCODE: $0000117F VOL: 0
;PCODE: $00001180 VOL: 0
; 0000 069A if (dc_high < 0)
;PCODE: $00001181 VOL: 0
;PCODE: $00001182 VOL: 0
;PCODE: $00001183 VOL: 0
; 0000 069B dc_high = dc_high + 1000;
;PCODE: $00001184 VOL: 0
;PCODE: $00001185 VOL: 0
;PCODE: $00001186 VOL: 0
; 0000 069C bit_phim = 0;
;PCODE: $00001187 VOL: 0
;PCODE: $00001188 VOL: 0
;PCODE: $00001189 VOL: 0
;PCODE: $0000118A VOL: 0
; 0000 069D delay_ms(50);
;PCODE: $0000118B VOL: 0
;PCODE: $0000118C VOL: 0
;PCODE: $0000118D VOL: 0
; 0000 069E }
; 0000 069F else
;PCODE: $0000118E VOL: 0
;PCODE: $0000118F VOL: 0
; 0000 06A0 {
; 0000 06A1 bit_phim = 1;
;PCODE: $00001190 VOL: 0
;PCODE: $00001191 VOL: 0
;PCODE: $00001192 VOL: 0
; 0000 06A2 delay_ms(25);
;PCODE: $00001193 VOL: 0
;PCODE: $00001194 VOL: 0
;PCODE: $00001195 VOL: 0
; 0000 06A3 }
;PCODE: $00001196 VOL: 0
; 0000 06A4 break;
;PCODE: $00001197 VOL: 0
; 0000 06A5 case 2:
;PCODE: $00001198 VOL: 0
;PCODE: $00001199 VOL: 0
;PCODE: $0000119A VOL: 0
;PCODE: $0000119B VOL: 0
; 0000 06A6 
; 0000 06A7 lcd_gotoxy(11, 3);
;PCODE: $0000119C VOL: 0
;PCODE: $0000119D VOL: 0
;PCODE: $0000119E VOL: 0
;PCODE: $0000119F VOL: 0
; 0000 06A8 delay_ms(200);
;PCODE: $000011A0 VOL: 0
;PCODE: $000011A1 VOL: 0
;PCODE: $000011A2 VOL: 0
; 0000 06A9 lcd_putchar('_');
;PCODE: $000011A3 VOL: 0
;PCODE: $000011A4 VOL: 0
; 0000 06AA 
; 0000 06AB if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000011A5 VOL: 0
;PCODE: $000011A6 VOL: 0
;PCODE: $000011A7 VOL: 0
;PCODE: $000011A8 VOL: 0
;PCODE: $000011A9 VOL: 0
;PCODE: $000011AA VOL: 0
;PCODE: $000011AB VOL: 0
;PCODE: $000011AC VOL: 0
;PCODE: $000011AD VOL: 0
;PCODE: $000011AE VOL: 0
; 0000 06AC {
; 0000 06AD dc_high = dc_high + 10;
;PCODE: $000011AF VOL: 0
;PCODE: $000011B0 VOL: 0
;PCODE: $000011B1 VOL: 0
; 0000 06AE if (((dc_high - 10) / 10) % 10 == 9)
;PCODE: $000011B2 VOL: 0
;PCODE: $000011B3 VOL: 0
;PCODE: $000011B4 VOL: 0
;PCODE: $000011B5 VOL: 0
;PCODE: $000011B6 VOL: 0
;PCODE: $000011B7 VOL: 0
;PCODE: $000011B8 VOL: 0
;PCODE: $000011B9 VOL: 0
;PCODE: $000011BA VOL: 0
; 0000 06AF dc_high = dc_high - 100;
;PCODE: $000011BB VOL: 0
;PCODE: $000011BC VOL: 0
;PCODE: $000011BD VOL: 0
; 0000 06B0 bit_phim = 0;
;PCODE: $000011BE VOL: 0
;PCODE: $000011BF VOL: 0
;PCODE: $000011C0 VOL: 0
;PCODE: $000011C1 VOL: 0
; 0000 06B1 delay_ms(50);
;PCODE: $000011C2 VOL: 0
;PCODE: $000011C3 VOL: 0
;PCODE: $000011C4 VOL: 0
; 0000 06B2 }
; 0000 06B3 else
;PCODE: $000011C5 VOL: 0
;PCODE: $000011C6 VOL: 0
; 0000 06B4 {
; 0000 06B5 bit_phim = 1;
;PCODE: $000011C7 VOL: 0
;PCODE: $000011C8 VOL: 0
;PCODE: $000011C9 VOL: 0
; 0000 06B6 delay_ms(25);
;PCODE: $000011CA VOL: 0
;PCODE: $000011CB VOL: 0
;PCODE: $000011CC VOL: 0
; 0000 06B7 }
;PCODE: $000011CD VOL: 0
; 0000 06B8 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000011CE VOL: 0
;PCODE: $000011CF VOL: 0
;PCODE: $000011D0 VOL: 0
;PCODE: $000011D1 VOL: 0
;PCODE: $000011D2 VOL: 0
;PCODE: $000011D3 VOL: 0
;PCODE: $000011D4 VOL: 0
;PCODE: $000011D5 VOL: 0
;PCODE: $000011D6 VOL: 0
;PCODE: $000011D7 VOL: 0
; 0000 06B9 {
; 0000 06BA dc_high = dc_high - 10;
;PCODE: $000011D8 VOL: 0
;PCODE: $000011D9 VOL: 0
;PCODE: $000011DA VOL: 0
; 0000 06BB if (((dc_high + 10) / 10) % 10 == 0)
;PCODE: $000011DB VOL: 0
;PCODE: $000011DC VOL: 0
;PCODE: $000011DD VOL: 0
;PCODE: $000011DE VOL: 0
;PCODE: $000011DF VOL: 0
;PCODE: $000011E0 VOL: 0
;PCODE: $000011E1 VOL: 0
;PCODE: $000011E2 VOL: 0
;PCODE: $000011E3 VOL: 0
; 0000 06BC dc_high = dc_high + 100;
;PCODE: $000011E4 VOL: 0
;PCODE: $000011E5 VOL: 0
;PCODE: $000011E6 VOL: 0
; 0000 06BD bit_phim = 0;
;PCODE: $000011E7 VOL: 0
;PCODE: $000011E8 VOL: 0
;PCODE: $000011E9 VOL: 0
;PCODE: $000011EA VOL: 0
; 0000 06BE delay_ms(50);
;PCODE: $000011EB VOL: 0
;PCODE: $000011EC VOL: 0
;PCODE: $000011ED VOL: 0
; 0000 06BF }
; 0000 06C0 else
;PCODE: $000011EE VOL: 0
;PCODE: $000011EF VOL: 0
; 0000 06C1 {
; 0000 06C2 bit_phim = 1;
;PCODE: $000011F0 VOL: 0
;PCODE: $000011F1 VOL: 0
;PCODE: $000011F2 VOL: 0
; 0000 06C3 delay_ms(25);
;PCODE: $000011F3 VOL: 0
;PCODE: $000011F4 VOL: 0
;PCODE: $000011F5 VOL: 0
; 0000 06C4 }
;PCODE: $000011F6 VOL: 0
; 0000 06C5 break;
;PCODE: $000011F7 VOL: 0
; 0000 06C6 case 3:
;PCODE: $000011F8 VOL: 0
;PCODE: $000011F9 VOL: 0
;PCODE: $000011FA VOL: 0
;PCODE: $000011FB VOL: 0
; 0000 06C7 
; 0000 06C8 lcd_gotoxy(13, 3);
;PCODE: $000011FC VOL: 0
;PCODE: $000011FD VOL: 0
;PCODE: $000011FE VOL: 0
;PCODE: $000011FF VOL: 0
; 0000 06C9 delay_ms(200);
;PCODE: $00001200 VOL: 0
;PCODE: $00001201 VOL: 0
;PCODE: $00001202 VOL: 0
; 0000 06CA lcd_putchar('_');
;PCODE: $00001203 VOL: 0
;PCODE: $00001204 VOL: 0
; 0000 06CB if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001205 VOL: 0
;PCODE: $00001206 VOL: 0
;PCODE: $00001207 VOL: 0
;PCODE: $00001208 VOL: 0
;PCODE: $00001209 VOL: 0
;PCODE: $0000120A VOL: 0
;PCODE: $0000120B VOL: 0
;PCODE: $0000120C VOL: 0
;PCODE: $0000120D VOL: 0
;PCODE: $0000120E VOL: 0
; 0000 06CC {
; 0000 06CD dc_high++;
;PCODE: $0000120F VOL: 0
;PCODE: $00001210 VOL: 0
;PCODE: $00001211 VOL: 0
;PCODE: $00001212 VOL: 0
; 0000 06CE if (((dc_high - 1) % 10) == 9)
;PCODE: $00001213 VOL: 0
;PCODE: $00001214 VOL: 0
;PCODE: $00001215 VOL: 0
;PCODE: $00001216 VOL: 0
;PCODE: $00001217 VOL: 0
;PCODE: $00001218 VOL: 0
; 0000 06CF dc_high = dc_high - 10;
;PCODE: $00001219 VOL: 0
;PCODE: $0000121A VOL: 0
;PCODE: $0000121B VOL: 0
; 0000 06D0 bit_phim = 0;
;PCODE: $0000121C VOL: 0
;PCODE: $0000121D VOL: 0
;PCODE: $0000121E VOL: 0
;PCODE: $0000121F VOL: 0
; 0000 06D1 delay_ms(50);
;PCODE: $00001220 VOL: 0
;PCODE: $00001221 VOL: 0
;PCODE: $00001222 VOL: 0
; 0000 06D2 }
; 0000 06D3 else
;PCODE: $00001223 VOL: 0
;PCODE: $00001224 VOL: 0
; 0000 06D4 {
; 0000 06D5 bit_phim = 1;
;PCODE: $00001225 VOL: 0
;PCODE: $00001226 VOL: 0
;PCODE: $00001227 VOL: 0
; 0000 06D6 delay_ms(25);
;PCODE: $00001228 VOL: 0
;PCODE: $00001229 VOL: 0
;PCODE: $0000122A VOL: 0
; 0000 06D7 }
;PCODE: $0000122B VOL: 0
; 0000 06D8 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $0000122C VOL: 0
;PCODE: $0000122D VOL: 0
;PCODE: $0000122E VOL: 0
;PCODE: $0000122F VOL: 0
;PCODE: $00001230 VOL: 0
;PCODE: $00001231 VOL: 0
;PCODE: $00001232 VOL: 0
;PCODE: $00001233 VOL: 0
;PCODE: $00001234 VOL: 0
;PCODE: $00001235 VOL: 0
; 0000 06D9 {
; 0000 06DA dc_high--;
;PCODE: $00001236 VOL: 0
;PCODE: $00001237 VOL: 0
;PCODE: $00001238 VOL: 0
;PCODE: $00001239 VOL: 0
; 0000 06DB if (((dc_high + 1) % 10) == 0)
;PCODE: $0000123A VOL: 0
;PCODE: $0000123B VOL: 0
;PCODE: $0000123C VOL: 0
;PCODE: $0000123D VOL: 0
;PCODE: $0000123E VOL: 0
;PCODE: $0000123F VOL: 0
; 0000 06DC dc_high = dc_high + 10;
;PCODE: $00001240 VOL: 0
;PCODE: $00001241 VOL: 0
;PCODE: $00001242 VOL: 0
; 0000 06DD bit_phim = 0;
;PCODE: $00001243 VOL: 0
;PCODE: $00001244 VOL: 0
;PCODE: $00001245 VOL: 0
;PCODE: $00001246 VOL: 0
; 0000 06DE delay_ms(50);
;PCODE: $00001247 VOL: 0
;PCODE: $00001248 VOL: 0
;PCODE: $00001249 VOL: 0
; 0000 06DF }
; 0000 06E0 else
;PCODE: $0000124A VOL: 0
;PCODE: $0000124B VOL: 0
; 0000 06E1 {
; 0000 06E2 bit_phim = 1;
;PCODE: $0000124C VOL: 0
;PCODE: $0000124D VOL: 0
;PCODE: $0000124E VOL: 0
; 0000 06E3 delay_ms(25);
;PCODE: $0000124F VOL: 0
;PCODE: $00001250 VOL: 0
;PCODE: $00001251 VOL: 0
; 0000 06E4 }
;PCODE: $00001252 VOL: 0
; 0000 06E5 break;
;PCODE: $00001253 VOL: 0
; 0000 06E6 default:
;PCODE: $00001254 VOL: 0
; 0000 06E7 cot = 1;
;PCODE: $00001255 VOL: 0
;PCODE: $00001256 VOL: 0
; 0000 06E8 delay_ms(25);
;PCODE: $00001257 VOL: 0
;PCODE: $00001258 VOL: 0
;PCODE: $00001259 VOL: 0
; 0000 06E9 break;
;PCODE: $0000125A VOL: 0
; 0000 06EA }
;PCODE: $0000125B VOL: 0
; 0000 06EB // luu
; 0000 06EC if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $0000125C VOL: 0
;PCODE: $0000125D VOL: 0
;PCODE: $0000125E VOL: 0
;PCODE: $0000125F VOL: 0
;PCODE: $00001260 VOL: 0
;PCODE: $00001261 VOL: 0
;PCODE: $00001262 VOL: 0
;PCODE: $00001263 VOL: 0
;PCODE: $00001264 VOL: 0
;PCODE: $00001265 VOL: 0
; 0000 06ED {
; 0000 06EE if ((dc_high != 0) & (dc_high > EEPROM_read(33) * 10 + EEPROM_read(34)))
;PCODE: $00001266 VOL: 0
;PCODE: $00001267 VOL: 0
;PCODE: $00001268 VOL: 0
;PCODE: $00001269 VOL: 0
;PCODE: $0000126A VOL: 0
;PCODE: $0000126B VOL: 0
;PCODE: $0000126C VOL: 0
;PCODE: $0000126D VOL: 0
;PCODE: $0000126E VOL: 0
;PCODE: $0000126F VOL: 0
;PCODE: $00001270 VOL: 0
;PCODE: $00001271 VOL: 0
;PCODE: $00001272 VOL: 0
;PCODE: $00001273 VOL: 0
;PCODE: $00001274 VOL: 0
;PCODE: $00001275 VOL: 0
;PCODE: $00001276 VOL: 0
;PCODE: $00001277 VOL: 0
;PCODE: $00001278 VOL: 0
;PCODE: $00001279 VOL: 0
;PCODE: $0000127A VOL: 0
; 0000 06EF {
; 0000 06F0 lcd_clear();
;PCODE: $0000127B VOL: 0
; 0000 06F1 EEPROM_write(35, dc_high / 10);
;PCODE: $0000127C VOL: 0
;PCODE: $0000127D VOL: 0
;PCODE: $0000127E VOL: 0
;PCODE: $0000127F VOL: 0
;PCODE: $00001280 VOL: 0
;PCODE: $00001281 VOL: 0
;PCODE: $00001282 VOL: 0
; 0000 06F2 EEPROM_write(36, dc_high % 10);
;PCODE: $00001283 VOL: 0
;PCODE: $00001284 VOL: 0
;PCODE: $00001285 VOL: 0
;PCODE: $00001286 VOL: 0
;PCODE: $00001287 VOL: 0
;PCODE: $00001288 VOL: 0
;PCODE: $00001289 VOL: 0
; 0000 06F3 cot = 1;
;PCODE: $0000128A VOL: 0
;PCODE: $0000128B VOL: 0
; 0000 06F4 lcd_gotoxy(3, 1);
;PCODE: $0000128C VOL: 0
;PCODE: $0000128D VOL: 0
;PCODE: $0000128E VOL: 0
;PCODE: $0000128F VOL: 0
; 0000 06F5 sprintf(enthernet, "%s,dienap_high,%d.%d", IP, dc_high / 10, dc_high % 10);
;PCODE: $00001290 VOL: 0
;PCODE: $00001291 VOL: 0
;PCODE: $00001292 VOL: 0
;PCODE: $00001293 VOL: 0
;PCODE: $00001294 VOL: 0
;PCODE: $00001295 VOL: 0
;PCODE: $00001296 VOL: 0
;PCODE: $00001297 VOL: 0
;PCODE: $00001298 VOL: 0
;PCODE: $00001299 VOL: 0
;PCODE: $0000129A VOL: 0
;PCODE: $0000129B VOL: 0
;PCODE: $0000129C VOL: 0
;PCODE: $0000129D VOL: 0
;PCODE: $0000129E VOL: 0
;PCODE: $0000129F VOL: 0
;PCODE: $000012A0 VOL: 0
;PCODE: $000012A1 VOL: 0
;PCODE: $000012A2 VOL: 0
;PCODE: $000012A3 VOL: 0
;PCODE: $000012A4 VOL: 0
;PCODE: $000012A5 VOL: 0
; 0000 06F6 puts1(enthernet);
;PCODE: $000012A6 VOL: 0
;PCODE: $000012A7 VOL: 0
; 0000 06F7 sprintf(lcd, "Da luu nguong");
;PCODE: $000012A8 VOL: 0
;PCODE: $000012A9 VOL: 0
;PCODE: $000012AA VOL: 0
;PCODE: $000012AB VOL: 0
;PCODE: $000012AC VOL: 0
;PCODE: $000012AD VOL: 0
;PCODE: $000012AE VOL: 0
;PCODE: $000012AF VOL: 0
;PCODE: $000012B0 VOL: 0
; 0000 06F8 lcd_puts(lcd);
;PCODE: $000012B1 VOL: 0
;PCODE: $000012B2 VOL: 0
; 0000 06F9 lcd_gotoxy(3, 2);
;PCODE: $000012B3 VOL: 0
;PCODE: $000012B4 VOL: 0
;PCODE: $000012B5 VOL: 0
;PCODE: $000012B6 VOL: 0
; 0000 06FA sprintf(lcd, "Dc_high:%d,%dV", dc_high / 10, dc_high % 10);
;PCODE: $000012B7 VOL: 0
;PCODE: $000012B8 VOL: 0
;PCODE: $000012B9 VOL: 0
;PCODE: $000012BA VOL: 0
;PCODE: $000012BB VOL: 0
;PCODE: $000012BC VOL: 0
;PCODE: $000012BD VOL: 0
;PCODE: $000012BE VOL: 0
;PCODE: $000012BF VOL: 0
;PCODE: $000012C0 VOL: 0
;PCODE: $000012C1 VOL: 0
;PCODE: $000012C2 VOL: 0
;PCODE: $000012C3 VOL: 0
;PCODE: $000012C4 VOL: 0
;PCODE: $000012C5 VOL: 0
;PCODE: $000012C6 VOL: 0
;PCODE: $000012C7 VOL: 0
;PCODE: $000012C8 VOL: 0
;PCODE: $000012C9 VOL: 0
; 0000 06FB lcd_puts(lcd);
;PCODE: $000012CA VOL: 0
;PCODE: $000012CB VOL: 0
; 0000 06FC delay_ms(500);
;PCODE: $000012CC VOL: 0
;PCODE: $000012CD VOL: 0
; 0000 06FD lcd_clear();
;PCODE: $000012CE VOL: 0
; 0000 06FE }
; 0000 06FF else
;PCODE: $000012CF VOL: 0
;PCODE: $000012D0 VOL: 0
; 0000 0700 {
; 0000 0701 lcd_clear();
;PCODE: $000012D1 VOL: 0
; 0000 0702 lcd_gotoxy(2, 1);
;PCODE: $000012D2 VOL: 0
;PCODE: $000012D3 VOL: 0
;PCODE: $000012D4 VOL: 0
;PCODE: $000012D5 VOL: 0
; 0000 0703 lcd_puts("Kiem tra lai muc Dc_high!");
;PCODE: $000012D6 VOL: 0
;PCODE: $000012D7 VOL: 0
;PCODE: $000012D8 VOL: 0
; 0000 0704 delay_ms(500);
;PCODE: $000012D9 VOL: 0
;PCODE: $000012DA VOL: 0
; 0000 0705 lcd_clear();
;PCODE: $000012DB VOL: 0
; 0000 0706 }
;PCODE: $000012DC VOL: 0
; 0000 0707 bit_phim = 0;
;PCODE: $000012DD VOL: 0
;PCODE: $000012DE VOL: 0
;PCODE: $000012DF VOL: 0
; 0000 0708 delay_ms(50);
;PCODE: $000012E0 VOL: 0
;PCODE: $000012E1 VOL: 0
;PCODE: $000012E2 VOL: 0
; 0000 0709 }
; 0000 070A else
;PCODE: $000012E3 VOL: 0
;PCODE: $000012E4 VOL: 0
; 0000 070B {
; 0000 070C bit_phim = 1;
;PCODE: $000012E5 VOL: 0
;PCODE: $000012E6 VOL: 0
;PCODE: $000012E7 VOL: 0
; 0000 070D 
; 0000 070E delay_ms(25);
;PCODE: $000012E8 VOL: 0
;PCODE: $000012E9 VOL: 0
;PCODE: $000012EA VOL: 0
; 0000 070F }
;PCODE: $000012EB VOL: 0
; 0000 0710 };
;PCODE: $000012EC VOL: 0
; 0000 0711 }
; 0000 0712 if (strcmp(hienthi, "sdt") == 0)
;PCODE: $000012ED VOL: 0
;PCODE: $000012EE VOL: 0
;PCODE: $000012EF VOL: 0
;PCODE: $000012F0 VOL: 0
;PCODE: $000012F1 VOL: 0
;PCODE: $000012F2 VOL: 0
;PCODE: $000012F3 VOL: 0
;PCODE: $000012F4 VOL: 0
; 0000 0713 {
; 0000 0714 for (i = 2; i < 4; i++)
;PCODE: $000012F5 VOL: 0
;PCODE: $000012F6 VOL: 0
;PCODE: $000012F7 VOL: 0
;PCODE: $000012F8 VOL: 0
;PCODE: $000012F9 VOL: 0
;PCODE: $000012FA VOL: 0
;PCODE: $000012FB VOL: 0
;PCODE: $000012FC VOL: 0
;PCODE: $000012FD VOL: 0
;PCODE: $000012FE VOL: 0
;PCODE: $000012FF VOL: 0
; 0000 0715 if (i == hang - 5)
;PCODE: $00001300 VOL: 0
;PCODE: $00001301 VOL: 0
;PCODE: $00001302 VOL: 0
;PCODE: $00001303 VOL: 0
;PCODE: $00001304 VOL: 0
; 0000 0716 {
; 0000 0717 lcd_gotoxy(19, i);
;PCODE: $00001305 VOL: 0
;PCODE: $00001306 VOL: 0
;PCODE: $00001307 VOL: 0
;PCODE: $00001308 VOL: 0
; 0000 0718 lcd_putchar('<');
;PCODE: $00001309 VOL: 0
;PCODE: $0000130A VOL: 0
; 0000 0719 }
; 0000 071A else
;PCODE: $0000130B VOL: 0
;PCODE: $0000130C VOL: 0
; 0000 071B {
; 0000 071C lcd_gotoxy(19, i);
;PCODE: $0000130D VOL: 0
;PCODE: $0000130E VOL: 0
;PCODE: $0000130F VOL: 0
;PCODE: $00001310 VOL: 0
; 0000 071D lcd_putchar(' ');
;PCODE: $00001311 VOL: 0
;PCODE: $00001312 VOL: 0
; 0000 071E }
;PCODE: $00001313 VOL: 0
;PCODE: $00001314 VOL: 0
;PCODE: $00001315 VOL: 0
;PCODE: $00001316 VOL: 0
;PCODE: $00001317 VOL: 0
;PCODE: $00001318 VOL: 0
;PCODE: $00001319 VOL: 0
;PCODE: $0000131A VOL: 0
; 0000 071F lcd_gotoxy(0, 0);
;PCODE: $0000131B VOL: 0
;PCODE: $0000131C VOL: 0
;PCODE: $0000131D VOL: 0
;PCODE: $0000131E VOL: 0
; 0000 0720 sprintf(lcd, "Cai dat SDT canh bao");
;PCODE: $0000131F VOL: 0
;PCODE: $00001320 VOL: 0
;PCODE: $00001321 VOL: 0
;PCODE: $00001322 VOL: 0
;PCODE: $00001323 VOL: 0
;PCODE: $00001324 VOL: 0
;PCODE: $00001325 VOL: 0
;PCODE: $00001326 VOL: 0
;PCODE: $00001327 VOL: 0
; 0000 0721 lcd_puts(lcd);
;PCODE: $00001328 VOL: 0
;PCODE: $00001329 VOL: 0
; 0000 0722 lcd_gotoxy(2, 1);
;PCODE: $0000132A VOL: 0
;PCODE: $0000132B VOL: 0
;PCODE: $0000132C VOL: 0
;PCODE: $0000132D VOL: 0
; 0000 0723 sprintf(lcd, "%s", tram);
;PCODE: $0000132E VOL: 0
;PCODE: $0000132F VOL: 0
;PCODE: $00001330 VOL: 0
;PCODE: $00001331 VOL: 0
;PCODE: $00001332 VOL: 0
;PCODE: $00001333 VOL: 0
;PCODE: $00001334 VOL: 0
;PCODE: $00001335 VOL: 0
;PCODE: $00001336 VOL: 0
;PCODE: $00001337 VOL: 0
;PCODE: $00001338 VOL: 0
;PCODE: $00001339 VOL: 0
; 0000 0724 lcd_puts(lcd);
;PCODE: $0000133A VOL: 0
;PCODE: $0000133B VOL: 0
; 0000 0725 // lcd_gotoxy(0, 2);
; 0000 0726 // sprintf(lcd, "Call: 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_ ...
; 0000 0727 // // sprintf(lcd, "Sms : 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, s ...
; 0000 0728 // lcd_puts(lcd);
; 0000 0729 lcd_gotoxy(0, 3);
;PCODE: $0000133C VOL: 0
;PCODE: $0000133D VOL: 0
;PCODE: $0000133E VOL: 0
;PCODE: $0000133F VOL: 0
; 0000 072A sprintf(lcd, "Sms : 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, ...
;PCODE: $00001340 VOL: 0
;PCODE: $00001341 VOL: 0
;PCODE: $00001342 VOL: 0
;PCODE: $00001343 VOL: 0
;PCODE: $00001344 VOL: 0
;PCODE: $00001345 VOL: 0
;PCODE: $00001346 VOL: 0
;PCODE: $00001347 VOL: 0
;PCODE: $00001348 VOL: 0
;PCODE: $00001349 VOL: 0
;PCODE: $0000134A VOL: 0
;PCODE: $0000134B VOL: 0
;PCODE: $0000134C VOL: 0
;PCODE: $0000134D VOL: 0
;PCODE: $0000134E VOL: 0
;PCODE: $0000134F VOL: 0
;PCODE: $00001350 VOL: 0
;PCODE: $00001351 VOL: 0
;PCODE: $00001352 VOL: 0
;PCODE: $00001353 VOL: 0
;PCODE: $00001354 VOL: 0
;PCODE: $00001355 VOL: 0
;PCODE: $00001356 VOL: 0
;PCODE: $00001357 VOL: 0
;PCODE: $00001358 VOL: 0
;PCODE: $00001359 VOL: 0
;PCODE: $0000135A VOL: 0
;PCODE: $0000135B VOL: 0
;PCODE: $0000135C VOL: 0
;PCODE: $0000135D VOL: 0
;PCODE: $0000135E VOL: 0
;PCODE: $0000135F VOL: 0
;PCODE: $00001360 VOL: 0
;PCODE: $00001361 VOL: 0
;PCODE: $00001362 VOL: 0
;PCODE: $00001363 VOL: 0
; 0000 072B lcd_puts(lcd);
;PCODE: $00001364 VOL: 0
;PCODE: $00001365 VOL: 0
; 0000 072C // hang 1
; 0000 072D // if (hang - 7 == 0)
; 0000 072E // {
; 0000 072F 
; 0000 0730 //    switch (cot)
; 0000 0731 //    {
; 0000 0732 //    case 1:
; 0000 0733 
; 0000 0734 //       lcd_gotoxy(7, 2);
; 0000 0735 //       delay_ms(200);
; 0000 0736 //       lcd_putchar('_');
; 0000 0737 //       // phim up
; 0000 0738 
; 0000 0739 //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 073A //       {
; 0000 073B //          sdt_call1++;
; 0000 073C //          if (sdt_call1 > 9)
; 0000 073D //             sdt_call1 = 0;
; 0000 073E //          bit_phim = 0;
; 0000 073F //          delay_ms(50);
; 0000 0740 //       }
; 0000 0741 //       else
; 0000 0742 //       {
; 0000 0743 //          bit_phim = 1;
; 0000 0744 //          delay_ms(25);
; 0000 0745 //       }
; 0000 0746 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0747 //       {
; 0000 0748 //          sdt_call1--;
; 0000 0749 //          if (sdt_call1 == -1)
; 0000 074A //             sdt_call1 = 9;
; 0000 074B //          bit_phim = 0;
; 0000 074C //          delay_ms(50);
; 0000 074D //       }
; 0000 074E //       else
; 0000 074F //       {
; 0000 0750 //          bit_phim = 1;
; 0000 0751 //          delay_ms(25);
; 0000 0752 //       }
; 0000 0753 //       break;
; 0000 0754 //    case 2:
; 0000 0755 
; 0000 0756 //       lcd_gotoxy(8, 2);
; 0000 0757 //       delay_ms(200);
; 0000 0758 //       lcd_putchar('_');
; 0000 0759 
; 0000 075A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 075B //       {
; 0000 075C //          sdt_call2++;
; 0000 075D //          if (sdt_call2 > 9)
; 0000 075E //             sdt_call2 = 0;
; 0000 075F //          bit_phim = 0;
; 0000 0760 //          delay_ms(50);
; 0000 0761 //       }
; 0000 0762 //       else
; 0000 0763 //       {
; 0000 0764 //          bit_phim = 1;
; 0000 0765 //          delay_ms(25);
; 0000 0766 //       }
; 0000 0767 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0768 //       {
; 0000 0769 //          sdt_call2--;
; 0000 076A //          if (sdt_call2 == -1)
; 0000 076B //             sdt_call2 = 9;
; 0000 076C //          bit_phim = 0;
; 0000 076D //          delay_ms(50);
; 0000 076E //       }
; 0000 076F //       else
; 0000 0770 //       {
; 0000 0771 //          bit_phim = 1;
; 0000 0772 //          delay_ms(25);
; 0000 0773 //       }
; 0000 0774 //       break;
; 0000 0775 //    case 3:
; 0000 0776 
; 0000 0777 //       lcd_gotoxy(9, 2);
; 0000 0778 //       delay_ms(200);
; 0000 0779 //       lcd_putchar('_');
; 0000 077A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 077B //       {
; 0000 077C //          sdt_call3++;
; 0000 077D //          if (sdt_call3 > 9)
; 0000 077E //             sdt_call3 = 0;
; 0000 077F //          bit_phim = 0;
; 0000 0780 //          delay_ms(50);
; 0000 0781 //       }
; 0000 0782 //       else
; 0000 0783 //       {
; 0000 0784 //          bit_phim = 1;
; 0000 0785 //          delay_ms(25);
; 0000 0786 //       }
; 0000 0787 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0788 //       {
; 0000 0789 //          sdt_call3--;
; 0000 078A //          if (sdt_call3 == -1)
; 0000 078B //             sdt_call3 = 9;
; 0000 078C //          bit_phim = 0;
; 0000 078D //          delay_ms(50);
; 0000 078E //       }
; 0000 078F //       else
; 0000 0790 //       {
; 0000 0791 //          bit_phim = 1;
; 0000 0792 //          delay_ms(25);
; 0000 0793 //       }
; 0000 0794 //       break;
; 0000 0795 //    case 4:
; 0000 0796 
; 0000 0797 //       lcd_gotoxy(10, 2);
; 0000 0798 //       delay_ms(200);
; 0000 0799 //       lcd_putchar('_');
; 0000 079A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 079B //       {
; 0000 079C //          sdt_call4++;
; 0000 079D //          if (sdt_call4 > 9)
; 0000 079E //             sdt_call4 = 0;
; 0000 079F //          bit_phim = 0;
; 0000 07A0 //          delay_ms(50);
; 0000 07A1 //       }
; 0000 07A2 //       else
; 0000 07A3 //       {
; 0000 07A4 //          bit_phim = 1;
; 0000 07A5 //          delay_ms(25);
; 0000 07A6 //       }
; 0000 07A7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07A8 //       {
; 0000 07A9 //          sdt_call4--;
; 0000 07AA //          if (sdt_call4 == -1)
; 0000 07AB //             sdt_call4 = 9;
; 0000 07AC //          bit_phim = 0;
; 0000 07AD //          delay_ms(50);
; 0000 07AE //       }
; 0000 07AF //       else
; 0000 07B0 //       {
; 0000 07B1 //          bit_phim = 1;
; 0000 07B2 //          delay_ms(25);
; 0000 07B3 //       }
; 0000 07B4 //       break;
; 0000 07B5 //    case 5:
; 0000 07B6 
; 0000 07B7 //       lcd_gotoxy(11, 2);
; 0000 07B8 //       delay_ms(200);
; 0000 07B9 //       lcd_putchar('_');
; 0000 07BA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07BB //       {
; 0000 07BC //          sdt_call5++;
; 0000 07BD //          if (sdt_call5 > 9)
; 0000 07BE //             sdt_call5 = 0;
; 0000 07BF //          bit_phim = 0;
; 0000 07C0 //          delay_ms(50);
; 0000 07C1 //       }
; 0000 07C2 //       else
; 0000 07C3 //       {
; 0000 07C4 //          bit_phim = 1;
; 0000 07C5 //          delay_ms(25);
; 0000 07C6 //       }
; 0000 07C7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07C8 //       {
; 0000 07C9 //          sdt_call5--;
; 0000 07CA //          if (sdt_call5 == -1)
; 0000 07CB //             sdt_call5 = 9;
; 0000 07CC //          bit_phim = 0;
; 0000 07CD //          delay_ms(50);
; 0000 07CE //       }
; 0000 07CF //       else
; 0000 07D0 //       {
; 0000 07D1 //          bit_phim = 1;
; 0000 07D2 //          delay_ms(25);
; 0000 07D3 //       }
; 0000 07D4 //       break;
; 0000 07D5 //    case 6:
; 0000 07D6 
; 0000 07D7 //       lcd_gotoxy(12, 2);
; 0000 07D8 //       delay_ms(200);
; 0000 07D9 //       lcd_putchar('_');
; 0000 07DA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07DB //       {
; 0000 07DC //          sdt_call6++;
; 0000 07DD //          if (sdt_call6 > 9)
; 0000 07DE //             sdt_call6 = 0;
; 0000 07DF //          bit_phim = 0;
; 0000 07E0 //          delay_ms(50);
; 0000 07E1 //       }
; 0000 07E2 //       else
; 0000 07E3 //       {
; 0000 07E4 //          bit_phim = 1;
; 0000 07E5 //          delay_ms(25);
; 0000 07E6 //       }
; 0000 07E7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07E8 //       {
; 0000 07E9 //          sdt_call6--;
; 0000 07EA //          if (sdt_call6 == -1)
; 0000 07EB //             sdt_call6 = 9;
; 0000 07EC //          bit_phim = 0;
; 0000 07ED //          delay_ms(50);
; 0000 07EE //       }
; 0000 07EF //       else
; 0000 07F0 //       {
; 0000 07F1 //          bit_phim = 1;
; 0000 07F2 //          delay_ms(25);
; 0000 07F3 //       }
; 0000 07F4 //       break;
; 0000 07F5 //    case 7:
; 0000 07F6 
; 0000 07F7 //       lcd_gotoxy(13, 2);
; 0000 07F8 //       delay_ms(200);
; 0000 07F9 //       lcd_putchar('_');
; 0000 07FA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07FB //       {
; 0000 07FC //          sdt_call7++;
; 0000 07FD //          if (sdt_call7 > 9)
; 0000 07FE //             sdt_call7 = 0;
; 0000 07FF //          bit_phim = 0;
; 0000 0800 //          delay_ms(50);
; 0000 0801 //       }
; 0000 0802 //       else
; 0000 0803 //       {
; 0000 0804 //          bit_phim = 1;
; 0000 0805 //          delay_ms(25);
; 0000 0806 //       }
; 0000 0807 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0808 //       {
; 0000 0809 //          sdt_call7--;
; 0000 080A //          if (sdt_call7 == -1)
; 0000 080B //             sdt_call7 = 9;
; 0000 080C //          bit_phim = 0;
; 0000 080D //          delay_ms(50);
; 0000 080E //       }
; 0000 080F //       else
; 0000 0810 //       {
; 0000 0811 //          bit_phim = 1;
; 0000 0812 //          delay_ms(25);
; 0000 0813 //       }
; 0000 0814 //       break;
; 0000 0815 //    case 8:
; 0000 0816 
; 0000 0817 //       lcd_gotoxy(14, 2);
; 0000 0818 //       delay_ms(200);
; 0000 0819 //       lcd_putchar('_');
; 0000 081A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 081B //       {
; 0000 081C //          sdt_call8++;
; 0000 081D //          if (sdt_call8 > 9)
; 0000 081E //             sdt_call8 = 0;
; 0000 081F //          bit_phim = 0;
; 0000 0820 //          delay_ms(50);
; 0000 0821 //       }
; 0000 0822 //       else
; 0000 0823 //       {
; 0000 0824 //          bit_phim = 1;
; 0000 0825 //          delay_ms(25);
; 0000 0826 //       }
; 0000 0827 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0828 //       {
; 0000 0829 //          sdt_call8--;
; 0000 082A //          if (sdt_call8 == -1)
; 0000 082B //             sdt_call8 = 9;
; 0000 082C //          bit_phim = 0;
; 0000 082D //          delay_ms(50);
; 0000 082E //       }
; 0000 082F //       else
; 0000 0830 //       {
; 0000 0831 //          bit_phim = 1;
; 0000 0832 //          delay_ms(25);
; 0000 0833 //       }
; 0000 0834 //       break;
; 0000 0835 //    case 9:
; 0000 0836 
; 0000 0837 //       lcd_gotoxy(15, 2);
; 0000 0838 //       delay_ms(200);
; 0000 0839 //       lcd_putchar('_');
; 0000 083A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 083B //       {
; 0000 083C //          sdt_call9++;
; 0000 083D //          if (sdt_call9 > 9)
; 0000 083E //             sdt_call9 = 0;
; 0000 083F //          bit_phim = 0;
; 0000 0840 //          delay_ms(50);
; 0000 0841 //       }
; 0000 0842 //       else
; 0000 0843 //       {
; 0000 0844 //          bit_phim = 1;
; 0000 0845 //          delay_ms(25);
; 0000 0846 //       }
; 0000 0847 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0848 //       {
; 0000 0849 //          sdt_call9--;
; 0000 084A //          if (sdt_call9 == -1)
; 0000 084B //             sdt_call9 = 9;
; 0000 084C //          bit_phim = 0;
; 0000 084D //          delay_ms(50);
; 0000 084E //       }
; 0000 084F //       else
; 0000 0850 //       {
; 0000 0851 //          bit_phim = 1;
; 0000 0852 //          delay_ms(25);
; 0000 0853 //       }
; 0000 0854 //       break;
; 0000 0855 //    default:
; 0000 0856 //       cot = 1;
; 0000 0857 //       delay_ms(25);
; 0000 0858 //       break;
; 0000 0859 //    }
; 0000 085A //    // luu
; 0000 085B //    if ((Ent_pin == 0) && (bit_phim == 1))
; 0000 085C //    {
; 0000 085D //       bit_phim = 0;
; 0000 085E //       delay_ms(50);
; 0000 085F //       if (sdt_call1 != 0)
; 0000 0860 //       {
; 0000 0861 //          lcd_clear();
; 0000 0862 //          EEPROM_write(11, sdt_call1);
; 0000 0863 //          EEPROM_write(12, sdt_call2);
; 0000 0864 //          EEPROM_write(13, sdt_call3);
; 0000 0865 //          EEPROM_write(14, sdt_call4);
; 0000 0866 //          EEPROM_write(15, sdt_call5);
; 0000 0867 //          EEPROM_write(16, sdt_call6);
; 0000 0868 //          EEPROM_write(17, sdt_call7);
; 0000 0869 //          EEPROM_write(18, sdt_call8);
; 0000 086A //          EEPROM_write(19, sdt_call9);
; 0000 086B //          cot = 1;
; 0000 086C //          lcd_gotoxy(3, 1);
; 0000 086D //          sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_cal ...
; 0000 086E //          sprintf(lcd, "da luu sdt sms:");
; 0000 086F //          lcd_puts(lcd);
; 0000 0870 //          lcd_gotoxy(5, 2);
; 0000 0871 //          sprintf(lcd, "%s", sdt_call);
; 0000 0872 //          lcd_puts(lcd);
; 0000 0873 //          delay_ms(500);
; 0000 0874 //          lcd_clear();
; 0000 0875 //       }
; 0000 0876 //       else
; 0000 0877 //       {
; 0000 0878 //          lcd_clear();
; 0000 0879 //          lcd_gotoxy(2, 1);
; 0000 087A //          lcd_puts("Kiem tra lai SDT!");
; 0000 087B //          delay_ms(500);
; 0000 087C //          lcd_clear();
; 0000 087D //       }
; 0000 087E //    }
; 0000 087F //    else
; 0000 0880 //    {
; 0000 0881 //       bit_phim = 1;
; 0000 0882 
; 0000 0883 //       delay_ms(25);
; 0000 0884 //    }
; 0000 0885 // };
; 0000 0886 // // hang 2
; 0000 0887 if (hang - 7 == 0)
;PCODE: $00001366 VOL: 0
;PCODE: $00001367 VOL: 0
;PCODE: $00001368 VOL: 0
; 0000 0888 {
; 0000 0889 
; 0000 088A switch (cot)
;PCODE: $00001369 VOL: 0
; 0000 088B {
; 0000 088C case 1:
;PCODE: $0000136A VOL: 0
;PCODE: $0000136B VOL: 0
;PCODE: $0000136C VOL: 0
; 0000 088D 
; 0000 088E lcd_gotoxy(7, 3);
;PCODE: $0000136D VOL: 0
;PCODE: $0000136E VOL: 0
;PCODE: $0000136F VOL: 0
;PCODE: $00001370 VOL: 0
; 0000 088F delay_ms(200);
;PCODE: $00001371 VOL: 0
;PCODE: $00001372 VOL: 0
;PCODE: $00001373 VOL: 0
; 0000 0890 lcd_putchar('_');
;PCODE: $00001374 VOL: 0
;PCODE: $00001375 VOL: 0
; 0000 0891 // phim up
; 0000 0892 
; 0000 0893 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001376 VOL: 0
;PCODE: $00001377 VOL: 0
;PCODE: $00001378 VOL: 0
;PCODE: $00001379 VOL: 0
;PCODE: $0000137A VOL: 0
;PCODE: $0000137B VOL: 0
;PCODE: $0000137C VOL: 0
;PCODE: $0000137D VOL: 0
;PCODE: $0000137E VOL: 0
;PCODE: $0000137F VOL: 0
; 0000 0894 {
; 0000 0895 sdt_sms1++;
;PCODE: $00001380 VOL: 0
;PCODE: $00001381 VOL: 0
;PCODE: $00001382 VOL: 0
;PCODE: $00001383 VOL: 0
; 0000 0896 if (sdt_sms1 > 9)
;PCODE: $00001384 VOL: 0
;PCODE: $00001385 VOL: 0
;PCODE: $00001386 VOL: 0
; 0000 0897 sdt_sms1 = 0;
;PCODE: $00001387 VOL: 0
;PCODE: $00001388 VOL: 0
; 0000 0898 bit_phim = 0;
;PCODE: $00001389 VOL: 0
;PCODE: $0000138A VOL: 0
;PCODE: $0000138B VOL: 0
;PCODE: $0000138C VOL: 0
; 0000 0899 delay_ms(50);
;PCODE: $0000138D VOL: 0
;PCODE: $0000138E VOL: 0
;PCODE: $0000138F VOL: 0
; 0000 089A }
; 0000 089B else
;PCODE: $00001390 VOL: 0
;PCODE: $00001391 VOL: 0
; 0000 089C {
; 0000 089D bit_phim = 1;
;PCODE: $00001392 VOL: 0
;PCODE: $00001393 VOL: 0
;PCODE: $00001394 VOL: 0
; 0000 089E delay_ms(25);
;PCODE: $00001395 VOL: 0
;PCODE: $00001396 VOL: 0
;PCODE: $00001397 VOL: 0
; 0000 089F }
;PCODE: $00001398 VOL: 0
; 0000 08A0 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001399 VOL: 0
;PCODE: $0000139A VOL: 0
;PCODE: $0000139B VOL: 0
;PCODE: $0000139C VOL: 0
;PCODE: $0000139D VOL: 0
;PCODE: $0000139E VOL: 0
;PCODE: $0000139F VOL: 0
;PCODE: $000013A0 VOL: 0
;PCODE: $000013A1 VOL: 0
;PCODE: $000013A2 VOL: 0
; 0000 08A1 {
; 0000 08A2 sdt_sms1--;
;PCODE: $000013A3 VOL: 0
;PCODE: $000013A4 VOL: 0
;PCODE: $000013A5 VOL: 0
;PCODE: $000013A6 VOL: 0
; 0000 08A3 if (sdt_sms1 == -1)
;PCODE: $000013A7 VOL: 0
;PCODE: $000013A8 VOL: 0
;PCODE: $000013A9 VOL: 0
; 0000 08A4 sdt_sms1 = 9;
;PCODE: $000013AA VOL: 0
;PCODE: $000013AB VOL: 0
; 0000 08A5 bit_phim = 0;
;PCODE: $000013AC VOL: 0
;PCODE: $000013AD VOL: 0
;PCODE: $000013AE VOL: 0
;PCODE: $000013AF VOL: 0
; 0000 08A6 delay_ms(50);
;PCODE: $000013B0 VOL: 0
;PCODE: $000013B1 VOL: 0
;PCODE: $000013B2 VOL: 0
; 0000 08A7 }
; 0000 08A8 else
;PCODE: $000013B3 VOL: 0
;PCODE: $000013B4 VOL: 0
; 0000 08A9 {
; 0000 08AA bit_phim = 1;
;PCODE: $000013B5 VOL: 0
;PCODE: $000013B6 VOL: 0
;PCODE: $000013B7 VOL: 0
; 0000 08AB delay_ms(25);
;PCODE: $000013B8 VOL: 0
;PCODE: $000013B9 VOL: 0
;PCODE: $000013BA VOL: 0
; 0000 08AC }
;PCODE: $000013BB VOL: 0
; 0000 08AD break;
;PCODE: $000013BC VOL: 0
; 0000 08AE case 2:
;PCODE: $000013BD VOL: 0
;PCODE: $000013BE VOL: 0
;PCODE: $000013BF VOL: 0
;PCODE: $000013C0 VOL: 0
; 0000 08AF 
; 0000 08B0 lcd_gotoxy(8, 3);
;PCODE: $000013C1 VOL: 0
;PCODE: $000013C2 VOL: 0
;PCODE: $000013C3 VOL: 0
;PCODE: $000013C4 VOL: 0
; 0000 08B1 delay_ms(200);
;PCODE: $000013C5 VOL: 0
;PCODE: $000013C6 VOL: 0
;PCODE: $000013C7 VOL: 0
; 0000 08B2 lcd_putchar('_');
;PCODE: $000013C8 VOL: 0
;PCODE: $000013C9 VOL: 0
; 0000 08B3 
; 0000 08B4 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000013CA VOL: 0
;PCODE: $000013CB VOL: 0
;PCODE: $000013CC VOL: 0
;PCODE: $000013CD VOL: 0
;PCODE: $000013CE VOL: 0
;PCODE: $000013CF VOL: 0
;PCODE: $000013D0 VOL: 0
;PCODE: $000013D1 VOL: 0
;PCODE: $000013D2 VOL: 0
;PCODE: $000013D3 VOL: 0
; 0000 08B5 {
; 0000 08B6 sdt_sms2++;
;PCODE: $000013D4 VOL: 0
;PCODE: $000013D5 VOL: 0
;PCODE: $000013D6 VOL: 0
;PCODE: $000013D7 VOL: 0
; 0000 08B7 if (sdt_sms2 > 9)
;PCODE: $000013D8 VOL: 0
;PCODE: $000013D9 VOL: 0
;PCODE: $000013DA VOL: 0
; 0000 08B8 sdt_sms2 = 0;
;PCODE: $000013DB VOL: 0
;PCODE: $000013DC VOL: 0
; 0000 08B9 bit_phim = 0;
;PCODE: $000013DD VOL: 0
;PCODE: $000013DE VOL: 0
;PCODE: $000013DF VOL: 0
;PCODE: $000013E0 VOL: 0
; 0000 08BA delay_ms(50);
;PCODE: $000013E1 VOL: 0
;PCODE: $000013E2 VOL: 0
;PCODE: $000013E3 VOL: 0
; 0000 08BB }
; 0000 08BC else
;PCODE: $000013E4 VOL: 0
;PCODE: $000013E5 VOL: 0
; 0000 08BD {
; 0000 08BE bit_phim = 1;
;PCODE: $000013E6 VOL: 0
;PCODE: $000013E7 VOL: 0
;PCODE: $000013E8 VOL: 0
; 0000 08BF delay_ms(25);
;PCODE: $000013E9 VOL: 0
;PCODE: $000013EA VOL: 0
;PCODE: $000013EB VOL: 0
; 0000 08C0 }
;PCODE: $000013EC VOL: 0
; 0000 08C1 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000013ED VOL: 0
;PCODE: $000013EE VOL: 0
;PCODE: $000013EF VOL: 0
;PCODE: $000013F0 VOL: 0
;PCODE: $000013F1 VOL: 0
;PCODE: $000013F2 VOL: 0
;PCODE: $000013F3 VOL: 0
;PCODE: $000013F4 VOL: 0
;PCODE: $000013F5 VOL: 0
;PCODE: $000013F6 VOL: 0
; 0000 08C2 {
; 0000 08C3 sdt_sms2--;
;PCODE: $000013F7 VOL: 0
;PCODE: $000013F8 VOL: 0
;PCODE: $000013F9 VOL: 0
;PCODE: $000013FA VOL: 0
; 0000 08C4 if (sdt_sms2 == -1)
;PCODE: $000013FB VOL: 0
;PCODE: $000013FC VOL: 0
;PCODE: $000013FD VOL: 0
; 0000 08C5 sdt_sms2 = 9;
;PCODE: $000013FE VOL: 0
;PCODE: $000013FF VOL: 0
; 0000 08C6 bit_phim = 0;
;PCODE: $00001400 VOL: 0
;PCODE: $00001401 VOL: 0
;PCODE: $00001402 VOL: 0
;PCODE: $00001403 VOL: 0
; 0000 08C7 delay_ms(50);
;PCODE: $00001404 VOL: 0
;PCODE: $00001405 VOL: 0
;PCODE: $00001406 VOL: 0
; 0000 08C8 }
; 0000 08C9 else
;PCODE: $00001407 VOL: 0
;PCODE: $00001408 VOL: 0
; 0000 08CA {
; 0000 08CB bit_phim = 1;
;PCODE: $00001409 VOL: 0
;PCODE: $0000140A VOL: 0
;PCODE: $0000140B VOL: 0
; 0000 08CC delay_ms(25);
;PCODE: $0000140C VOL: 0
;PCODE: $0000140D VOL: 0
;PCODE: $0000140E VOL: 0
; 0000 08CD }
;PCODE: $0000140F VOL: 0
; 0000 08CE break;
;PCODE: $00001410 VOL: 0
; 0000 08CF case 3:
;PCODE: $00001411 VOL: 0
;PCODE: $00001412 VOL: 0
;PCODE: $00001413 VOL: 0
;PCODE: $00001414 VOL: 0
; 0000 08D0 
; 0000 08D1 lcd_gotoxy(9, 3);
;PCODE: $00001415 VOL: 0
;PCODE: $00001416 VOL: 0
;PCODE: $00001417 VOL: 0
;PCODE: $00001418 VOL: 0
; 0000 08D2 delay_ms(200);
;PCODE: $00001419 VOL: 0
;PCODE: $0000141A VOL: 0
;PCODE: $0000141B VOL: 0
; 0000 08D3 lcd_putchar('_');
;PCODE: $0000141C VOL: 0
;PCODE: $0000141D VOL: 0
; 0000 08D4 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000141E VOL: 0
;PCODE: $0000141F VOL: 0
;PCODE: $00001420 VOL: 0
;PCODE: $00001421 VOL: 0
;PCODE: $00001422 VOL: 0
;PCODE: $00001423 VOL: 0
;PCODE: $00001424 VOL: 0
;PCODE: $00001425 VOL: 0
;PCODE: $00001426 VOL: 0
;PCODE: $00001427 VOL: 0
; 0000 08D5 {
; 0000 08D6 sdt_sms3++;
;PCODE: $00001428 VOL: 0
;PCODE: $00001429 VOL: 0
;PCODE: $0000142A VOL: 0
;PCODE: $0000142B VOL: 0
; 0000 08D7 if (sdt_sms3 > 9)
;PCODE: $0000142C VOL: 0
;PCODE: $0000142D VOL: 0
;PCODE: $0000142E VOL: 0
; 0000 08D8 sdt_sms3 = 0;
;PCODE: $0000142F VOL: 0
;PCODE: $00001430 VOL: 0
; 0000 08D9 bit_phim = 0;
;PCODE: $00001431 VOL: 0
;PCODE: $00001432 VOL: 0
;PCODE: $00001433 VOL: 0
;PCODE: $00001434 VOL: 0
; 0000 08DA delay_ms(50);
;PCODE: $00001435 VOL: 0
;PCODE: $00001436 VOL: 0
;PCODE: $00001437 VOL: 0
; 0000 08DB }
; 0000 08DC else
;PCODE: $00001438 VOL: 0
;PCODE: $00001439 VOL: 0
; 0000 08DD {
; 0000 08DE bit_phim = 1;
;PCODE: $0000143A VOL: 0
;PCODE: $0000143B VOL: 0
;PCODE: $0000143C VOL: 0
; 0000 08DF delay_ms(25);
;PCODE: $0000143D VOL: 0
;PCODE: $0000143E VOL: 0
;PCODE: $0000143F VOL: 0
; 0000 08E0 }
;PCODE: $00001440 VOL: 0
; 0000 08E1 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001441 VOL: 0
;PCODE: $00001442 VOL: 0
;PCODE: $00001443 VOL: 0
;PCODE: $00001444 VOL: 0
;PCODE: $00001445 VOL: 0
;PCODE: $00001446 VOL: 0
;PCODE: $00001447 VOL: 0
;PCODE: $00001448 VOL: 0
;PCODE: $00001449 VOL: 0
;PCODE: $0000144A VOL: 0
; 0000 08E2 {
; 0000 08E3 sdt_sms3--;
;PCODE: $0000144B VOL: 0
;PCODE: $0000144C VOL: 0
;PCODE: $0000144D VOL: 0
;PCODE: $0000144E VOL: 0
; 0000 08E4 if (sdt_sms3 == -1)
;PCODE: $0000144F VOL: 0
;PCODE: $00001450 VOL: 0
;PCODE: $00001451 VOL: 0
; 0000 08E5 sdt_sms3 = 9;
;PCODE: $00001452 VOL: 0
;PCODE: $00001453 VOL: 0
; 0000 08E6 bit_phim = 0;
;PCODE: $00001454 VOL: 0
;PCODE: $00001455 VOL: 0
;PCODE: $00001456 VOL: 0
;PCODE: $00001457 VOL: 0
; 0000 08E7 delay_ms(50);
;PCODE: $00001458 VOL: 0
;PCODE: $00001459 VOL: 0
;PCODE: $0000145A VOL: 0
; 0000 08E8 }
; 0000 08E9 else
;PCODE: $0000145B VOL: 0
;PCODE: $0000145C VOL: 0
; 0000 08EA {
; 0000 08EB bit_phim = 1;
;PCODE: $0000145D VOL: 0
;PCODE: $0000145E VOL: 0
;PCODE: $0000145F VOL: 0
; 0000 08EC delay_ms(25);
;PCODE: $00001460 VOL: 0
;PCODE: $00001461 VOL: 0
;PCODE: $00001462 VOL: 0
; 0000 08ED }
;PCODE: $00001463 VOL: 0
; 0000 08EE break;
;PCODE: $00001464 VOL: 0
; 0000 08EF case 4:
;PCODE: $00001465 VOL: 0
;PCODE: $00001466 VOL: 0
;PCODE: $00001467 VOL: 0
;PCODE: $00001468 VOL: 0
; 0000 08F0 
; 0000 08F1 lcd_gotoxy(10, 3);
;PCODE: $00001469 VOL: 0
;PCODE: $0000146A VOL: 0
;PCODE: $0000146B VOL: 0
;PCODE: $0000146C VOL: 0
; 0000 08F2 delay_ms(200);
;PCODE: $0000146D VOL: 0
;PCODE: $0000146E VOL: 0
;PCODE: $0000146F VOL: 0
; 0000 08F3 lcd_putchar('_');
;PCODE: $00001470 VOL: 0
;PCODE: $00001471 VOL: 0
; 0000 08F4 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001472 VOL: 0
;PCODE: $00001473 VOL: 0
;PCODE: $00001474 VOL: 0
;PCODE: $00001475 VOL: 0
;PCODE: $00001476 VOL: 0
;PCODE: $00001477 VOL: 0
;PCODE: $00001478 VOL: 0
;PCODE: $00001479 VOL: 0
;PCODE: $0000147A VOL: 0
;PCODE: $0000147B VOL: 0
; 0000 08F5 {
; 0000 08F6 sdt_sms4++;
;PCODE: $0000147C VOL: 0
;PCODE: $0000147D VOL: 0
;PCODE: $0000147E VOL: 0
;PCODE: $0000147F VOL: 0
; 0000 08F7 if (sdt_sms4 > 9)
;PCODE: $00001480 VOL: 0
;PCODE: $00001481 VOL: 0
;PCODE: $00001482 VOL: 0
; 0000 08F8 sdt_sms4 = 0;
;PCODE: $00001483 VOL: 0
;PCODE: $00001484 VOL: 0
; 0000 08F9 bit_phim = 0;
;PCODE: $00001485 VOL: 0
;PCODE: $00001486 VOL: 0
;PCODE: $00001487 VOL: 0
;PCODE: $00001488 VOL: 0
; 0000 08FA delay_ms(50);
;PCODE: $00001489 VOL: 0
;PCODE: $0000148A VOL: 0
;PCODE: $0000148B VOL: 0
; 0000 08FB }
; 0000 08FC else
;PCODE: $0000148C VOL: 0
;PCODE: $0000148D VOL: 0
; 0000 08FD {
; 0000 08FE bit_phim = 1;
;PCODE: $0000148E VOL: 0
;PCODE: $0000148F VOL: 0
;PCODE: $00001490 VOL: 0
; 0000 08FF delay_ms(25);
;PCODE: $00001491 VOL: 0
;PCODE: $00001492 VOL: 0
;PCODE: $00001493 VOL: 0
; 0000 0900 }
;PCODE: $00001494 VOL: 0
; 0000 0901 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001495 VOL: 0
;PCODE: $00001496 VOL: 0
;PCODE: $00001497 VOL: 0
;PCODE: $00001498 VOL: 0
;PCODE: $00001499 VOL: 0
;PCODE: $0000149A VOL: 0
;PCODE: $0000149B VOL: 0
;PCODE: $0000149C VOL: 0
;PCODE: $0000149D VOL: 0
;PCODE: $0000149E VOL: 0
; 0000 0902 {
; 0000 0903 sdt_sms4--;
;PCODE: $0000149F VOL: 0
;PCODE: $000014A0 VOL: 0
;PCODE: $000014A1 VOL: 0
;PCODE: $000014A2 VOL: 0
; 0000 0904 if (sdt_sms4 == -1)
;PCODE: $000014A3 VOL: 0
;PCODE: $000014A4 VOL: 0
;PCODE: $000014A5 VOL: 0
; 0000 0905 sdt_sms4 = 9;
;PCODE: $000014A6 VOL: 0
;PCODE: $000014A7 VOL: 0
; 0000 0906 bit_phim = 0;
;PCODE: $000014A8 VOL: 0
;PCODE: $000014A9 VOL: 0
;PCODE: $000014AA VOL: 0
;PCODE: $000014AB VOL: 0
; 0000 0907 delay_ms(50);
;PCODE: $000014AC VOL: 0
;PCODE: $000014AD VOL: 0
;PCODE: $000014AE VOL: 0
; 0000 0908 }
; 0000 0909 else
;PCODE: $000014AF VOL: 0
;PCODE: $000014B0 VOL: 0
; 0000 090A {
; 0000 090B bit_phim = 1;
;PCODE: $000014B1 VOL: 0
;PCODE: $000014B2 VOL: 0
;PCODE: $000014B3 VOL: 0
; 0000 090C delay_ms(25);
;PCODE: $000014B4 VOL: 0
;PCODE: $000014B5 VOL: 0
;PCODE: $000014B6 VOL: 0
; 0000 090D }
;PCODE: $000014B7 VOL: 0
; 0000 090E break;
;PCODE: $000014B8 VOL: 0
; 0000 090F case 5:
;PCODE: $000014B9 VOL: 0
;PCODE: $000014BA VOL: 0
;PCODE: $000014BB VOL: 0
;PCODE: $000014BC VOL: 0
; 0000 0910 
; 0000 0911 lcd_gotoxy(11, 3);
;PCODE: $000014BD VOL: 0
;PCODE: $000014BE VOL: 0
;PCODE: $000014BF VOL: 0
;PCODE: $000014C0 VOL: 0
; 0000 0912 delay_ms(200);
;PCODE: $000014C1 VOL: 0
;PCODE: $000014C2 VOL: 0
;PCODE: $000014C3 VOL: 0
; 0000 0913 lcd_putchar('_');
;PCODE: $000014C4 VOL: 0
;PCODE: $000014C5 VOL: 0
; 0000 0914 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000014C6 VOL: 0
;PCODE: $000014C7 VOL: 0
;PCODE: $000014C8 VOL: 0
;PCODE: $000014C9 VOL: 0
;PCODE: $000014CA VOL: 0
;PCODE: $000014CB VOL: 0
;PCODE: $000014CC VOL: 0
;PCODE: $000014CD VOL: 0
;PCODE: $000014CE VOL: 0
;PCODE: $000014CF VOL: 0
; 0000 0915 {
; 0000 0916 sdt_sms5++;
;PCODE: $000014D0 VOL: 0
;PCODE: $000014D1 VOL: 0
;PCODE: $000014D2 VOL: 0
;PCODE: $000014D3 VOL: 0
; 0000 0917 if (sdt_sms5 > 9)
;PCODE: $000014D4 VOL: 0
;PCODE: $000014D5 VOL: 0
;PCODE: $000014D6 VOL: 0
; 0000 0918 sdt_sms5 = 0;
;PCODE: $000014D7 VOL: 0
;PCODE: $000014D8 VOL: 0
; 0000 0919 bit_phim = 0;
;PCODE: $000014D9 VOL: 0
;PCODE: $000014DA VOL: 0
;PCODE: $000014DB VOL: 0
;PCODE: $000014DC VOL: 0
; 0000 091A delay_ms(50);
;PCODE: $000014DD VOL: 0
;PCODE: $000014DE VOL: 0
;PCODE: $000014DF VOL: 0
; 0000 091B }
; 0000 091C else
;PCODE: $000014E0 VOL: 0
;PCODE: $000014E1 VOL: 0
; 0000 091D {
; 0000 091E bit_phim = 1;
;PCODE: $000014E2 VOL: 0
;PCODE: $000014E3 VOL: 0
;PCODE: $000014E4 VOL: 0
; 0000 091F delay_ms(25);
;PCODE: $000014E5 VOL: 0
;PCODE: $000014E6 VOL: 0
;PCODE: $000014E7 VOL: 0
; 0000 0920 }
;PCODE: $000014E8 VOL: 0
; 0000 0921 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000014E9 VOL: 0
;PCODE: $000014EA VOL: 0
;PCODE: $000014EB VOL: 0
;PCODE: $000014EC VOL: 0
;PCODE: $000014ED VOL: 0
;PCODE: $000014EE VOL: 0
;PCODE: $000014EF VOL: 0
;PCODE: $000014F0 VOL: 0
;PCODE: $000014F1 VOL: 0
;PCODE: $000014F2 VOL: 0
; 0000 0922 {
; 0000 0923 sdt_sms5--;
;PCODE: $000014F3 VOL: 0
;PCODE: $000014F4 VOL: 0
;PCODE: $000014F5 VOL: 0
;PCODE: $000014F6 VOL: 0
; 0000 0924 if (sdt_sms5 == -1)
;PCODE: $000014F7 VOL: 0
;PCODE: $000014F8 VOL: 0
;PCODE: $000014F9 VOL: 0
; 0000 0925 sdt_sms5 = 9;
;PCODE: $000014FA VOL: 0
;PCODE: $000014FB VOL: 0
; 0000 0926 bit_phim = 0;
;PCODE: $000014FC VOL: 0
;PCODE: $000014FD VOL: 0
;PCODE: $000014FE VOL: 0
;PCODE: $000014FF VOL: 0
; 0000 0927 delay_ms(50);
;PCODE: $00001500 VOL: 0
;PCODE: $00001501 VOL: 0
;PCODE: $00001502 VOL: 0
; 0000 0928 }
; 0000 0929 else
;PCODE: $00001503 VOL: 0
;PCODE: $00001504 VOL: 0
; 0000 092A {
; 0000 092B bit_phim = 1;
;PCODE: $00001505 VOL: 0
;PCODE: $00001506 VOL: 0
;PCODE: $00001507 VOL: 0
; 0000 092C delay_ms(25);
;PCODE: $00001508 VOL: 0
;PCODE: $00001509 VOL: 0
;PCODE: $0000150A VOL: 0
; 0000 092D }
;PCODE: $0000150B VOL: 0
; 0000 092E break;
;PCODE: $0000150C VOL: 0
; 0000 092F case 6:
;PCODE: $0000150D VOL: 0
;PCODE: $0000150E VOL: 0
;PCODE: $0000150F VOL: 0
;PCODE: $00001510 VOL: 0
; 0000 0930 
; 0000 0931 lcd_gotoxy(12, 3);
;PCODE: $00001511 VOL: 0
;PCODE: $00001512 VOL: 0
;PCODE: $00001513 VOL: 0
;PCODE: $00001514 VOL: 0
; 0000 0932 delay_ms(200);
;PCODE: $00001515 VOL: 0
;PCODE: $00001516 VOL: 0
;PCODE: $00001517 VOL: 0
; 0000 0933 lcd_putchar('_');
;PCODE: $00001518 VOL: 0
;PCODE: $00001519 VOL: 0
; 0000 0934 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000151A VOL: 0
;PCODE: $0000151B VOL: 0
;PCODE: $0000151C VOL: 0
;PCODE: $0000151D VOL: 0
;PCODE: $0000151E VOL: 0
;PCODE: $0000151F VOL: 0
;PCODE: $00001520 VOL: 0
;PCODE: $00001521 VOL: 0
;PCODE: $00001522 VOL: 0
;PCODE: $00001523 VOL: 0
; 0000 0935 {
; 0000 0936 sdt_sms6++;
;PCODE: $00001524 VOL: 0
;PCODE: $00001525 VOL: 0
;PCODE: $00001526 VOL: 0
;PCODE: $00001527 VOL: 0
; 0000 0937 if (sdt_sms6 > 9)
;PCODE: $00001528 VOL: 0
;PCODE: $00001529 VOL: 0
;PCODE: $0000152A VOL: 0
; 0000 0938 sdt_sms6 = 0;
;PCODE: $0000152B VOL: 0
;PCODE: $0000152C VOL: 0
; 0000 0939 bit_phim = 0;
;PCODE: $0000152D VOL: 0
;PCODE: $0000152E VOL: 0
;PCODE: $0000152F VOL: 0
;PCODE: $00001530 VOL: 0
; 0000 093A delay_ms(50);
;PCODE: $00001531 VOL: 0
;PCODE: $00001532 VOL: 0
;PCODE: $00001533 VOL: 0
; 0000 093B }
; 0000 093C else
;PCODE: $00001534 VOL: 0
;PCODE: $00001535 VOL: 0
; 0000 093D {
; 0000 093E bit_phim = 1;
;PCODE: $00001536 VOL: 0
;PCODE: $00001537 VOL: 0
;PCODE: $00001538 VOL: 0
; 0000 093F delay_ms(25);
;PCODE: $00001539 VOL: 0
;PCODE: $0000153A VOL: 0
;PCODE: $0000153B VOL: 0
; 0000 0940 }
;PCODE: $0000153C VOL: 0
; 0000 0941 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $0000153D VOL: 0
;PCODE: $0000153E VOL: 0
;PCODE: $0000153F VOL: 0
;PCODE: $00001540 VOL: 0
;PCODE: $00001541 VOL: 0
;PCODE: $00001542 VOL: 0
;PCODE: $00001543 VOL: 0
;PCODE: $00001544 VOL: 0
;PCODE: $00001545 VOL: 0
;PCODE: $00001546 VOL: 0
; 0000 0942 {
; 0000 0943 sdt_sms6--;
;PCODE: $00001547 VOL: 0
;PCODE: $00001548 VOL: 0
;PCODE: $00001549 VOL: 0
;PCODE: $0000154A VOL: 0
; 0000 0944 if (sdt_sms6 == -1)
;PCODE: $0000154B VOL: 0
;PCODE: $0000154C VOL: 0
;PCODE: $0000154D VOL: 0
; 0000 0945 sdt_sms6 = 9;
;PCODE: $0000154E VOL: 0
;PCODE: $0000154F VOL: 0
; 0000 0946 bit_phim = 0;
;PCODE: $00001550 VOL: 0
;PCODE: $00001551 VOL: 0
;PCODE: $00001552 VOL: 0
;PCODE: $00001553 VOL: 0
; 0000 0947 delay_ms(50);
;PCODE: $00001554 VOL: 0
;PCODE: $00001555 VOL: 0
;PCODE: $00001556 VOL: 0
; 0000 0948 }
; 0000 0949 else
;PCODE: $00001557 VOL: 0
;PCODE: $00001558 VOL: 0
; 0000 094A {
; 0000 094B bit_phim = 1;
;PCODE: $00001559 VOL: 0
;PCODE: $0000155A VOL: 0
;PCODE: $0000155B VOL: 0
; 0000 094C delay_ms(25);
;PCODE: $0000155C VOL: 0
;PCODE: $0000155D VOL: 0
;PCODE: $0000155E VOL: 0
; 0000 094D }
;PCODE: $0000155F VOL: 0
; 0000 094E break;
;PCODE: $00001560 VOL: 0
; 0000 094F case 7:
;PCODE: $00001561 VOL: 0
;PCODE: $00001562 VOL: 0
;PCODE: $00001563 VOL: 0
;PCODE: $00001564 VOL: 0
; 0000 0950 
; 0000 0951 lcd_gotoxy(13, 3);
;PCODE: $00001565 VOL: 0
;PCODE: $00001566 VOL: 0
;PCODE: $00001567 VOL: 0
;PCODE: $00001568 VOL: 0
; 0000 0952 delay_ms(200);
;PCODE: $00001569 VOL: 0
;PCODE: $0000156A VOL: 0
;PCODE: $0000156B VOL: 0
; 0000 0953 lcd_putchar('_');
;PCODE: $0000156C VOL: 0
;PCODE: $0000156D VOL: 0
; 0000 0954 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $0000156E VOL: 0
;PCODE: $0000156F VOL: 0
;PCODE: $00001570 VOL: 0
;PCODE: $00001571 VOL: 0
;PCODE: $00001572 VOL: 0
;PCODE: $00001573 VOL: 0
;PCODE: $00001574 VOL: 0
;PCODE: $00001575 VOL: 0
;PCODE: $00001576 VOL: 0
;PCODE: $00001577 VOL: 0
; 0000 0955 {
; 0000 0956 sdt_sms7++;
;PCODE: $00001578 VOL: 0
;PCODE: $00001579 VOL: 0
;PCODE: $0000157A VOL: 0
;PCODE: $0000157B VOL: 0
; 0000 0957 if (sdt_sms7 > 9)
;PCODE: $0000157C VOL: 0
;PCODE: $0000157D VOL: 0
;PCODE: $0000157E VOL: 0
; 0000 0958 sdt_sms7 = 0;
;PCODE: $0000157F VOL: 0
;PCODE: $00001580 VOL: 0
; 0000 0959 bit_phim = 0;
;PCODE: $00001581 VOL: 0
;PCODE: $00001582 VOL: 0
;PCODE: $00001583 VOL: 0
;PCODE: $00001584 VOL: 0
; 0000 095A delay_ms(50);
;PCODE: $00001585 VOL: 0
;PCODE: $00001586 VOL: 0
;PCODE: $00001587 VOL: 0
; 0000 095B }
; 0000 095C else
;PCODE: $00001588 VOL: 0
;PCODE: $00001589 VOL: 0
; 0000 095D {
; 0000 095E bit_phim = 1;
;PCODE: $0000158A VOL: 0
;PCODE: $0000158B VOL: 0
;PCODE: $0000158C VOL: 0
; 0000 095F delay_ms(25);
;PCODE: $0000158D VOL: 0
;PCODE: $0000158E VOL: 0
;PCODE: $0000158F VOL: 0
; 0000 0960 }
;PCODE: $00001590 VOL: 0
; 0000 0961 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001591 VOL: 0
;PCODE: $00001592 VOL: 0
;PCODE: $00001593 VOL: 0
;PCODE: $00001594 VOL: 0
;PCODE: $00001595 VOL: 0
;PCODE: $00001596 VOL: 0
;PCODE: $00001597 VOL: 0
;PCODE: $00001598 VOL: 0
;PCODE: $00001599 VOL: 0
;PCODE: $0000159A VOL: 0
; 0000 0962 {
; 0000 0963 sdt_sms7--;
;PCODE: $0000159B VOL: 0
;PCODE: $0000159C VOL: 0
;PCODE: $0000159D VOL: 0
;PCODE: $0000159E VOL: 0
; 0000 0964 if (sdt_sms7 == -1)
;PCODE: $0000159F VOL: 0
;PCODE: $000015A0 VOL: 0
;PCODE: $000015A1 VOL: 0
; 0000 0965 sdt_sms7 = 9;
;PCODE: $000015A2 VOL: 0
;PCODE: $000015A3 VOL: 0
; 0000 0966 bit_phim = 0;
;PCODE: $000015A4 VOL: 0
;PCODE: $000015A5 VOL: 0
;PCODE: $000015A6 VOL: 0
;PCODE: $000015A7 VOL: 0
; 0000 0967 delay_ms(50);
;PCODE: $000015A8 VOL: 0
;PCODE: $000015A9 VOL: 0
;PCODE: $000015AA VOL: 0
; 0000 0968 }
; 0000 0969 else
;PCODE: $000015AB VOL: 0
;PCODE: $000015AC VOL: 0
; 0000 096A {
; 0000 096B bit_phim = 1;
;PCODE: $000015AD VOL: 0
;PCODE: $000015AE VOL: 0
;PCODE: $000015AF VOL: 0
; 0000 096C delay_ms(25);
;PCODE: $000015B0 VOL: 0
;PCODE: $000015B1 VOL: 0
;PCODE: $000015B2 VOL: 0
; 0000 096D }
;PCODE: $000015B3 VOL: 0
; 0000 096E break;
;PCODE: $000015B4 VOL: 0
; 0000 096F case 8:
;PCODE: $000015B5 VOL: 0
;PCODE: $000015B6 VOL: 0
;PCODE: $000015B7 VOL: 0
;PCODE: $000015B8 VOL: 0
; 0000 0970 
; 0000 0971 lcd_gotoxy(14, 3);
;PCODE: $000015B9 VOL: 0
;PCODE: $000015BA VOL: 0
;PCODE: $000015BB VOL: 0
;PCODE: $000015BC VOL: 0
; 0000 0972 delay_ms(200);
;PCODE: $000015BD VOL: 0
;PCODE: $000015BE VOL: 0
;PCODE: $000015BF VOL: 0
; 0000 0973 lcd_putchar('_');
;PCODE: $000015C0 VOL: 0
;PCODE: $000015C1 VOL: 0
; 0000 0974 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $000015C2 VOL: 0
;PCODE: $000015C3 VOL: 0
;PCODE: $000015C4 VOL: 0
;PCODE: $000015C5 VOL: 0
;PCODE: $000015C6 VOL: 0
;PCODE: $000015C7 VOL: 0
;PCODE: $000015C8 VOL: 0
;PCODE: $000015C9 VOL: 0
;PCODE: $000015CA VOL: 0
;PCODE: $000015CB VOL: 0
; 0000 0975 {
; 0000 0976 sdt_sms8++;
;PCODE: $000015CC VOL: 0
;PCODE: $000015CD VOL: 0
;PCODE: $000015CE VOL: 0
;PCODE: $000015CF VOL: 0
; 0000 0977 if (sdt_sms8 > 9)
;PCODE: $000015D0 VOL: 0
;PCODE: $000015D1 VOL: 0
;PCODE: $000015D2 VOL: 0
; 0000 0978 sdt_sms8 = 0;
;PCODE: $000015D3 VOL: 0
;PCODE: $000015D4 VOL: 0
; 0000 0979 bit_phim = 0;
;PCODE: $000015D5 VOL: 0
;PCODE: $000015D6 VOL: 0
;PCODE: $000015D7 VOL: 0
;PCODE: $000015D8 VOL: 0
; 0000 097A delay_ms(50);
;PCODE: $000015D9 VOL: 0
;PCODE: $000015DA VOL: 0
;PCODE: $000015DB VOL: 0
; 0000 097B }
; 0000 097C else
;PCODE: $000015DC VOL: 0
;PCODE: $000015DD VOL: 0
; 0000 097D {
; 0000 097E bit_phim = 1;
;PCODE: $000015DE VOL: 0
;PCODE: $000015DF VOL: 0
;PCODE: $000015E0 VOL: 0
; 0000 097F delay_ms(25);
;PCODE: $000015E1 VOL: 0
;PCODE: $000015E2 VOL: 0
;PCODE: $000015E3 VOL: 0
; 0000 0980 }
;PCODE: $000015E4 VOL: 0
; 0000 0981 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $000015E5 VOL: 0
;PCODE: $000015E6 VOL: 0
;PCODE: $000015E7 VOL: 0
;PCODE: $000015E8 VOL: 0
;PCODE: $000015E9 VOL: 0
;PCODE: $000015EA VOL: 0
;PCODE: $000015EB VOL: 0
;PCODE: $000015EC VOL: 0
;PCODE: $000015ED VOL: 0
;PCODE: $000015EE VOL: 0
; 0000 0982 {
; 0000 0983 sdt_sms8--;
;PCODE: $000015EF VOL: 0
;PCODE: $000015F0 VOL: 0
;PCODE: $000015F1 VOL: 0
;PCODE: $000015F2 VOL: 0
; 0000 0984 if (sdt_sms8 == -1)
;PCODE: $000015F3 VOL: 0
;PCODE: $000015F4 VOL: 0
;PCODE: $000015F5 VOL: 0
; 0000 0985 sdt_sms8 = 9;
;PCODE: $000015F6 VOL: 0
;PCODE: $000015F7 VOL: 0
; 0000 0986 bit_phim = 0;
;PCODE: $000015F8 VOL: 0
;PCODE: $000015F9 VOL: 0
;PCODE: $000015FA VOL: 0
;PCODE: $000015FB VOL: 0
; 0000 0987 delay_ms(50);
;PCODE: $000015FC VOL: 0
;PCODE: $000015FD VOL: 0
;PCODE: $000015FE VOL: 0
; 0000 0988 }
; 0000 0989 else
;PCODE: $000015FF VOL: 0
;PCODE: $00001600 VOL: 0
; 0000 098A {
; 0000 098B bit_phim = 1;
;PCODE: $00001601 VOL: 0
;PCODE: $00001602 VOL: 0
;PCODE: $00001603 VOL: 0
; 0000 098C delay_ms(25);
;PCODE: $00001604 VOL: 0
;PCODE: $00001605 VOL: 0
;PCODE: $00001606 VOL: 0
; 0000 098D }
;PCODE: $00001607 VOL: 0
; 0000 098E break;
;PCODE: $00001608 VOL: 0
; 0000 098F case 9:
;PCODE: $00001609 VOL: 0
;PCODE: $0000160A VOL: 0
;PCODE: $0000160B VOL: 0
;PCODE: $0000160C VOL: 0
; 0000 0990 
; 0000 0991 lcd_gotoxy(15, 3);
;PCODE: $0000160D VOL: 0
;PCODE: $0000160E VOL: 0
;PCODE: $0000160F VOL: 0
;PCODE: $00001610 VOL: 0
; 0000 0992 delay_ms(200);
;PCODE: $00001611 VOL: 0
;PCODE: $00001612 VOL: 0
;PCODE: $00001613 VOL: 0
; 0000 0993 lcd_putchar('_');
;PCODE: $00001614 VOL: 0
;PCODE: $00001615 VOL: 0
; 0000 0994 if ((Up_pin == 0) && (bit_phim == 1))
;PCODE: $00001616 VOL: 0
;PCODE: $00001617 VOL: 0
;PCODE: $00001618 VOL: 0
;PCODE: $00001619 VOL: 0
;PCODE: $0000161A VOL: 0
;PCODE: $0000161B VOL: 0
;PCODE: $0000161C VOL: 0
;PCODE: $0000161D VOL: 0
;PCODE: $0000161E VOL: 0
;PCODE: $0000161F VOL: 0
; 0000 0995 {
; 0000 0996 sdt_sms9++;
;PCODE: $00001620 VOL: 0
;PCODE: $00001621 VOL: 0
;PCODE: $00001622 VOL: 0
;PCODE: $00001623 VOL: 0
; 0000 0997 if (sdt_sms9 > 9)
;PCODE: $00001624 VOL: 0
;PCODE: $00001625 VOL: 0
;PCODE: $00001626 VOL: 0
; 0000 0998 sdt_sms9 = 0;
;PCODE: $00001627 VOL: 0
;PCODE: $00001628 VOL: 0
; 0000 0999 bit_phim = 0;
;PCODE: $00001629 VOL: 0
;PCODE: $0000162A VOL: 0
;PCODE: $0000162B VOL: 0
;PCODE: $0000162C VOL: 0
; 0000 099A delay_ms(50);
;PCODE: $0000162D VOL: 0
;PCODE: $0000162E VOL: 0
;PCODE: $0000162F VOL: 0
; 0000 099B }
; 0000 099C else
;PCODE: $00001630 VOL: 0
;PCODE: $00001631 VOL: 0
; 0000 099D {
; 0000 099E bit_phim = 1;
;PCODE: $00001632 VOL: 0
;PCODE: $00001633 VOL: 0
;PCODE: $00001634 VOL: 0
; 0000 099F delay_ms(25);
;PCODE: $00001635 VOL: 0
;PCODE: $00001636 VOL: 0
;PCODE: $00001637 VOL: 0
; 0000 09A0 }
;PCODE: $00001638 VOL: 0
; 0000 09A1 if ((Down_pin == 0) && (bit_phim == 1))
;PCODE: $00001639 VOL: 0
;PCODE: $0000163A VOL: 0
;PCODE: $0000163B VOL: 0
;PCODE: $0000163C VOL: 0
;PCODE: $0000163D VOL: 0
;PCODE: $0000163E VOL: 0
;PCODE: $0000163F VOL: 0
;PCODE: $00001640 VOL: 0
;PCODE: $00001641 VOL: 0
;PCODE: $00001642 VOL: 0
; 0000 09A2 {
; 0000 09A3 sdt_sms9--;
;PCODE: $00001643 VOL: 0
;PCODE: $00001644 VOL: 0
;PCODE: $00001645 VOL: 0
;PCODE: $00001646 VOL: 0
; 0000 09A4 if (sdt_sms9 == -1)
;PCODE: $00001647 VOL: 0
;PCODE: $00001648 VOL: 0
;PCODE: $00001649 VOL: 0
; 0000 09A5 sdt_sms9 = 9;
;PCODE: $0000164A VOL: 0
;PCODE: $0000164B VOL: 0
; 0000 09A6 bit_phim = 0;
;PCODE: $0000164C VOL: 0
;PCODE: $0000164D VOL: 0
;PCODE: $0000164E VOL: 0
;PCODE: $0000164F VOL: 0
; 0000 09A7 delay_ms(50);
;PCODE: $00001650 VOL: 0
;PCODE: $00001651 VOL: 0
;PCODE: $00001652 VOL: 0
; 0000 09A8 }
; 0000 09A9 else
;PCODE: $00001653 VOL: 0
;PCODE: $00001654 VOL: 0
; 0000 09AA {
; 0000 09AB bit_phim = 1;
;PCODE: $00001655 VOL: 0
;PCODE: $00001656 VOL: 0
;PCODE: $00001657 VOL: 0
; 0000 09AC delay_ms(25);
;PCODE: $00001658 VOL: 0
;PCODE: $00001659 VOL: 0
;PCODE: $0000165A VOL: 0
; 0000 09AD }
;PCODE: $0000165B VOL: 0
; 0000 09AE break;
;PCODE: $0000165C VOL: 0
; 0000 09AF default:
;PCODE: $0000165D VOL: 0
; 0000 09B0 cot = 1;
;PCODE: $0000165E VOL: 0
;PCODE: $0000165F VOL: 0
; 0000 09B1 delay_ms(25);
;PCODE: $00001660 VOL: 0
;PCODE: $00001661 VOL: 0
;PCODE: $00001662 VOL: 0
; 0000 09B2 break;
;PCODE: $00001663 VOL: 0
; 0000 09B3 }
;PCODE: $00001664 VOL: 0
; 0000 09B4 // luu
; 0000 09B5 if ((Ent_pin == 0) && (bit_phim == 1))
;PCODE: $00001665 VOL: 0
;PCODE: $00001666 VOL: 0
;PCODE: $00001667 VOL: 0
;PCODE: $00001668 VOL: 0
;PCODE: $00001669 VOL: 0
;PCODE: $0000166A VOL: 0
;PCODE: $0000166B VOL: 0
;PCODE: $0000166C VOL: 0
;PCODE: $0000166D VOL: 0
;PCODE: $0000166E VOL: 0
; 0000 09B6 {
; 0000 09B7 if (sdt_sms1 != 0)
;PCODE: $0000166F VOL: 0
;PCODE: $00001670 VOL: 0
;PCODE: $00001671 VOL: 0
; 0000 09B8 {
; 0000 09B9 lcd_clear();
;PCODE: $00001672 VOL: 0
; 0000 09BA cot = 1;
;PCODE: $00001673 VOL: 0
;PCODE: $00001674 VOL: 0
; 0000 09BB lcd_gotoxy(3, 1);
;PCODE: $00001675 VOL: 0
;PCODE: $00001676 VOL: 0
;PCODE: $00001677 VOL: 0
;PCODE: $00001678 VOL: 0
; 0000 09BC sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
;PCODE: $00001679 VOL: 0
;PCODE: $0000167A VOL: 0
;PCODE: $0000167B VOL: 0
;PCODE: $0000167C VOL: 0
;PCODE: $0000167D VOL: 0
;PCODE: $0000167E VOL: 0
;PCODE: $0000167F VOL: 0
;PCODE: $00001680 VOL: 0
;PCODE: $00001681 VOL: 0
;PCODE: $00001682 VOL: 0
;PCODE: $00001683 VOL: 0
;PCODE: $00001684 VOL: 0
;PCODE: $00001685 VOL: 0
;PCODE: $00001686 VOL: 0
;PCODE: $00001687 VOL: 0
;PCODE: $00001688 VOL: 0
;PCODE: $00001689 VOL: 0
;PCODE: $0000168A VOL: 0
;PCODE: $0000168B VOL: 0
;PCODE: $0000168C VOL: 0
;PCODE: $0000168D VOL: 0
;PCODE: $0000168E VOL: 0
;PCODE: $0000168F VOL: 0
;PCODE: $00001690 VOL: 0
;PCODE: $00001691 VOL: 0
;PCODE: $00001692 VOL: 0
;PCODE: $00001693 VOL: 0
;PCODE: $00001694 VOL: 0
;PCODE: $00001695 VOL: 0
;PCODE: $00001696 VOL: 0
;PCODE: $00001697 VOL: 0
;PCODE: $00001698 VOL: 0
;PCODE: $00001699 VOL: 0
;PCODE: $0000169A VOL: 0
;PCODE: $0000169B VOL: 0
;PCODE: $0000169C VOL: 0
; 0000 09BD sprintf(lcd, "da luu sdt sms:");
;PCODE: $0000169D VOL: 0
;PCODE: $0000169E VOL: 0
;PCODE: $0000169F VOL: 0
;PCODE: $000016A0 VOL: 0
;PCODE: $000016A1 VOL: 0
;PCODE: $000016A2 VOL: 0
;PCODE: $000016A3 VOL: 0
;PCODE: $000016A4 VOL: 0
;PCODE: $000016A5 VOL: 0
; 0000 09BE lcd_puts(lcd);
;PCODE: $000016A6 VOL: 0
;PCODE: $000016A7 VOL: 0
; 0000 09BF lcd_gotoxy(5, 2);
;PCODE: $000016A8 VOL: 0
;PCODE: $000016A9 VOL: 0
;PCODE: $000016AA VOL: 0
;PCODE: $000016AB VOL: 0
; 0000 09C0 sprintf(lcd, "%s", sdt_sms);
;PCODE: $000016AC VOL: 0
;PCODE: $000016AD VOL: 0
;PCODE: $000016AE VOL: 0
;PCODE: $000016AF VOL: 0
;PCODE: $000016B0 VOL: 0
;PCODE: $000016B1 VOL: 0
;PCODE: $000016B2 VOL: 0
;PCODE: $000016B3 VOL: 0
;PCODE: $000016B4 VOL: 0
;PCODE: $000016B5 VOL: 0
;PCODE: $000016B6 VOL: 0
;PCODE: $000016B7 VOL: 0
; 0000 09C1 lcd_puts(lcd);
;PCODE: $000016B8 VOL: 0
;PCODE: $000016B9 VOL: 0
; 0000 09C2 delay_ms(500);
;PCODE: $000016BA VOL: 0
;PCODE: $000016BB VOL: 0
; 0000 09C3 lcd_clear();
;PCODE: $000016BC VOL: 0
; 0000 09C4 EEPROM_write(21, sdt_sms1);
;PCODE: $000016BD VOL: 0
;PCODE: $000016BE VOL: 0
;PCODE: $000016BF VOL: 0
;PCODE: $000016C0 VOL: 0
; 0000 09C5 EEPROM_write(22, sdt_sms2);
;PCODE: $000016C1 VOL: 0
;PCODE: $000016C2 VOL: 0
;PCODE: $000016C3 VOL: 0
;PCODE: $000016C4 VOL: 0
; 0000 09C6 EEPROM_write(23, sdt_sms3);
;PCODE: $000016C5 VOL: 0
;PCODE: $000016C6 VOL: 0
;PCODE: $000016C7 VOL: 0
;PCODE: $000016C8 VOL: 0
; 0000 09C7 EEPROM_write(24, sdt_sms4);
;PCODE: $000016C9 VOL: 0
;PCODE: $000016CA VOL: 0
;PCODE: $000016CB VOL: 0
;PCODE: $000016CC VOL: 0
; 0000 09C8 EEPROM_write(25, sdt_sms5);
;PCODE: $000016CD VOL: 0
;PCODE: $000016CE VOL: 0
;PCODE: $000016CF VOL: 0
;PCODE: $000016D0 VOL: 0
; 0000 09C9 EEPROM_write(26, sdt_sms6);
;PCODE: $000016D1 VOL: 0
;PCODE: $000016D2 VOL: 0
;PCODE: $000016D3 VOL: 0
;PCODE: $000016D4 VOL: 0
; 0000 09CA EEPROM_write(27, sdt_sms7);
;PCODE: $000016D5 VOL: 0
;PCODE: $000016D6 VOL: 0
;PCODE: $000016D7 VOL: 0
;PCODE: $000016D8 VOL: 0
; 0000 09CB EEPROM_write(28, sdt_sms8);
;PCODE: $000016D9 VOL: 0
;PCODE: $000016DA VOL: 0
;PCODE: $000016DB VOL: 0
;PCODE: $000016DC VOL: 0
; 0000 09CC EEPROM_write(29, sdt_sms9);
;PCODE: $000016DD VOL: 0
;PCODE: $000016DE VOL: 0
;PCODE: $000016DF VOL: 0
;PCODE: $000016E0 VOL: 0
; 0000 09CD }
; 0000 09CE else
;PCODE: $000016E1 VOL: 0
;PCODE: $000016E2 VOL: 0
; 0000 09CF {
; 0000 09D0 lcd_clear();
;PCODE: $000016E3 VOL: 0
; 0000 09D1 lcd_gotoxy(2, 1);
;PCODE: $000016E4 VOL: 0
;PCODE: $000016E5 VOL: 0
;PCODE: $000016E6 VOL: 0
;PCODE: $000016E7 VOL: 0
; 0000 09D2 lcd_puts("kiem tra lai SDT!");
;PCODE: $000016E8 VOL: 0
;PCODE: $000016E9 VOL: 0
;PCODE: $000016EA VOL: 0
; 0000 09D3 delay_ms(500);
;PCODE: $000016EB VOL: 0
;PCODE: $000016EC VOL: 0
; 0000 09D4 lcd_clear();
;PCODE: $000016ED VOL: 0
; 0000 09D5 }
;PCODE: $000016EE VOL: 0
; 0000 09D6 bit_phim = 0;
;PCODE: $000016EF VOL: 0
;PCODE: $000016F0 VOL: 0
;PCODE: $000016F1 VOL: 0
; 0000 09D7 delay_ms(50);
;PCODE: $000016F2 VOL: 0
;PCODE: $000016F3 VOL: 0
;PCODE: $000016F4 VOL: 0
; 0000 09D8 }
; 0000 09D9 else
;PCODE: $000016F5 VOL: 0
;PCODE: $000016F6 VOL: 0
; 0000 09DA {
; 0000 09DB bit_phim = 1;
;PCODE: $000016F7 VOL: 0
;PCODE: $000016F8 VOL: 0
;PCODE: $000016F9 VOL: 0
; 0000 09DC delay_ms(25);
;PCODE: $000016FA VOL: 0
;PCODE: $000016FB VOL: 0
;PCODE: $000016FC VOL: 0
; 0000 09DD }
;PCODE: $000016FD VOL: 0
; 0000 09DE };
;PCODE: $000016FE VOL: 0
; 0000 09DF }
; 0000 09E0 
; 0000 09E1 ////////////////////////////////////////////////////////////////
; 0000 09E2 if ((Mode_pin == 0) && (bit_phim == 1))
;PCODE: $000016FF VOL: 0
;PCODE: $00001700 VOL: 0
;PCODE: $00001701 VOL: 0
;PCODE: $00001702 VOL: 0
;PCODE: $00001703 VOL: 0
;PCODE: $00001704 VOL: 0
;PCODE: $00001705 VOL: 0
;PCODE: $00001706 VOL: 0
;PCODE: $00001707 VOL: 0
;PCODE: $00001708 VOL: 0
;PCODE: $00001709 VOL: 0
; 0000 09E3 {
; 0000 09E4 hang++;
;PCODE: $0000170A VOL: 0
;PCODE: $0000170B VOL: 0
;PCODE: $0000170C VOL: 0
;PCODE: $0000170D VOL: 0
; 0000 09E5 
; 0000 09E6 if (hang == 0)
;PCODE: $0000170E VOL: 0
;PCODE: $0000170F VOL: 0
;PCODE: $00001710 VOL: 0
; 0000 09E7 {
; 0000 09E8 lcd_clear();
;PCODE: $00001711 VOL: 0
; 0000 09E9 cot = 1;
;PCODE: $00001712 VOL: 0
;PCODE: $00001713 VOL: 0
; 0000 09EA strcpy(hienthi, "Mode");
;PCODE: $00001714 VOL: 0
;PCODE: $00001715 VOL: 0
;PCODE: $00001716 VOL: 0
;PCODE: $00001717 VOL: 0
;PCODE: $00001718 VOL: 0
; 0000 09EB }
; 0000 09EC if (hang == 4)
;PCODE: $00001719 VOL: 0
;PCODE: $0000171A VOL: 0
;PCODE: $0000171B VOL: 0
;PCODE: $0000171C VOL: 0
; 0000 09ED {
; 0000 09EE lcd_clear();
;PCODE: $0000171D VOL: 0
; 0000 09EF cot = 1;
;PCODE: $0000171E VOL: 0
;PCODE: $0000171F VOL: 0
; 0000 09F0 strcpy(hienthi, "setDC");
;PCODE: $00001720 VOL: 0
;PCODE: $00001721 VOL: 0
;PCODE: $00001722 VOL: 0
;PCODE: $00001723 VOL: 0
;PCODE: $00001724 VOL: 0
; 0000 09F1 }
; 0000 09F2 if (hang == 7)
;PCODE: $00001725 VOL: 0
;PCODE: $00001726 VOL: 0
;PCODE: $00001727 VOL: 0
;PCODE: $00001728 VOL: 0
; 0000 09F3 {
; 0000 09F4 lcd_clear();
;PCODE: $00001729 VOL: 0
; 0000 09F5 cot = 1;
;PCODE: $0000172A VOL: 0
;PCODE: $0000172B VOL: 0
; 0000 09F6 strcpy(hienthi, "sdt");
;PCODE: $0000172C VOL: 0
;PCODE: $0000172D VOL: 0
;PCODE: $0000172E VOL: 0
;PCODE: $0000172F VOL: 0
;PCODE: $00001730 VOL: 0
; 0000 09F7 }
; 0000 09F8 if (hang == 8)
;PCODE: $00001731 VOL: 0
;PCODE: $00001732 VOL: 0
;PCODE: $00001733 VOL: 0
;PCODE: $00001734 VOL: 0
; 0000 09F9 {
; 0000 09FA hang = -1;
;PCODE: $00001735 VOL: 0
;PCODE: $00001736 VOL: 0
; 0000 09FB lcd_clear();
;PCODE: $00001737 VOL: 0
; 0000 09FC strcpy(hienthi, "chung");
;PCODE: $00001738 VOL: 0
;PCODE: $00001739 VOL: 0
;PCODE: $0000173A VOL: 0
;PCODE: $0000173B VOL: 0
;PCODE: $0000173C VOL: 0
; 0000 09FD delay_ms(200);
;PCODE: $0000173D VOL: 0
;PCODE: $0000173E VOL: 0
;PCODE: $0000173F VOL: 0
; 0000 09FE cot = 0;
;PCODE: $00001740 VOL: 0
;PCODE: $00001741 VOL: 0
; 0000 09FF }
; 0000 0A00 bit_phim = 0;
;PCODE: $00001742 VOL: 0
;PCODE: $00001743 VOL: 0
;PCODE: $00001744 VOL: 0
;PCODE: $00001745 VOL: 0
; 0000 0A01 delay_ms(50);
;PCODE: $00001746 VOL: 0
;PCODE: $00001747 VOL: 0
;PCODE: $00001748 VOL: 0
; 0000 0A02 }
; 0000 0A03 else
;PCODE: $00001749 VOL: 0
;PCODE: $0000174A VOL: 0
; 0000 0A04 {
; 0000 0A05 bit_phim = 1;
;PCODE: $0000174B VOL: 0
;PCODE: $0000174C VOL: 0
;PCODE: $0000174D VOL: 0
; 0000 0A06 delay_ms(25);
;PCODE: $0000174E VOL: 0
;PCODE: $0000174F VOL: 0
;PCODE: $00001750 VOL: 0
; 0000 0A07 }
;PCODE: $00001751 VOL: 0
; 0000 0A08 // phim shift
; 0000 0A09 if ((Shift_pin == 0) && (bit_phim == 1) && ((strcmp(hienthi, "sdt") == 0) | (str ...
;PCODE: $00001752 VOL: 0
;PCODE: $00001753 VOL: 0
;PCODE: $00001754 VOL: 0
;PCODE: $00001755 VOL: 0
;PCODE: $00001756 VOL: 0
;PCODE: $00001757 VOL: 0
;PCODE: $00001758 VOL: 0
;PCODE: $00001759 VOL: 0
;PCODE: $0000175A VOL: 0
;PCODE: $0000175B VOL: 0
;PCODE: $0000175C VOL: 0
;PCODE: $0000175D VOL: 0
;PCODE: $0000175E VOL: 0
;PCODE: $0000175F VOL: 0
;PCODE: $00001760 VOL: 0
;PCODE: $00001761 VOL: 0
;PCODE: $00001762 VOL: 0
;PCODE: $00001763 VOL: 0
;PCODE: $00001764 VOL: 0
;PCODE: $00001765 VOL: 0
;PCODE: $00001766 VOL: 0
;PCODE: $00001767 VOL: 0
;PCODE: $00001768 VOL: 0
;PCODE: $00001769 VOL: 0
;PCODE: $0000176A VOL: 0
;PCODE: $0000176B VOL: 0
;PCODE: $0000176C VOL: 0
;PCODE: $0000176D VOL: 0
;PCODE: $0000176E VOL: 0
;PCODE: $0000176F VOL: 0
;PCODE: $00001770 VOL: 0
;PCODE: $00001771 VOL: 0
;PCODE: $00001772 VOL: 0
;PCODE: $00001773 VOL: 0
;PCODE: $00001774 VOL: 0
;PCODE: $00001775 VOL: 0
;PCODE: $00001776 VOL: 0
;PCODE: $00001777 VOL: 0
; 0000 0A0A {
; 0000 0A0B cot++;
;PCODE: $00001778 VOL: 0
;PCODE: $00001779 VOL: 0
;PCODE: $0000177A VOL: 0
;PCODE: $0000177B VOL: 0
; 0000 0A0C bit_phim = 0;
;PCODE: $0000177C VOL: 0
;PCODE: $0000177D VOL: 0
;PCODE: $0000177E VOL: 0
; 0000 0A0D delay_ms(50);
;PCODE: $0000177F VOL: 0
;PCODE: $00001780 VOL: 0
;PCODE: $00001781 VOL: 0
; 0000 0A0E }
; 0000 0A0F else
;PCODE: $00001782 VOL: 0
;PCODE: $00001783 VOL: 0
; 0000 0A10 {
; 0000 0A11 bit_phim = 1;
;PCODE: $00001784 VOL: 0
;PCODE: $00001785 VOL: 0
;PCODE: $00001786 VOL: 0
; 0000 0A12 delay_ms(25);
;PCODE: $00001787 VOL: 0
;PCODE: $00001788 VOL: 0
;PCODE: $00001789 VOL: 0
; 0000 0A13 }
;PCODE: $0000178A VOL: 0
; 0000 0A14 }
;PCODE: $0000178B VOL: 0
;PCODE: $0000178C VOL: 0

	.DSEG
_0x4F:
	.BYTE 0x116
;interrupt[TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0A18 {

	.CSEG
;PCODE: $0000178D VOL: 0
;PCODE: $0000178E VOL: 0
; 0000 0A19 // Reinitialize Timer 0 value
; 0000 0A1A TCNT0 = 0xF0;
;PCODE: $0000178F VOL: 0
;PCODE: $00001790 VOL: 0
; 0000 0A1B // Place your code here
; 0000 0A1C }
;PCODE: $00001791 VOL: 0
;PCODE: $00001792 VOL: 0
;PCODE: $00001793 VOL: 0
;interrupt[TIM0_COMP] void timer0_comp_isr(void)
; 0000 0A20 {
;PCODE: $00001794 VOL: 0
;PCODE: $00001795 VOL: 0
; 0000 0A21 // Place your code here
; 0000 0A22 dht++;
;PCODE: $00001796 VOL: 0
;PCODE: $00001797 VOL: 0
;PCODE: $00001798 VOL: 0
;PCODE: $00001799 VOL: 0
; 0000 0A23 }
;PCODE: $0000179A VOL: 0
;PCODE: $0000179B VOL: 0
;PCODE: $0000179C VOL: 0
;interrupt[TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0A27 {
;PCODE: $0000179D VOL: 0
;PCODE: $0000179E VOL: 0
; 0000 0A28 // Place your code here
; 0000 0A29 DHT22_getdata(&dht_nhiet_do, &dht_do_am);
;PCODE: $0000179F VOL: 0
;PCODE: $000017A0 VOL: 0
;PCODE: $000017A1 VOL: 0
;PCODE: $000017A2 VOL: 0
; 0000 0A2A }
;PCODE: $000017A3 VOL: 0
;PCODE: $000017A4 VOL: 0
;PCODE: $000017A5 VOL: 0
;void main(void)
; 0000 0A2C {
;PCODE: $000017A6 VOL: 0
; 0000 0A2D // Declare your local variables here
; 0000 0A2E 
; 0000 0A2F // Input/Output Ports initialization
; 0000 0A30 // Port A initialization
; 0000 0A31 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A32 DDRA = (0 << DDA7) | (0 << DDA6) | (0 << DDA5) | (0 << DDA4) | (0 << DDA3) | (0  ...
;PCODE: $000017A7 VOL: 0
;PCODE: $000017A8 VOL: 0
; 0000 0A33 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A34 PORTA = (0 << PORTA7) | (0 << PORTA6) | (0 << PORTA5) | (0 << PORTA4) | (0 << PO ...
;PCODE: $000017A9 VOL: 0
;PCODE: $000017AA VOL: 0
; 0000 0A35 
; 0000 0A36 // Port B initialization
; 0000 0A37 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A38 DDRB = (0 << DDB7) | (0 << DDB6) | (0 << DDB5) | (0 << DDB4) | (0 << DDB3) | (0  ...
;PCODE: $000017AB VOL: 0
;PCODE: $000017AC VOL: 0
; 0000 0A39 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=T Bit0=T
; 0000 0A3A PORTB = (0 << PORTB7) | (0 << PORTB6) | (0 << PORTB5) | (1 << PORTB4) | (1 << PO ...
;PCODE: $000017AD VOL: 0
;PCODE: $000017AE VOL: 0
; 0000 0A3B 
; 0000 0A3C // Port C initialization
; 0000 0A3D // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A3E DDRC = (0 << DDC7) | (0 << DDC6) | (0 << DDC5) | (1 << DDC4) | (0 << DDC3) | (0  ...
;PCODE: $000017AF VOL: 0
;PCODE: $000017B0 VOL: 0
; 0000 0A3F // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A40 PORTC = (0 << PORTC7) | (0 << PORTC6) | (0 << PORTC5) | (0 << PORTC4) | (0 << PO ...
;PCODE: $000017B1 VOL: 0
;PCODE: $000017B2 VOL: 0
; 0000 0A41 
; 0000 0A42 // Port D initialization
; 0000 0A43 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A44 DDRD = (1 << DDD7) | (1 << DDD6) | (1 << DDD5) | (0 << DDD4) | (0 << DDD3) | (0  ...
;PCODE: $000017B3 VOL: 0
;PCODE: $000017B4 VOL: 0
; 0000 0A45 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A46 PORTD = (0 << PORTD7) | (0 << PORTD6) | (0 << PORTD5) | (0 << PORTD4) | (0 << PO ...
;PCODE: $000017B5 VOL: 0
;PCODE: $000017B6 VOL: 0
; 0000 0A47 
; 0000 0A48 // Port E initialization
; 0000 0A49 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A4A DDRE = (0 << DDE7) | (0 << DDE6) | (0 << DDE5) | (0 << DDE4) | (0 << DDE3) | (0  ...
;PCODE: $000017B7 VOL: 0
;PCODE: $000017B8 VOL: 0
; 0000 0A4B // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=T Bit1=T Bit0=T
; 0000 0A4C PORTE = (1 << PORTE7) | (1 << PORTE6) | (1 << PORTE5) | (1 << PORTE4) | (1 << PO ...
;PCODE: $000017B9 VOL: 0
;PCODE: $000017BA VOL: 0
; 0000 0A4D 
; 0000 0A4E // Port F initialization
; 0000 0A4F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A50 DDRF = (0 << DDF7) | (0 << DDF6) | (0 << DDF5) | (0 << DDF4) | (0 << DDF3) | (0  ...
;PCODE: $000017BB VOL: 0
;PCODE: $000017BC VOL: 0
; 0000 0A51 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A52 PORTF = (0 << PORTF7) | (0 << PORTF6) | (0 << PORTF5) | (0 << PORTF4) | (1 << PO ...
;PCODE: $000017BD VOL: 0
;PCODE: $000017BE VOL: 0
; 0000 0A53 
; 0000 0A54 // Port G initialization
; 0000 0A55 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A56 DDRG = (0 << DDG4) | (0 << DDG3) | (0 << DDG2) | (0 << DDG1) | (0 << DDG0);
;PCODE: $000017BF VOL: 0
;PCODE: $000017C0 VOL: 0
; 0000 0A57 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A58 PORTG = (0 << PORTG4) | (0 << PORTG3) | (0 << PORTG2) | (0 << PORTG1) | (0 << PO ...
;PCODE: $000017C1 VOL: 0
;PCODE: $000017C2 VOL: 0
; 0000 0A59 
; 0000 0A5A // Timer/Counter 0 initialization
; 0000 0A5B // Clock source: System Clock
; 0000 0A5C // Clock value: 8000,000 kHz
; 0000 0A5D // Mode: Normal top=0xFF
; 0000 0A5E // OC0 output: Disconnected
; 0000 0A5F // Timer Period: 2 us
; 0000 0A60 ASSR = 0 << AS0;
;PCODE: $000017C3 VOL: 0
;PCODE: $000017C4 VOL: 0
; 0000 0A61 TCCR0 = (0 << WGM00) | (0 << COM01) | (0 << COM00) | (0 << WGM01) | (0 << CS02)  ...
;PCODE: $000017C5 VOL: 0
;PCODE: $000017C6 VOL: 0
; 0000 0A62 TCNT0 = 0xF0;
;PCODE: $000017C7 VOL: 0
;PCODE: $000017C8 VOL: 0
; 0000 0A63 OCR0 = 0x00;
;PCODE: $000017C9 VOL: 0
;PCODE: $000017CA VOL: 0
; 0000 0A64 
; 0000 0A65 // Timer/Counter 1 initialization
; 0000 0A66 // Clock source: System Clock
; 0000 0A67 // Clock value: 31,250 kHz
; 0000 0A68 // Mode: Normal top=0xFFFF
; 0000 0A69 // OC1A output: Disconnected
; 0000 0A6A // OC1B output: Disconnected
; 0000 0A6B // OC1C output: Disconnected
; 0000 0A6C // Noise Canceler: Off
; 0000 0A6D // Input Capture on Rising Edge
; 0000 0A6E // Timer Period: 2,0972 s
; 0000 0A6F // Timer1 Overflow Interrupt: On
; 0000 0A70 // Input Capture Interrupt: Off
; 0000 0A71 // Compare A Match Interrupt: Off
; 0000 0A72 // Compare B Match Interrupt: Off
; 0000 0A73 // Compare C Match Interrupt: Off
; 0000 0A74 TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << C ...
;PCODE: $000017CB VOL: 0
;PCODE: $000017CC VOL: 0
; 0000 0A75 TCCR1B = (0 << ICNC1) | (1 << ICES1) | (0 << WGM13) | (0 << WGM12) | (1 << CS12) ...
;PCODE: $000017CD VOL: 0
;PCODE: $000017CE VOL: 0
; 0000 0A76 TCNT1H = 0xFF;
;PCODE: $000017CF VOL: 0
;PCODE: $000017D0 VOL: 0
; 0000 0A77 TCNT1L = 0xFE;
;PCODE: $000017D1 VOL: 0
;PCODE: $000017D2 VOL: 0
; 0000 0A78 ICR1H = 0x00;
;PCODE: $000017D3 VOL: 0
;PCODE: $000017D4 VOL: 0
; 0000 0A79 ICR1L = 0x00;
;PCODE: $000017D5 VOL: 0
;PCODE: $000017D6 VOL: 0
; 0000 0A7A OCR1AH = 0x00;
;PCODE: $000017D7 VOL: 0
;PCODE: $000017D8 VOL: 0
; 0000 0A7B OCR1AL = 0x00;
;PCODE: $000017D9 VOL: 0
;PCODE: $000017DA VOL: 0
; 0000 0A7C OCR1BH = 0x00;
;PCODE: $000017DB VOL: 0
;PCODE: $000017DC VOL: 0
; 0000 0A7D OCR1BL = 0x00;
;PCODE: $000017DD VOL: 0
;PCODE: $000017DE VOL: 0
; 0000 0A7E OCR1CH = 0x00;
;PCODE: $000017DF VOL: 0
;PCODE: $000017E0 VOL: 0
; 0000 0A7F OCR1CL = 0x00;
;PCODE: $000017E1 VOL: 0
;PCODE: $000017E2 VOL: 0
; 0000 0A80 
; 0000 0A81 // Timer/Counter 2 initialization
; 0000 0A82 // Clock source: System Clock
; 0000 0A83 // Clock value: Timer2 Stopped
; 0000 0A84 // Mode: Normal top=0xFF
; 0000 0A85 // OC2 output: Disconnected
; 0000 0A86 TCCR2 = (0 << WGM20) | (0 << COM21) | (0 << COM20) | (0 << WGM21) | (0 << CS22)  ...
;PCODE: $000017E3 VOL: 0
;PCODE: $000017E4 VOL: 0
; 0000 0A87 TCNT2 = 0x00;
;PCODE: $000017E5 VOL: 0
;PCODE: $000017E6 VOL: 0
; 0000 0A88 OCR2 = 0x00;
;PCODE: $000017E7 VOL: 0
;PCODE: $000017E8 VOL: 0
; 0000 0A89 
; 0000 0A8A // Timer/Counter 3 initialization
; 0000 0A8B // Clock source: System Clock
; 0000 0A8C // Clock value: Timer3 Stopped
; 0000 0A8D // Mode: Normal top=0xFFFF
; 0000 0A8E // OC3A output: Disconnected
; 0000 0A8F // OC3B output: Disconnected
; 0000 0A90 // OC3C output: Disconnected
; 0000 0A91 // Noise Canceler: Off
; 0000 0A92 // Input Capture on Falling Edge
; 0000 0A93 // Timer3 Overflow Interrupt: Off
; 0000 0A94 // Input Capture Interrupt: Off
; 0000 0A95 // Compare A Match Interrupt: Off
; 0000 0A96 // Compare B Match Interrupt: Off
; 0000 0A97 // Compare C Match Interrupt: Off
; 0000 0A98 TCCR3A = (0 << COM3A1) | (0 << COM3A0) | (0 << COM3B1) | (0 << COM3B0) | (0 << C ...
;PCODE: $000017E9 VOL: 0
;PCODE: $000017EA VOL: 0
; 0000 0A99 TCCR3B = (0 << ICNC3) | (0 << ICES3) | (0 << WGM33) | (0 << WGM32) | (0 << CS32) ...
;PCODE: $000017EB VOL: 0
;PCODE: $000017EC VOL: 0
; 0000 0A9A TCNT3H = 0x00;
;PCODE: $000017ED VOL: 0
;PCODE: $000017EE VOL: 0
; 0000 0A9B TCNT3L = 0x00;
;PCODE: $000017EF VOL: 0
;PCODE: $000017F0 VOL: 0
; 0000 0A9C ICR3H = 0x00;
;PCODE: $000017F1 VOL: 0
;PCODE: $000017F2 VOL: 0
; 0000 0A9D ICR3L = 0x00;
;PCODE: $000017F3 VOL: 0
;PCODE: $000017F4 VOL: 0
; 0000 0A9E OCR3AH = 0x00;
;PCODE: $000017F5 VOL: 0
;PCODE: $000017F6 VOL: 0
; 0000 0A9F OCR3AL = 0x00;
;PCODE: $000017F7 VOL: 0
;PCODE: $000017F8 VOL: 0
; 0000 0AA0 OCR3BH = 0x00;
;PCODE: $000017F9 VOL: 0
;PCODE: $000017FA VOL: 0
; 0000 0AA1 OCR3BL = 0x00;
;PCODE: $000017FB VOL: 0
;PCODE: $000017FC VOL: 0
; 0000 0AA2 OCR3CH = 0x00;
;PCODE: $000017FD VOL: 0
;PCODE: $000017FE VOL: 0
; 0000 0AA3 OCR3CL = 0x00;
;PCODE: $000017FF VOL: 0
;PCODE: $00001800 VOL: 0
; 0000 0AA4 
; 0000 0AA5 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0AA6 TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE ...
;PCODE: $00001801 VOL: 0
;PCODE: $00001802 VOL: 0
; 0000 0AA7 ETIMSK = (0 << TICIE3) | (0 << OCIE3A) | (0 << OCIE3B) | (0 << TOIE3) | (0 << OC ...
;PCODE: $00001803 VOL: 0
;PCODE: $00001804 VOL: 0
; 0000 0AA8 
; 0000 0AA9 // External Interrupt(s) initialization
; 0000 0AAA // INT0: Off
; 0000 0AAB // INT1: Off
; 0000 0AAC // INT2: Off
; 0000 0AAD // INT3: Off
; 0000 0AAE // INT4: Off
; 0000 0AAF // INT5: Off
; 0000 0AB0 // INT6: Off
; 0000 0AB1 // INT7: On
; 0000 0AB2 // INT7 Mode: Falling Edge
; 0000 0AB3 EICRA = (0 << ISC31) | (0 << ISC30) | (0 << ISC21) | (0 << ISC20) | (0 << ISC11) ...
;PCODE: $00001805 VOL: 0
;PCODE: $00001806 VOL: 0
; 0000 0AB4 EICRB = (1 << ISC71) | (0 << ISC70) | (0 << ISC61) | (0 << ISC60) | (0 << ISC51) ...
;PCODE: $00001807 VOL: 0
;PCODE: $00001808 VOL: 0
; 0000 0AB5 EIMSK = (1 << INT7) | (0 << INT6) | (0 << INT5) | (0 << INT4) | (0 << INT3) | (0 ...
;PCODE: $00001809 VOL: 0
;PCODE: $0000180A VOL: 0
; 0000 0AB6 EIFR = (1 << INTF7) | (0 << INTF6) | (0 << INTF5) | (0 << INTF4) | (0 << INTF3)  ...
;PCODE: $0000180B VOL: 0
;PCODE: $0000180C VOL: 0
; 0000 0AB7 
; 0000 0AB8 // USART0 initialization
; 0000 0AB9 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0ABA // USART0 Receiver: On
; 0000 0ABB // USART0 Transmitter: On
; 0000 0ABC // USART0 Mode: Asynchronous
; 0000 0ABD // USART0 Baud Rate: 9600
; 0000 0ABE UCSR0A = (0 << RXC0) | (0 << TXC0) | (0 << UDRE0) | (0 << FE0) | (0 << DOR0) | ( ...
;PCODE: $0000180D VOL: 0
;PCODE: $0000180E VOL: 0
; 0000 0ABF UCSR0B = (0 << RXCIE0) | (0 << TXCIE0) | (0 << UDRIE0) | (1 << RXEN0) | (1 << TX ...
;PCODE: $0000180F VOL: 0
;PCODE: $00001810 VOL: 0
; 0000 0AC0 UCSR0C = (0 << UMSEL0) | (0 << UPM01) | (0 << UPM00) | (0 << USBS0) | (1 << UCSZ ...
;PCODE: $00001811 VOL: 0
;PCODE: $00001812 VOL: 0
; 0000 0AC1 UBRR0H = 0x00;
;PCODE: $00001813 VOL: 0
;PCODE: $00001814 VOL: 0
; 0000 0AC2 UBRR0L = 0x33;
;PCODE: $00001815 VOL: 0
;PCODE: $00001816 VOL: 0
; 0000 0AC3 
; 0000 0AC4 // USART1 initialization
; 0000 0AC5 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0AC6 // USART1 Receiver: On
; 0000 0AC7 // USART1 Transmitter: On
; 0000 0AC8 // USART1 Mode: Asynchronous
; 0000 0AC9 // USART1 Baud Rate: 9600
; 0000 0ACA UCSR1A = (0 << RXC1) | (0 << TXC1) | (0 << UDRE1) | (0 << FE1) | (0 << DOR1) | ( ...
;PCODE: $00001817 VOL: 0
;PCODE: $00001818 VOL: 0
; 0000 0ACB UCSR1B = (0 << RXCIE1) | (0 << TXCIE1) | (0 << UDRIE1) | (1 << RXEN1) | (1 << TX ...
;PCODE: $00001819 VOL: 0
;PCODE: $0000181A VOL: 0
; 0000 0ACC UCSR1C = (0 << UMSEL1) | (0 << UPM11) | (0 << UPM10) | (0 << USBS1) | (1 << UCSZ ...
;PCODE: $0000181B VOL: 0
;PCODE: $0000181C VOL: 0
; 0000 0ACD UBRR1H = 0x00;
;PCODE: $0000181D VOL: 0
;PCODE: $0000181E VOL: 0
; 0000 0ACE UBRR1L = 0x33;
;PCODE: $0000181F VOL: 0
;PCODE: $00001820 VOL: 0
; 0000 0ACF 
; 0000 0AD0 // Analog Comparator initialization
; 0000 0AD1 // Analog Comparator: Off
; 0000 0AD2 // The Analog Comparator's positive input is
; 0000 0AD3 // connected to the AIN0 pin
; 0000 0AD4 // The Analog Comparator's negative input is
; 0000 0AD5 // connected to the AIN1 pin
; 0000 0AD6 ACSR = (1 << ACD) | (0 << ACBG) | (0 << ACO) | (0 << ACI) | (0 << ACIE) | (0 <<  ...
;PCODE: $00001821 VOL: 0
;PCODE: $00001822 VOL: 0
; 0000 0AD7 
; 0000 0AD8 // ADC initialization
; 0000 0AD9 // ADC Clock frequency: 1000,000 kHz
; 0000 0ADA // ADC Voltage Reference: AREF pin
; 0000 0ADB ADMUX = ADC_VREF_TYPE;
;PCODE: $00001823 VOL: 0
;PCODE: $00001824 VOL: 0
; 0000 0ADC ADCSRA = (1 << ADEN) | (0 << ADSC) | (0 << ADFR) | (0 << ADIF) | (0 << ADIE) | ( ...
;PCODE: $00001825 VOL: 0
;PCODE: $00001826 VOL: 0
; 0000 0ADD SFIOR = (0 << ACME);
;PCODE: $00001827 VOL: 0
;PCODE: $00001828 VOL: 0
; 0000 0ADE 
; 0000 0ADF // SPI initialization
; 0000 0AE0 // SPI disabled
; 0000 0AE1 SPCR = (0 << SPIE) | (0 << SPE) | (0 << DORD) | (0 << MSTR) | (0 << CPOL) | (0 < ...
;PCODE: $00001829 VOL: 0
;PCODE: $0000182A VOL: 0
; 0000 0AE2 
; 0000 0AE3 // TWI initialization
; 0000 0AE4 // TWI disabled
; 0000 0AE5 TWCR = (0 << TWEA) | (0 << TWSTA) | (0 << TWSTO) | (0 << TWEN) | (0 << TWIE);
;PCODE: $0000182B VOL: 0
;PCODE: $0000182C VOL: 0
; 0000 0AE6 
; 0000 0AE7 // Bit-Banged I2C Bus initialization
; 0000 0AE8 // I2C Port: PORTD
; 0000 0AE9 // I2C SDA bit: 1
; 0000 0AEA // I2C SCL bit: 0
; 0000 0AEB // Bit Rate: 100 kHz
; 0000 0AEC // Note: I2C settings are specified in the
; 0000 0AED // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 0AEE i2c_init();
;PCODE: $0000182D VOL: 0
; 0000 0AEF 
; 0000 0AF0 // DS1307 Real Time Clock initialization
; 0000 0AF1 // Square wave output on pin SQW/OUT: Off
; 0000 0AF2 // SQW/OUT pin state: 0
; 0000 0AF3 rtc_init(0, 0, 0);
;PCODE: $0000182E VOL: 0
;PCODE: $0000182F VOL: 0
;PCODE: $00001830 VOL: 0
;PCODE: $00001831 VOL: 0
;PCODE: $00001832 VOL: 0
;PCODE: $00001833 VOL: 0
; 0000 0AF4 
; 0000 0AF5 // Alphanumeric LCD initialization
; 0000 0AF6 // Connections are specified in the
; 0000 0AF7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0AF8 // RS - PORTA Bit 0
; 0000 0AF9 // RD - PORTA Bit 1
; 0000 0AFA // EN - PORTA Bit 2
; 0000 0AFB // D4 - PORTA Bit 4
; 0000 0AFC // D5 - PORTA Bit 5
; 0000 0AFD // D6 - PORTA Bit 6
; 0000 0AFE // D7 - PORTA Bit 7
; 0000 0AFF // Characters/line: 20
; 0000 0B00 lcd_init(20);
;PCODE: $00001834 VOL: 0
;PCODE: $00001835 VOL: 0
; 0000 0B01 
; 0000 0B02 // Global enable interrupts
; 0000 0B03 #asm("sei")
;PCODE: $00001836 VOL: 0
; 0000 0B04 coi = 0;
;PCODE: $00001837 VOL: 0
;PCODE: $00001838 VOL: 0
; 0000 0B05 delay_ms(10000);
;PCODE: $00001839 VOL: 0
;PCODE: $0000183A VOL: 0
; 0000 0B06 khoitaosim();
;PCODE: $0000183B VOL: 0
; 0000 0B07 lcd_clear();
;PCODE: $0000183C VOL: 0
; 0000 0B08 // "0334271185"
; 0000 0B09 sdt_sms1 = EEPROM_read(21);
;PCODE: $0000183D VOL: 0
;PCODE: $0000183E VOL: 0
;PCODE: $0000183F VOL: 0
;PCODE: $00001840 VOL: 0
;PCODE: $00001841 VOL: 0
; 0000 0B0A sdt_sms2 = EEPROM_read(22);
;PCODE: $00001842 VOL: 0
;PCODE: $00001843 VOL: 0
;PCODE: $00001844 VOL: 0
;PCODE: $00001845 VOL: 0
;PCODE: $00001846 VOL: 0
; 0000 0B0B sdt_sms3 = EEPROM_read(23);
;PCODE: $00001847 VOL: 0
;PCODE: $00001848 VOL: 0
;PCODE: $00001849 VOL: 0
;PCODE: $0000184A VOL: 0
;PCODE: $0000184B VOL: 0
; 0000 0B0C sdt_sms4 = EEPROM_read(24);
;PCODE: $0000184C VOL: 0
;PCODE: $0000184D VOL: 0
;PCODE: $0000184E VOL: 0
;PCODE: $0000184F VOL: 0
;PCODE: $00001850 VOL: 0
; 0000 0B0D sdt_sms5 = EEPROM_read(25);
;PCODE: $00001851 VOL: 0
;PCODE: $00001852 VOL: 0
;PCODE: $00001853 VOL: 0
;PCODE: $00001854 VOL: 0
;PCODE: $00001855 VOL: 0
; 0000 0B0E sdt_sms6 = EEPROM_read(26);
;PCODE: $00001856 VOL: 0
;PCODE: $00001857 VOL: 0
;PCODE: $00001858 VOL: 0
;PCODE: $00001859 VOL: 0
;PCODE: $0000185A VOL: 0
; 0000 0B0F sdt_sms7 = EEPROM_read(27);
;PCODE: $0000185B VOL: 0
;PCODE: $0000185C VOL: 0
;PCODE: $0000185D VOL: 0
;PCODE: $0000185E VOL: 0
;PCODE: $0000185F VOL: 0
; 0000 0B10 sdt_sms8 = EEPROM_read(28);
;PCODE: $00001860 VOL: 0
;PCODE: $00001861 VOL: 0
;PCODE: $00001862 VOL: 0
;PCODE: $00001863 VOL: 0
;PCODE: $00001864 VOL: 0
; 0000 0B11 sdt_sms9 = EEPROM_read(29);
;PCODE: $00001865 VOL: 0
;PCODE: $00001866 VOL: 0
;PCODE: $00001867 VOL: 0
;PCODE: $00001868 VOL: 0
;PCODE: $00001869 VOL: 0
; 0000 0B12 if (!((sdt_sms1 >= 0) & (sdt_sms2 >= 0) & (sdt_sms3 >= 0) & (sdt_sms4 >= 0) & (s ...
;PCODE: $0000186A VOL: 0
;PCODE: $0000186B VOL: 0
;PCODE: $0000186C VOL: 0
;PCODE: $0000186D VOL: 0
;PCODE: $0000186E VOL: 0
;PCODE: $0000186F VOL: 0
;PCODE: $00001870 VOL: 0
;PCODE: $00001871 VOL: 0
;PCODE: $00001872 VOL: 0
;PCODE: $00001873 VOL: 0
;PCODE: $00001874 VOL: 0
;PCODE: $00001875 VOL: 0
;PCODE: $00001876 VOL: 0
;PCODE: $00001877 VOL: 0
;PCODE: $00001878 VOL: 0
;PCODE: $00001879 VOL: 0
;PCODE: $0000187A VOL: 0
;PCODE: $0000187B VOL: 0
;PCODE: $0000187C VOL: 0
;PCODE: $0000187D VOL: 0
;PCODE: $0000187E VOL: 0
;PCODE: $0000187F VOL: 0
;PCODE: $00001880 VOL: 0
;PCODE: $00001881 VOL: 0
;PCODE: $00001882 VOL: 0
;PCODE: $00001883 VOL: 0
;PCODE: $00001884 VOL: 0
;PCODE: $00001885 VOL: 0
;PCODE: $00001886 VOL: 0
;PCODE: $00001887 VOL: 0
;PCODE: $00001888 VOL: 0
;PCODE: $00001889 VOL: 0
;PCODE: $0000188A VOL: 0
;PCODE: $0000188B VOL: 0
;PCODE: $0000188C VOL: 0
;PCODE: $0000188D VOL: 0
;PCODE: $0000188E VOL: 0
;PCODE: $0000188F VOL: 0
;PCODE: $00001890 VOL: 0
;PCODE: $00001891 VOL: 0
;PCODE: $00001892 VOL: 0
;PCODE: $00001893 VOL: 0
;PCODE: $00001894 VOL: 0
;PCODE: $00001895 VOL: 0
;PCODE: $00001896 VOL: 0
;PCODE: $00001897 VOL: 0
;PCODE: $00001898 VOL: 0
;PCODE: $00001899 VOL: 0
;PCODE: $0000189A VOL: 0
;PCODE: $0000189B VOL: 0
;PCODE: $0000189C VOL: 0
;PCODE: $0000189D VOL: 0
;PCODE: $0000189E VOL: 0
;PCODE: $0000189F VOL: 0
;PCODE: $000018A0 VOL: 0
;PCODE: $000018A1 VOL: 0
;PCODE: $000018A2 VOL: 0
;PCODE: $000018A3 VOL: 0
;PCODE: $000018A4 VOL: 0
;PCODE: $000018A5 VOL: 0
;PCODE: $000018A6 VOL: 0
;PCODE: $000018A7 VOL: 0
;PCODE: $000018A8 VOL: 0
;PCODE: $000018A9 VOL: 0
;PCODE: $000018AA VOL: 0
;PCODE: $000018AB VOL: 0
;PCODE: $000018AC VOL: 0
;PCODE: $000018AD VOL: 0
;PCODE: $000018AE VOL: 0
;PCODE: $000018AF VOL: 0
;PCODE: $000018B0 VOL: 0
;PCODE: $000018B1 VOL: 0
;PCODE: $000018B2 VOL: 0
;PCODE: $000018B3 VOL: 0
;PCODE: $000018B4 VOL: 0
;PCODE: $000018B5 VOL: 0
;PCODE: $000018B6 VOL: 0
;PCODE: $000018B7 VOL: 0
;PCODE: $000018B8 VOL: 0
;PCODE: $000018B9 VOL: 0
;PCODE: $000018BA VOL: 0
;PCODE: $000018BB VOL: 0
;PCODE: $000018BC VOL: 0
;PCODE: $000018BD VOL: 0
;PCODE: $000018BE VOL: 0
;PCODE: $000018BF VOL: 0
;PCODE: $000018C0 VOL: 0
;PCODE: $000018C1 VOL: 0
;PCODE: $000018C2 VOL: 0
; 0000 0B13 {
; 0000 0B14 // sdt_sms1 = sdt_sms2 = sdt_sms3 = sdt_sms4 = sdt_sms5 = sdt_sms6 = sdt_sms7 =  ...
; 0000 0B15 sdt_sms1 = 0; // 5
;PCODE: $000018C3 VOL: 0
;PCODE: $000018C4 VOL: 0
; 0000 0B16 sdt_sms2 = 3; // 5
;PCODE: $000018C5 VOL: 0
;PCODE: $000018C6 VOL: 0
; 0000 0B17 sdt_sms3 = 4; // 9
;PCODE: $000018C7 VOL: 0
;PCODE: $000018C8 VOL: 0
; 0000 0B18 sdt_sms4 = 2; // 6
;PCODE: $000018C9 VOL: 0
;PCODE: $000018CA VOL: 0
; 0000 0B19 sdt_sms5 = 7; // 9
;PCODE: $000018CB VOL: 0
;PCODE: $000018CC VOL: 0
; 0000 0B1A sdt_sms6 = 1; // 6
;PCODE: $000018CD VOL: 0
;PCODE: $000018CE VOL: 0
; 0000 0B1B sdt_sms7 = 1; // 9
;PCODE: $000018CF VOL: 0
;PCODE: $000018D0 VOL: 0
; 0000 0B1C sdt_sms8 = 8; // 1
;PCODE: $000018D1 VOL: 0
;PCODE: $000018D2 VOL: 0
; 0000 0B1D sdt_sms9 = 5; // 5
;PCODE: $000018D3 VOL: 0
;PCODE: $000018D4 VOL: 0
; 0000 0B1E EEPROM_write(21, sdt_sms1);
;PCODE: $000018D5 VOL: 0
;PCODE: $000018D6 VOL: 0
;PCODE: $000018D7 VOL: 0
;PCODE: $000018D8 VOL: 0
; 0000 0B1F EEPROM_write(22, sdt_sms2);
;PCODE: $000018D9 VOL: 0
;PCODE: $000018DA VOL: 0
;PCODE: $000018DB VOL: 0
;PCODE: $000018DC VOL: 0
; 0000 0B20 EEPROM_write(23, sdt_sms3);
;PCODE: $000018DD VOL: 0
;PCODE: $000018DE VOL: 0
;PCODE: $000018DF VOL: 0
;PCODE: $000018E0 VOL: 0
; 0000 0B21 EEPROM_write(24, sdt_sms4);
;PCODE: $000018E1 VOL: 0
;PCODE: $000018E2 VOL: 0
;PCODE: $000018E3 VOL: 0
;PCODE: $000018E4 VOL: 0
; 0000 0B22 EEPROM_write(25, sdt_sms5);
;PCODE: $000018E5 VOL: 0
;PCODE: $000018E6 VOL: 0
;PCODE: $000018E7 VOL: 0
;PCODE: $000018E8 VOL: 0
; 0000 0B23 EEPROM_write(26, sdt_sms6);
;PCODE: $000018E9 VOL: 0
;PCODE: $000018EA VOL: 0
;PCODE: $000018EB VOL: 0
;PCODE: $000018EC VOL: 0
; 0000 0B24 EEPROM_write(27, sdt_sms7);
;PCODE: $000018ED VOL: 0
;PCODE: $000018EE VOL: 0
;PCODE: $000018EF VOL: 0
;PCODE: $000018F0 VOL: 0
; 0000 0B25 EEPROM_write(28, sdt_sms8);
;PCODE: $000018F1 VOL: 0
;PCODE: $000018F2 VOL: 0
;PCODE: $000018F3 VOL: 0
;PCODE: $000018F4 VOL: 0
; 0000 0B26 EEPROM_write(29, sdt_sms9);
;PCODE: $000018F5 VOL: 0
;PCODE: $000018F6 VOL: 0
;PCODE: $000018F7 VOL: 0
;PCODE: $000018F8 VOL: 0
; 0000 0B27 sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
;PCODE: $000018F9 VOL: 0
;PCODE: $000018FA VOL: 0
;PCODE: $000018FB VOL: 0
;PCODE: $000018FC VOL: 0
;PCODE: $000018FD VOL: 0
;PCODE: $000018FE VOL: 0
;PCODE: $000018FF VOL: 0
;PCODE: $00001900 VOL: 0
;PCODE: $00001901 VOL: 0
;PCODE: $00001902 VOL: 0
;PCODE: $00001903 VOL: 0
;PCODE: $00001904 VOL: 0
;PCODE: $00001905 VOL: 0
;PCODE: $00001906 VOL: 0
;PCODE: $00001907 VOL: 0
;PCODE: $00001908 VOL: 0
;PCODE: $00001909 VOL: 0
;PCODE: $0000190A VOL: 0
;PCODE: $0000190B VOL: 0
;PCODE: $0000190C VOL: 0
;PCODE: $0000190D VOL: 0
;PCODE: $0000190E VOL: 0
;PCODE: $0000190F VOL: 0
;PCODE: $00001910 VOL: 0
;PCODE: $00001911 VOL: 0
;PCODE: $00001912 VOL: 0
;PCODE: $00001913 VOL: 0
;PCODE: $00001914 VOL: 0
;PCODE: $00001915 VOL: 0
;PCODE: $00001916 VOL: 0
;PCODE: $00001917 VOL: 0
;PCODE: $00001918 VOL: 0
;PCODE: $00001919 VOL: 0
;PCODE: $0000191A VOL: 0
;PCODE: $0000191B VOL: 0
;PCODE: $0000191C VOL: 0
; 0000 0B28 }
; 0000 0B29 else
;PCODE: $0000191D VOL: 0
;PCODE: $0000191E VOL: 0
; 0000 0B2A sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
;PCODE: $0000191F VOL: 0
;PCODE: $00001920 VOL: 0
;PCODE: $00001921 VOL: 0
;PCODE: $00001922 VOL: 0
;PCODE: $00001923 VOL: 0
;PCODE: $00001924 VOL: 0
;PCODE: $00001925 VOL: 0
;PCODE: $00001926 VOL: 0
;PCODE: $00001927 VOL: 0
;PCODE: $00001928 VOL: 0
;PCODE: $00001929 VOL: 0
;PCODE: $0000192A VOL: 0
;PCODE: $0000192B VOL: 0
;PCODE: $0000192C VOL: 0
;PCODE: $0000192D VOL: 0
;PCODE: $0000192E VOL: 0
;PCODE: $0000192F VOL: 0
;PCODE: $00001930 VOL: 0
;PCODE: $00001931 VOL: 0
;PCODE: $00001932 VOL: 0
;PCODE: $00001933 VOL: 0
;PCODE: $00001934 VOL: 0
;PCODE: $00001935 VOL: 0
;PCODE: $00001936 VOL: 0
;PCODE: $00001937 VOL: 0
;PCODE: $00001938 VOL: 0
;PCODE: $00001939 VOL: 0
;PCODE: $0000193A VOL: 0
;PCODE: $0000193B VOL: 0
;PCODE: $0000193C VOL: 0
;PCODE: $0000193D VOL: 0
;PCODE: $0000193E VOL: 0
;PCODE: $0000193F VOL: 0
;PCODE: $00001940 VOL: 0
;PCODE: $00001941 VOL: 0
;PCODE: $00001942 VOL: 0
; 0000 0B2B sdt_call1 = EEPROM_read(11);
;PCODE: $00001943 VOL: 0
;PCODE: $00001944 VOL: 0
;PCODE: $00001945 VOL: 0
;PCODE: $00001946 VOL: 0
;PCODE: $00001947 VOL: 0
;PCODE: $00001948 VOL: 0
; 0000 0B2C sdt_call2 = EEPROM_read(12);
;PCODE: $00001949 VOL: 0
;PCODE: $0000194A VOL: 0
;PCODE: $0000194B VOL: 0
;PCODE: $0000194C VOL: 0
;PCODE: $0000194D VOL: 0
; 0000 0B2D sdt_call3 = EEPROM_read(13);
;PCODE: $0000194E VOL: 0
;PCODE: $0000194F VOL: 0
;PCODE: $00001950 VOL: 0
;PCODE: $00001951 VOL: 0
;PCODE: $00001952 VOL: 0
; 0000 0B2E sdt_call4 = EEPROM_read(14);
;PCODE: $00001953 VOL: 0
;PCODE: $00001954 VOL: 0
;PCODE: $00001955 VOL: 0
;PCODE: $00001956 VOL: 0
;PCODE: $00001957 VOL: 0
; 0000 0B2F sdt_call5 = EEPROM_read(15);
;PCODE: $00001958 VOL: 0
;PCODE: $00001959 VOL: 0
;PCODE: $0000195A VOL: 0
;PCODE: $0000195B VOL: 0
;PCODE: $0000195C VOL: 0
; 0000 0B30 sdt_call6 = EEPROM_read(16);
;PCODE: $0000195D VOL: 0
;PCODE: $0000195E VOL: 0
;PCODE: $0000195F VOL: 0
;PCODE: $00001960 VOL: 0
;PCODE: $00001961 VOL: 0
; 0000 0B31 sdt_call7 = EEPROM_read(17);
;PCODE: $00001962 VOL: 0
;PCODE: $00001963 VOL: 0
;PCODE: $00001964 VOL: 0
;PCODE: $00001965 VOL: 0
;PCODE: $00001966 VOL: 0
; 0000 0B32 sdt_call8 = EEPROM_read(18);
;PCODE: $00001967 VOL: 0
;PCODE: $00001968 VOL: 0
;PCODE: $00001969 VOL: 0
;PCODE: $0000196A VOL: 0
;PCODE: $0000196B VOL: 0
; 0000 0B33 sdt_call9 = EEPROM_read(19);
;PCODE: $0000196C VOL: 0
;PCODE: $0000196D VOL: 0
;PCODE: $0000196E VOL: 0
;PCODE: $0000196F VOL: 0
;PCODE: $00001970 VOL: 0
; 0000 0B34 if (!((sdt_call1 >= 0) & (sdt_call2 >= 0) & (sdt_call3 >= 0) & (sdt_call4 >= 0)  ...
;PCODE: $00001971 VOL: 0
;PCODE: $00001972 VOL: 0
;PCODE: $00001973 VOL: 0
;PCODE: $00001974 VOL: 0
;PCODE: $00001975 VOL: 0
;PCODE: $00001976 VOL: 0
;PCODE: $00001977 VOL: 0
;PCODE: $00001978 VOL: 0
;PCODE: $00001979 VOL: 0
;PCODE: $0000197A VOL: 0
;PCODE: $0000197B VOL: 0
;PCODE: $0000197C VOL: 0
;PCODE: $0000197D VOL: 0
;PCODE: $0000197E VOL: 0
;PCODE: $0000197F VOL: 0
;PCODE: $00001980 VOL: 0
;PCODE: $00001981 VOL: 0
;PCODE: $00001982 VOL: 0
;PCODE: $00001983 VOL: 0
;PCODE: $00001984 VOL: 0
;PCODE: $00001985 VOL: 0
;PCODE: $00001986 VOL: 0
;PCODE: $00001987 VOL: 0
;PCODE: $00001988 VOL: 0
;PCODE: $00001989 VOL: 0
;PCODE: $0000198A VOL: 0
;PCODE: $0000198B VOL: 0
;PCODE: $0000198C VOL: 0
;PCODE: $0000198D VOL: 0
;PCODE: $0000198E VOL: 0
;PCODE: $0000198F VOL: 0
;PCODE: $00001990 VOL: 0
;PCODE: $00001991 VOL: 0
;PCODE: $00001992 VOL: 0
;PCODE: $00001993 VOL: 0
;PCODE: $00001994 VOL: 0
;PCODE: $00001995 VOL: 0
;PCODE: $00001996 VOL: 0
;PCODE: $00001997 VOL: 0
;PCODE: $00001998 VOL: 0
;PCODE: $00001999 VOL: 0
;PCODE: $0000199A VOL: 0
;PCODE: $0000199B VOL: 0
;PCODE: $0000199C VOL: 0
;PCODE: $0000199D VOL: 0
;PCODE: $0000199E VOL: 0
;PCODE: $0000199F VOL: 0
;PCODE: $000019A0 VOL: 0
;PCODE: $000019A1 VOL: 0
;PCODE: $000019A2 VOL: 0
;PCODE: $000019A3 VOL: 0
;PCODE: $000019A4 VOL: 0
;PCODE: $000019A5 VOL: 0
;PCODE: $000019A6 VOL: 0
;PCODE: $000019A7 VOL: 0
;PCODE: $000019A8 VOL: 0
;PCODE: $000019A9 VOL: 0
;PCODE: $000019AA VOL: 0
;PCODE: $000019AB VOL: 0
;PCODE: $000019AC VOL: 0
;PCODE: $000019AD VOL: 0
;PCODE: $000019AE VOL: 0
;PCODE: $000019AF VOL: 0
;PCODE: $000019B0 VOL: 0
;PCODE: $000019B1 VOL: 0
;PCODE: $000019B2 VOL: 0
;PCODE: $000019B3 VOL: 0
;PCODE: $000019B4 VOL: 0
;PCODE: $000019B5 VOL: 0
;PCODE: $000019B6 VOL: 0
;PCODE: $000019B7 VOL: 0
;PCODE: $000019B8 VOL: 0
;PCODE: $000019B9 VOL: 0
;PCODE: $000019BA VOL: 0
;PCODE: $000019BB VOL: 0
;PCODE: $000019BC VOL: 0
;PCODE: $000019BD VOL: 0
;PCODE: $000019BE VOL: 0
;PCODE: $000019BF VOL: 0
;PCODE: $000019C0 VOL: 0
;PCODE: $000019C1 VOL: 0
;PCODE: $000019C2 VOL: 0
;PCODE: $000019C3 VOL: 0
;PCODE: $000019C4 VOL: 0
;PCODE: $000019C5 VOL: 0
;PCODE: $000019C6 VOL: 0
;PCODE: $000019C7 VOL: 0
;PCODE: $000019C8 VOL: 0
;PCODE: $000019C9 VOL: 0
; 0000 0B35 {
; 0000 0B36 // sdt_call1 = sdt_call2 = sdt_call3 = sdt_call4 = sdt_call5 = sdt_call6 = sdt_c ...
; 0000 0B37 sdt_call1 = 0; // 5 0
;PCODE: $000019CA VOL: 0
; 0000 0B38 sdt_call2 = 3; // 5 3
;PCODE: $000019CB VOL: 0
;PCODE: $000019CC VOL: 0
; 0000 0B39 sdt_call3 = 4; // 9 4
;PCODE: $000019CD VOL: 0
;PCODE: $000019CE VOL: 0
; 0000 0B3A sdt_call4 = 2; // 6 2
;PCODE: $000019CF VOL: 0
;PCODE: $000019D0 VOL: 0
; 0000 0B3B sdt_call5 = 7; // 9 7
;PCODE: $000019D1 VOL: 0
;PCODE: $000019D2 VOL: 0
; 0000 0B3C sdt_call6 = 1; // 6 1
;PCODE: $000019D3 VOL: 0
;PCODE: $000019D4 VOL: 0
; 0000 0B3D sdt_call7 = 1; // 9 1
;PCODE: $000019D5 VOL: 0
;PCODE: $000019D6 VOL: 0
; 0000 0B3E sdt_call8 = 8; // 1 8
;PCODE: $000019D7 VOL: 0
;PCODE: $000019D8 VOL: 0
; 0000 0B3F sdt_call9 = 5; // 5 5
;PCODE: $000019D9 VOL: 0
;PCODE: $000019DA VOL: 0
; 0000 0B40 EEPROM_write(11, sdt_call1);
;PCODE: $000019DB VOL: 0
;PCODE: $000019DC VOL: 0
;PCODE: $000019DD VOL: 0
;PCODE: $000019DE VOL: 0
; 0000 0B41 EEPROM_write(12, sdt_call2);
;PCODE: $000019DF VOL: 0
;PCODE: $000019E0 VOL: 0
;PCODE: $000019E1 VOL: 0
;PCODE: $000019E2 VOL: 0
; 0000 0B42 EEPROM_write(13, sdt_call3);
;PCODE: $000019E3 VOL: 0
;PCODE: $000019E4 VOL: 0
;PCODE: $000019E5 VOL: 0
;PCODE: $000019E6 VOL: 0
; 0000 0B43 EEPROM_write(14, sdt_call4);
;PCODE: $000019E7 VOL: 0
;PCODE: $000019E8 VOL: 0
;PCODE: $000019E9 VOL: 0
;PCODE: $000019EA VOL: 0
; 0000 0B44 EEPROM_write(15, sdt_call5);
;PCODE: $000019EB VOL: 0
;PCODE: $000019EC VOL: 0
;PCODE: $000019ED VOL: 0
;PCODE: $000019EE VOL: 0
; 0000 0B45 EEPROM_write(16, sdt_call6);
;PCODE: $000019EF VOL: 0
;PCODE: $000019F0 VOL: 0
;PCODE: $000019F1 VOL: 0
;PCODE: $000019F2 VOL: 0
; 0000 0B46 EEPROM_write(17, sdt_call7);
;PCODE: $000019F3 VOL: 0
;PCODE: $000019F4 VOL: 0
;PCODE: $000019F5 VOL: 0
;PCODE: $000019F6 VOL: 0
; 0000 0B47 EEPROM_write(18, sdt_call8);
;PCODE: $000019F7 VOL: 0
;PCODE: $000019F8 VOL: 0
;PCODE: $000019F9 VOL: 0
;PCODE: $000019FA VOL: 0
; 0000 0B48 EEPROM_write(19, sdt_call9);
;PCODE: $000019FB VOL: 0
;PCODE: $000019FC VOL: 0
;PCODE: $000019FD VOL: 0
;PCODE: $000019FE VOL: 0
; 0000 0B49 sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_call ...
;PCODE: $000019FF VOL: 0
;PCODE: $00001A00 VOL: 0
;PCODE: $00001A01 VOL: 0
;PCODE: $00001A02 VOL: 0
;PCODE: $00001A03 VOL: 0
;PCODE: $00001A04 VOL: 0
;PCODE: $00001A05 VOL: 0
;PCODE: $00001A06 VOL: 0
;PCODE: $00001A07 VOL: 0
;PCODE: $00001A08 VOL: 0
;PCODE: $00001A09 VOL: 0
;PCODE: $00001A0A VOL: 0
;PCODE: $00001A0B VOL: 0
;PCODE: $00001A0C VOL: 0
;PCODE: $00001A0D VOL: 0
;PCODE: $00001A0E VOL: 0
;PCODE: $00001A0F VOL: 0
;PCODE: $00001A10 VOL: 0
;PCODE: $00001A11 VOL: 0
;PCODE: $00001A12 VOL: 0
;PCODE: $00001A13 VOL: 0
;PCODE: $00001A14 VOL: 0
;PCODE: $00001A15 VOL: 0
;PCODE: $00001A16 VOL: 0
;PCODE: $00001A17 VOL: 0
;PCODE: $00001A18 VOL: 0
;PCODE: $00001A19 VOL: 0
;PCODE: $00001A1A VOL: 0
;PCODE: $00001A1B VOL: 0
;PCODE: $00001A1C VOL: 0
;PCODE: $00001A1D VOL: 0
;PCODE: $00001A1E VOL: 0
;PCODE: $00001A1F VOL: 0
;PCODE: $00001A20 VOL: 0
;PCODE: $00001A21 VOL: 0
;PCODE: $00001A22 VOL: 0
; 0000 0B4A }
; 0000 0B4B else
;PCODE: $00001A23 VOL: 0
;PCODE: $00001A24 VOL: 0
; 0000 0B4C sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_call ...
;PCODE: $00001A25 VOL: 0
;PCODE: $00001A26 VOL: 0
;PCODE: $00001A27 VOL: 0
;PCODE: $00001A28 VOL: 0
;PCODE: $00001A29 VOL: 0
;PCODE: $00001A2A VOL: 0
;PCODE: $00001A2B VOL: 0
;PCODE: $00001A2C VOL: 0
;PCODE: $00001A2D VOL: 0
;PCODE: $00001A2E VOL: 0
;PCODE: $00001A2F VOL: 0
;PCODE: $00001A30 VOL: 0
;PCODE: $00001A31 VOL: 0
;PCODE: $00001A32 VOL: 0
;PCODE: $00001A33 VOL: 0
;PCODE: $00001A34 VOL: 0
;PCODE: $00001A35 VOL: 0
;PCODE: $00001A36 VOL: 0
;PCODE: $00001A37 VOL: 0
;PCODE: $00001A38 VOL: 0
;PCODE: $00001A39 VOL: 0
;PCODE: $00001A3A VOL: 0
;PCODE: $00001A3B VOL: 0
;PCODE: $00001A3C VOL: 0
;PCODE: $00001A3D VOL: 0
;PCODE: $00001A3E VOL: 0
;PCODE: $00001A3F VOL: 0
;PCODE: $00001A40 VOL: 0
;PCODE: $00001A41 VOL: 0
;PCODE: $00001A42 VOL: 0
;PCODE: $00001A43 VOL: 0
;PCODE: $00001A44 VOL: 0
;PCODE: $00001A45 VOL: 0
;PCODE: $00001A46 VOL: 0
;PCODE: $00001A47 VOL: 0
;PCODE: $00001A48 VOL: 0
; 0000 0B4D dc_low_1 = EEPROM_read(31) * 10 + EEPROM_read(32);
;PCODE: $00001A49 VOL: 0
;PCODE: $00001A4A VOL: 0
;PCODE: $00001A4B VOL: 0
;PCODE: $00001A4C VOL: 0
;PCODE: $00001A4D VOL: 0
;PCODE: $00001A4E VOL: 0
;PCODE: $00001A4F VOL: 0
;PCODE: $00001A50 VOL: 0
;PCODE: $00001A51 VOL: 0
;PCODE: $00001A52 VOL: 0
;PCODE: $00001A53 VOL: 0
;PCODE: $00001A54 VOL: 0
;PCODE: $00001A55 VOL: 0
;PCODE: $00001A56 VOL: 0
; 0000 0B4E dc_low_2 = EEPROM_read(33) * 10 + EEPROM_read(34);
;PCODE: $00001A57 VOL: 0
;PCODE: $00001A58 VOL: 0
;PCODE: $00001A59 VOL: 0
;PCODE: $00001A5A VOL: 0
;PCODE: $00001A5B VOL: 0
;PCODE: $00001A5C VOL: 0
;PCODE: $00001A5D VOL: 0
;PCODE: $00001A5E VOL: 0
;PCODE: $00001A5F VOL: 0
;PCODE: $00001A60 VOL: 0
;PCODE: $00001A61 VOL: 0
;PCODE: $00001A62 VOL: 0
;PCODE: $00001A63 VOL: 0
; 0000 0B4F dc_high = EEPROM_read(35) * 10 + EEPROM_read(36);
;PCODE: $00001A64 VOL: 0
;PCODE: $00001A65 VOL: 0
;PCODE: $00001A66 VOL: 0
;PCODE: $00001A67 VOL: 0
;PCODE: $00001A68 VOL: 0
;PCODE: $00001A69 VOL: 0
;PCODE: $00001A6A VOL: 0
;PCODE: $00001A6B VOL: 0
;PCODE: $00001A6C VOL: 0
;PCODE: $00001A6D VOL: 0
;PCODE: $00001A6E VOL: 0
;PCODE: $00001A6F VOL: 0
;PCODE: $00001A70 VOL: 0
; 0000 0B50 if ((dc_low_1 > 999) | (dc_low_2 > 999) | (dc_high > 999))
;PCODE: $00001A71 VOL: 0
;PCODE: $00001A72 VOL: 0
;PCODE: $00001A73 VOL: 0
;PCODE: $00001A74 VOL: 0
;PCODE: $00001A75 VOL: 0
;PCODE: $00001A76 VOL: 0
;PCODE: $00001A77 VOL: 0
;PCODE: $00001A78 VOL: 0
;PCODE: $00001A79 VOL: 0
;PCODE: $00001A7A VOL: 0
;PCODE: $00001A7B VOL: 0
;PCODE: $00001A7C VOL: 0
;PCODE: $00001A7D VOL: 0
;PCODE: $00001A7E VOL: 0
; 0000 0B51 {
; 0000 0B52 dc_low_1 = 470;
;PCODE: $00001A7F VOL: 0
;PCODE: $00001A80 VOL: 0
; 0000 0B53 dc_low_2 = 480;
;PCODE: $00001A81 VOL: 0
;PCODE: $00001A82 VOL: 0
; 0000 0B54 dc_high = 585;
;PCODE: $00001A83 VOL: 0
;PCODE: $00001A84 VOL: 0
; 0000 0B55 EEPROM_write(31, dc_low_1 / 10);
;PCODE: $00001A85 VOL: 0
;PCODE: $00001A86 VOL: 0
;PCODE: $00001A87 VOL: 0
;PCODE: $00001A88 VOL: 0
;PCODE: $00001A89 VOL: 0
;PCODE: $00001A8A VOL: 0
;PCODE: $00001A8B VOL: 0
; 0000 0B56 EEPROM_write(32, dc_low_1 % 10);
;PCODE: $00001A8C VOL: 0
;PCODE: $00001A8D VOL: 0
;PCODE: $00001A8E VOL: 0
;PCODE: $00001A8F VOL: 0
;PCODE: $00001A90 VOL: 0
;PCODE: $00001A91 VOL: 0
;PCODE: $00001A92 VOL: 0
; 0000 0B57 EEPROM_write(33, dc_low_2 / 10);
;PCODE: $00001A93 VOL: 0
;PCODE: $00001A94 VOL: 0
;PCODE: $00001A95 VOL: 0
;PCODE: $00001A96 VOL: 0
;PCODE: $00001A97 VOL: 0
;PCODE: $00001A98 VOL: 0
;PCODE: $00001A99 VOL: 0
; 0000 0B58 EEPROM_write(34, dc_low_2 % 10);
;PCODE: $00001A9A VOL: 0
;PCODE: $00001A9B VOL: 0
;PCODE: $00001A9C VOL: 0
;PCODE: $00001A9D VOL: 0
;PCODE: $00001A9E VOL: 0
;PCODE: $00001A9F VOL: 0
;PCODE: $00001AA0 VOL: 0
; 0000 0B59 EEPROM_write(35, dc_high / 10);
;PCODE: $00001AA1 VOL: 0
;PCODE: $00001AA2 VOL: 0
;PCODE: $00001AA3 VOL: 0
;PCODE: $00001AA4 VOL: 0
;PCODE: $00001AA5 VOL: 0
;PCODE: $00001AA6 VOL: 0
;PCODE: $00001AA7 VOL: 0
; 0000 0B5A EEPROM_write(36, dc_high % 10);
;PCODE: $00001AA8 VOL: 0
;PCODE: $00001AA9 VOL: 0
;PCODE: $00001AAA VOL: 0
;PCODE: $00001AAB VOL: 0
;PCODE: $00001AAC VOL: 0
;PCODE: $00001AAD VOL: 0
;PCODE: $00001AAE VOL: 0
; 0000 0B5B }
; 0000 0B5C if (KTAC1 == 0)
;PCODE: $00001AAF VOL: 0
;PCODE: $00001AB0 VOL: 0
;PCODE: $00001AB1 VOL: 0
;PCODE: $00001AB2 VOL: 0
; 0000 0B5D bit_ac1 == 0;
;PCODE: $00001AB3 VOL: 0
;PCODE: $00001AB4 VOL: 0
;PCODE: $00001AB5 VOL: 0
;PCODE: $00001AB6 VOL: 0
; 0000 0B5E else
;PCODE: $00001AB7 VOL: 0
;PCODE: $00001AB8 VOL: 0
; 0000 0B5F bit_ac1 == 1;
;PCODE: $00001AB9 VOL: 0
;PCODE: $00001ABA VOL: 0
;PCODE: $00001ABB VOL: 0
;PCODE: $00001ABC VOL: 0
; 0000 0B60 if (KTAC2 == 0)
;PCODE: $00001ABD VOL: 0
;PCODE: $00001ABE VOL: 0
;PCODE: $00001ABF VOL: 0
;PCODE: $00001AC0 VOL: 0
; 0000 0B61 bit_ac2 == 0;
;PCODE: $00001AC1 VOL: 0
;PCODE: $00001AC2 VOL: 0
;PCODE: $00001AC3 VOL: 0
;PCODE: $00001AC4 VOL: 0
; 0000 0B62 else
;PCODE: $00001AC5 VOL: 0
;PCODE: $00001AC6 VOL: 0
; 0000 0B63 bit_ac2 == 1;
;PCODE: $00001AC7 VOL: 0
;PCODE: $00001AC8 VOL: 0
;PCODE: $00001AC9 VOL: 0
;PCODE: $00001ACA VOL: 0
; 0000 0B64 bit_temp = bit_humi = 0;
;PCODE: $00001ACB VOL: 0
;PCODE: $00001ACC VOL: 0
;PCODE: $00001ACD VOL: 0
;PCODE: $00001ACE VOL: 0
;PCODE: $00001ACF VOL: 0
;PCODE: $00001AD0 VOL: 0
;PCODE: $00001AD1 VOL: 0
; 0000 0B65 if (AS == 0)
;PCODE: $00001AD2 VOL: 0
;PCODE: $00001AD3 VOL: 0
;PCODE: $00001AD4 VOL: 0
; 0000 0B66 bit_as = 0;
;PCODE: $00001AD5 VOL: 0
;PCODE: $00001AD6 VOL: 0
;PCODE: $00001AD7 VOL: 0
; 0000 0B67 else
;PCODE: $00001AD8 VOL: 0
;PCODE: $00001AD9 VOL: 0
; 0000 0B68 bit_as = 1;
;PCODE: $00001ADA VOL: 0
;PCODE: $00001ADB VOL: 0
;PCODE: $00001ADC VOL: 0
; 0000 0B69 
; 0000 0B6A while (1)
;PCODE: $00001ADD VOL: 0
;PCODE: $00001ADE VOL: 0
; 0000 0B6B {
; 0000 0B6C ct_hienthichung();
;PCODE: $00001ADF VOL: 0
; 0000 0B6D //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0B6E DC1 = (read_adc(1) * 5 * 10 ^ 1 / 1023);
;PCODE: $00001AE0 VOL: 0
;PCODE: $00001AE1 VOL: 0
;PCODE: $00001AE2 VOL: 0
;PCODE: $00001AE3 VOL: 0
;PCODE: $00001AE4 VOL: 0
;PCODE: $00001AE5 VOL: 0
;PCODE: $00001AE6 VOL: 0
;PCODE: $00001AE7 VOL: 0
;PCODE: $00001AE8 VOL: 0
; 0000 0B6F dc11 = DC1 / 610;
;PCODE: $00001AE9 VOL: 0
;PCODE: $00001AEA VOL: 0
;PCODE: $00001AEB VOL: 0
;PCODE: $00001AEC VOL: 0
; 0000 0B70 dc12 = DC1 % 610 / 100;
;PCODE: $00001AED VOL: 0
;PCODE: $00001AEE VOL: 0
;PCODE: $00001AEF VOL: 0
;PCODE: $00001AF0 VOL: 0
;PCODE: $00001AF1 VOL: 0
;PCODE: $00001AF2 VOL: 0
;PCODE: $00001AF3 VOL: 0
; 0000 0B71 // dc 2
; 0000 0B72 DC2 = (read_adc(0) * 5 * 10 ^ 1 / 1023);
;PCODE: $00001AF4 VOL: 0
;PCODE: $00001AF5 VOL: 0
;PCODE: $00001AF6 VOL: 0
;PCODE: $00001AF7 VOL: 0
;PCODE: $00001AF8 VOL: 0
;PCODE: $00001AF9 VOL: 0
;PCODE: $00001AFA VOL: 0
;PCODE: $00001AFB VOL: 0
;PCODE: $00001AFC VOL: 0
; 0000 0B73 dc21 = DC2 / 615;
;PCODE: $00001AFD VOL: 0
;PCODE: $00001AFE VOL: 0
;PCODE: $00001AFF VOL: 0
;PCODE: $00001B00 VOL: 0
; 0000 0B74 dc22 = DC2 % 615 / 100;
;PCODE: $00001B01 VOL: 0
;PCODE: $00001B02 VOL: 0
;PCODE: $00001B03 VOL: 0
;PCODE: $00001B04 VOL: 0
;PCODE: $00001B05 VOL: 0
;PCODE: $00001B06 VOL: 0
;PCODE: $00001B07 VOL: 0
; 0000 0B75 // // ////////////////////////////////////////////////////////////////////////// ...
; 0000 0B76 doam1 = EEPROM_read(0);
;PCODE: $00001B08 VOL: 0
;PCODE: $00001B09 VOL: 0
;PCODE: $00001B0A VOL: 0
;PCODE: $00001B0B VOL: 0
;PCODE: $00001B0C VOL: 0
; 0000 0B77 doam2 = EEPROM_read(1);
;PCODE: $00001B0D VOL: 0
;PCODE: $00001B0E VOL: 0
;PCODE: $00001B0F VOL: 0
;PCODE: $00001B10 VOL: 0
;PCODE: $00001B11 VOL: 0
; 0000 0B78 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0B79 if ((dht_do_am >= doam1 * 10) & (dht_do_am <= doam2 * 10) & (bit_humi == 1))
;PCODE: $00001B12 VOL: 0
;PCODE: $00001B13 VOL: 0
;PCODE: $00001B14 VOL: 0
;PCODE: $00001B15 VOL: 0
;PCODE: $00001B16 VOL: 0
;PCODE: $00001B17 VOL: 0
;PCODE: $00001B18 VOL: 0
;PCODE: $00001B19 VOL: 0
;PCODE: $00001B1A VOL: 0
;PCODE: $00001B1B VOL: 0
;PCODE: $00001B1C VOL: 0
;PCODE: $00001B1D VOL: 0
;PCODE: $00001B1E VOL: 0
;PCODE: $00001B1F VOL: 0
;PCODE: $00001B20 VOL: 0
;PCODE: $00001B21 VOL: 0
;PCODE: $00001B22 VOL: 0
;PCODE: $00001B23 VOL: 0
;PCODE: $00001B24 VOL: 0
; 0000 0B7A {
; 0000 0B7B bit_humi = 0;
;PCODE: $00001B25 VOL: 0
;PCODE: $00001B26 VOL: 0
;PCODE: $00001B27 VOL: 0
; 0000 0B7C sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
;PCODE: $00001B28 VOL: 0
;PCODE: $00001B29 VOL: 0
;PCODE: $00001B2A VOL: 0
;PCODE: $00001B2B VOL: 0
;PCODE: $00001B2C VOL: 0
;PCODE: $00001B2D VOL: 0
;PCODE: $00001B2E VOL: 0
;PCODE: $00001B2F VOL: 0
;PCODE: $00001B30 VOL: 0
;PCODE: $00001B31 VOL: 0
;PCODE: $00001B32 VOL: 0
;PCODE: $00001B33 VOL: 0
;PCODE: $00001B34 VOL: 0
;PCODE: $00001B35 VOL: 0
;PCODE: $00001B36 VOL: 0
;PCODE: $00001B37 VOL: 0
;PCODE: $00001B38 VOL: 0
;PCODE: $00001B39 VOL: 0
;PCODE: $00001B3A VOL: 0
;PCODE: $00001B3B VOL: 0
;PCODE: $00001B3C VOL: 0
;PCODE: $00001B3D VOL: 0
; 0000 0B7D puts1(enthernet);
;PCODE: $00001B3E VOL: 0
;PCODE: $00001B3F VOL: 0
; 0000 0B7E delay_ms(100);
;PCODE: $00001B40 VOL: 0
;PCODE: $00001B41 VOL: 0
;PCODE: $00001B42 VOL: 0
; 0000 0B7F sprintf(sms, "do am tram %s hien tai la %d,%d da ve nguong binh thuong  ", tram, ...
;PCODE: $00001B43 VOL: 0
;PCODE: $00001B44 VOL: 0
;PCODE: $00001B45 VOL: 0
;PCODE: $00001B46 VOL: 0
;PCODE: $00001B47 VOL: 0
;PCODE: $00001B48 VOL: 0
;PCODE: $00001B49 VOL: 0
;PCODE: $00001B4A VOL: 0
;PCODE: $00001B4B VOL: 0
;PCODE: $00001B4C VOL: 0
;PCODE: $00001B4D VOL: 0
;PCODE: $00001B4E VOL: 0
;PCODE: $00001B4F VOL: 0
;PCODE: $00001B50 VOL: 0
;PCODE: $00001B51 VOL: 0
;PCODE: $00001B52 VOL: 0
;PCODE: $00001B53 VOL: 0
;PCODE: $00001B54 VOL: 0
;PCODE: $00001B55 VOL: 0
;PCODE: $00001B56 VOL: 0
;PCODE: $00001B57 VOL: 0
;PCODE: $00001B58 VOL: 0
; 0000 0B80 send_sms(sdt_sms, sms);
;PCODE: $00001B59 VOL: 0
;PCODE: $00001B5A VOL: 0
;PCODE: $00001B5B VOL: 0
;PCODE: $00001B5C VOL: 0
; 0000 0B81 delay_ms(1000);
;PCODE: $00001B5D VOL: 0
;PCODE: $00001B5E VOL: 0
; 0000 0B82 // sprintf(sms, "do am tram %s hien tai la %d,%d da ve nguong binh thuong  ", tr ...
; 0000 0B83 // send_sms(sdt_sms, sms);
; 0000 0B84 // delay_ms(1000);
; 0000 0B85 lcd_clear();
;PCODE: $00001B5F VOL: 0
; 0000 0B86 }
; 0000 0B87 if ((dht_do_am < doam1 * 10) & (bit_humi == 0))
;PCODE: $00001B60 VOL: 0
;PCODE: $00001B61 VOL: 0
;PCODE: $00001B62 VOL: 0
;PCODE: $00001B63 VOL: 0
;PCODE: $00001B64 VOL: 0
;PCODE: $00001B65 VOL: 0
;PCODE: $00001B66 VOL: 0
;PCODE: $00001B67 VOL: 0
;PCODE: $00001B68 VOL: 0
;PCODE: $00001B69 VOL: 0
;PCODE: $00001B6A VOL: 0
;PCODE: $00001B6B VOL: 0
;PCODE: $00001B6C VOL: 0
; 0000 0B88 {
; 0000 0B89 bit_humi = 1;
;PCODE: $00001B6D VOL: 0
;PCODE: $00001B6E VOL: 0
;PCODE: $00001B6F VOL: 0
; 0000 0B8A bit_coi = 1;
;PCODE: $00001B70 VOL: 0
;PCODE: $00001B71 VOL: 0
;PCODE: $00001B72 VOL: 0
; 0000 0B8B sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
;PCODE: $00001B73 VOL: 0
;PCODE: $00001B74 VOL: 0
;PCODE: $00001B75 VOL: 0
;PCODE: $00001B76 VOL: 0
;PCODE: $00001B77 VOL: 0
;PCODE: $00001B78 VOL: 0
;PCODE: $00001B79 VOL: 0
;PCODE: $00001B7A VOL: 0
;PCODE: $00001B7B VOL: 0
;PCODE: $00001B7C VOL: 0
;PCODE: $00001B7D VOL: 0
;PCODE: $00001B7E VOL: 0
;PCODE: $00001B7F VOL: 0
;PCODE: $00001B80 VOL: 0
;PCODE: $00001B81 VOL: 0
;PCODE: $00001B82 VOL: 0
;PCODE: $00001B83 VOL: 0
;PCODE: $00001B84 VOL: 0
;PCODE: $00001B85 VOL: 0
;PCODE: $00001B86 VOL: 0
;PCODE: $00001B87 VOL: 0
;PCODE: $00001B88 VOL: 0
; 0000 0B8C puts1(enthernet);
;PCODE: $00001B89 VOL: 0
;PCODE: $00001B8A VOL: 0
; 0000 0B8D delay_ms(100);
;PCODE: $00001B8B VOL: 0
;PCODE: $00001B8C VOL: 0
;PCODE: $00001B8D VOL: 0
; 0000 0B8E sprintf(sms, "do am tram %s hien tai la %d,%d o duoi nguong  ", tram, dht_do_am  ...
;PCODE: $00001B8E VOL: 0
;PCODE: $00001B8F VOL: 0
;PCODE: $00001B90 VOL: 0
;PCODE: $00001B91 VOL: 0
;PCODE: $00001B92 VOL: 0
;PCODE: $00001B93 VOL: 0
;PCODE: $00001B94 VOL: 0
;PCODE: $00001B95 VOL: 0
;PCODE: $00001B96 VOL: 0
;PCODE: $00001B97 VOL: 0
;PCODE: $00001B98 VOL: 0
;PCODE: $00001B99 VOL: 0
;PCODE: $00001B9A VOL: 0
;PCODE: $00001B9B VOL: 0
;PCODE: $00001B9C VOL: 0
;PCODE: $00001B9D VOL: 0
;PCODE: $00001B9E VOL: 0
;PCODE: $00001B9F VOL: 0
;PCODE: $00001BA0 VOL: 0
;PCODE: $00001BA1 VOL: 0
;PCODE: $00001BA2 VOL: 0
;PCODE: $00001BA3 VOL: 0
; 0000 0B8F send_sms(sdt_sms, sms);
;PCODE: $00001BA4 VOL: 0
;PCODE: $00001BA5 VOL: 0
;PCODE: $00001BA6 VOL: 0
;PCODE: $00001BA7 VOL: 0
; 0000 0B90 delay_ms(1000);
;PCODE: $00001BA8 VOL: 0
;PCODE: $00001BA9 VOL: 0
; 0000 0B91 // sprintf(sms, "do am tram %s hien tai la %d,%d o duoi nguong  ", tram, dht_do_ ...
; 0000 0B92 // send_sms(sdt_sms, sms);
; 0000 0B93 // delay_ms(1000);
; 0000 0B94 }
; 0000 0B95 if ((dht_do_am > doam2 * 10) & (bit_humi == 0))
;PCODE: $00001BAA VOL: 0
;PCODE: $00001BAB VOL: 0
;PCODE: $00001BAC VOL: 0
;PCODE: $00001BAD VOL: 0
;PCODE: $00001BAE VOL: 0
;PCODE: $00001BAF VOL: 0
;PCODE: $00001BB0 VOL: 0
;PCODE: $00001BB1 VOL: 0
;PCODE: $00001BB2 VOL: 0
;PCODE: $00001BB3 VOL: 0
;PCODE: $00001BB4 VOL: 0
;PCODE: $00001BB5 VOL: 0
;PCODE: $00001BB6 VOL: 0
; 0000 0B96 {
; 0000 0B97 bit_coi = 1;
;PCODE: $00001BB7 VOL: 0
;PCODE: $00001BB8 VOL: 0
;PCODE: $00001BB9 VOL: 0
; 0000 0B98 bit_humi = 1;
;PCODE: $00001BBA VOL: 0
;PCODE: $00001BBB VOL: 0
;PCODE: $00001BBC VOL: 0
; 0000 0B99 sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
;PCODE: $00001BBD VOL: 0
;PCODE: $00001BBE VOL: 0
;PCODE: $00001BBF VOL: 0
;PCODE: $00001BC0 VOL: 0
;PCODE: $00001BC1 VOL: 0
;PCODE: $00001BC2 VOL: 0
;PCODE: $00001BC3 VOL: 0
;PCODE: $00001BC4 VOL: 0
;PCODE: $00001BC5 VOL: 0
;PCODE: $00001BC6 VOL: 0
;PCODE: $00001BC7 VOL: 0
;PCODE: $00001BC8 VOL: 0
;PCODE: $00001BC9 VOL: 0
;PCODE: $00001BCA VOL: 0
;PCODE: $00001BCB VOL: 0
;PCODE: $00001BCC VOL: 0
;PCODE: $00001BCD VOL: 0
;PCODE: $00001BCE VOL: 0
;PCODE: $00001BCF VOL: 0
;PCODE: $00001BD0 VOL: 0
;PCODE: $00001BD1 VOL: 0
;PCODE: $00001BD2 VOL: 0
; 0000 0B9A puts1(enthernet);
;PCODE: $00001BD3 VOL: 0
;PCODE: $00001BD4 VOL: 0
; 0000 0B9B delay_ms(100);
;PCODE: $00001BD5 VOL: 0
;PCODE: $00001BD6 VOL: 0
;PCODE: $00001BD7 VOL: 0
; 0000 0B9C sprintf(sms, "do am tram %s hien tai la %d,%d o tren nguong  ", tram, dht_do_am  ...
;PCODE: $00001BD8 VOL: 0
;PCODE: $00001BD9 VOL: 0
;PCODE: $00001BDA VOL: 0
;PCODE: $00001BDB VOL: 0
;PCODE: $00001BDC VOL: 0
;PCODE: $00001BDD VOL: 0
;PCODE: $00001BDE VOL: 0
;PCODE: $00001BDF VOL: 0
;PCODE: $00001BE0 VOL: 0
;PCODE: $00001BE1 VOL: 0
;PCODE: $00001BE2 VOL: 0
;PCODE: $00001BE3 VOL: 0
;PCODE: $00001BE4 VOL: 0
;PCODE: $00001BE5 VOL: 0
;PCODE: $00001BE6 VOL: 0
;PCODE: $00001BE7 VOL: 0
;PCODE: $00001BE8 VOL: 0
;PCODE: $00001BE9 VOL: 0
;PCODE: $00001BEA VOL: 0
;PCODE: $00001BEB VOL: 0
;PCODE: $00001BEC VOL: 0
;PCODE: $00001BED VOL: 0
; 0000 0B9D send_sms(sdt_sms, sms);
;PCODE: $00001BEE VOL: 0
;PCODE: $00001BEF VOL: 0
;PCODE: $00001BF0 VOL: 0
;PCODE: $00001BF1 VOL: 0
; 0000 0B9E delay_ms(1000);
;PCODE: $00001BF2 VOL: 0
;PCODE: $00001BF3 VOL: 0
; 0000 0B9F // sprintf(sms, "do am tram %s hien tai la %d,%d o tren nguong  ", tram, dht_do_ ...
; 0000 0BA0 // send_sms(sdt_sms, sms);
; 0000 0BA1 // delay_ms(1000);
; 0000 0BA2 }
; 0000 0BA3 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0BA4 nhietdo1 = EEPROM_read(2);
;PCODE: $00001BF4 VOL: 0
;PCODE: $00001BF5 VOL: 0
;PCODE: $00001BF6 VOL: 0
;PCODE: $00001BF7 VOL: 0
;PCODE: $00001BF8 VOL: 0
;PCODE: $00001BF9 VOL: 0
; 0000 0BA5 nhietdo2 = EEPROM_read(3);
;PCODE: $00001BFA VOL: 0
;PCODE: $00001BFB VOL: 0
;PCODE: $00001BFC VOL: 0
;PCODE: $00001BFD VOL: 0
;PCODE: $00001BFE VOL: 0
; 0000 0BA6 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0BA7 if ((dht_nhiet_do >= nhietdo1 * 10) & (dht_nhiet_do <= nhietdo2 * 10) & (bit_tem ...
;PCODE: $00001BFF VOL: 0
;PCODE: $00001C00 VOL: 0
;PCODE: $00001C01 VOL: 0
;PCODE: $00001C02 VOL: 0
;PCODE: $00001C03 VOL: 0
;PCODE: $00001C04 VOL: 0
;PCODE: $00001C05 VOL: 0
;PCODE: $00001C06 VOL: 0
;PCODE: $00001C07 VOL: 0
;PCODE: $00001C08 VOL: 0
;PCODE: $00001C09 VOL: 0
;PCODE: $00001C0A VOL: 0
;PCODE: $00001C0B VOL: 0
;PCODE: $00001C0C VOL: 0
;PCODE: $00001C0D VOL: 0
;PCODE: $00001C0E VOL: 0
;PCODE: $00001C0F VOL: 0
;PCODE: $00001C10 VOL: 0
;PCODE: $00001C11 VOL: 0
; 0000 0BA8 {
; 0000 0BA9 bit_temp = 0;
;PCODE: $00001C12 VOL: 0
;PCODE: $00001C13 VOL: 0
;PCODE: $00001C14 VOL: 0
; 0000 0BAA sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
;PCODE: $00001C15 VOL: 0
;PCODE: $00001C16 VOL: 0
;PCODE: $00001C17 VOL: 0
;PCODE: $00001C18 VOL: 0
;PCODE: $00001C19 VOL: 0
;PCODE: $00001C1A VOL: 0
;PCODE: $00001C1B VOL: 0
;PCODE: $00001C1C VOL: 0
;PCODE: $00001C1D VOL: 0
;PCODE: $00001C1E VOL: 0
;PCODE: $00001C1F VOL: 0
;PCODE: $00001C20 VOL: 0
;PCODE: $00001C21 VOL: 0
;PCODE: $00001C22 VOL: 0
;PCODE: $00001C23 VOL: 0
;PCODE: $00001C24 VOL: 0
;PCODE: $00001C25 VOL: 0
;PCODE: $00001C26 VOL: 0
;PCODE: $00001C27 VOL: 0
;PCODE: $00001C28 VOL: 0
;PCODE: $00001C29 VOL: 0
;PCODE: $00001C2A VOL: 0
; 0000 0BAB puts1(enthernet);
;PCODE: $00001C2B VOL: 0
;PCODE: $00001C2C VOL: 0
; 0000 0BAC delay_ms(100);
;PCODE: $00001C2D VOL: 0
;PCODE: $00001C2E VOL: 0
;PCODE: $00001C2F VOL: 0
; 0000 0BAD sprintf(sms, "nhiet do tram %s hien tai la %d,%d da tro ve nguong binh thuong  " ...
;PCODE: $00001C30 VOL: 0
;PCODE: $00001C31 VOL: 0
;PCODE: $00001C32 VOL: 0
;PCODE: $00001C33 VOL: 0
;PCODE: $00001C34 VOL: 0
;PCODE: $00001C35 VOL: 0
;PCODE: $00001C36 VOL: 0
;PCODE: $00001C37 VOL: 0
;PCODE: $00001C38 VOL: 0
;PCODE: $00001C39 VOL: 0
;PCODE: $00001C3A VOL: 0
;PCODE: $00001C3B VOL: 0
;PCODE: $00001C3C VOL: 0
;PCODE: $00001C3D VOL: 0
;PCODE: $00001C3E VOL: 0
;PCODE: $00001C3F VOL: 0
;PCODE: $00001C40 VOL: 0
;PCODE: $00001C41 VOL: 0
;PCODE: $00001C42 VOL: 0
;PCODE: $00001C43 VOL: 0
;PCODE: $00001C44 VOL: 0
;PCODE: $00001C45 VOL: 0
; 0000 0BAE send_sms(sdt_sms, sms);
;PCODE: $00001C46 VOL: 0
;PCODE: $00001C47 VOL: 0
;PCODE: $00001C48 VOL: 0
;PCODE: $00001C49 VOL: 0
; 0000 0BAF delay_ms(1000);
;PCODE: $00001C4A VOL: 0
;PCODE: $00001C4B VOL: 0
; 0000 0BB0 // sprintf(sms, "nhiet do tram %s hien tai la %d,%d da tro ve nguong binh thuong ...
; 0000 0BB1 // send_sms(sdt_sms, sms);
; 0000 0BB2 // delay_ms(1000);
; 0000 0BB3 }
; 0000 0BB4 if ((dht_nhiet_do < nhietdo1 * 10) & (bit_temp == 0))
;PCODE: $00001C4C VOL: 0
;PCODE: $00001C4D VOL: 0
;PCODE: $00001C4E VOL: 0
;PCODE: $00001C4F VOL: 0
;PCODE: $00001C50 VOL: 0
;PCODE: $00001C51 VOL: 0
;PCODE: $00001C52 VOL: 0
;PCODE: $00001C53 VOL: 0
;PCODE: $00001C54 VOL: 0
;PCODE: $00001C55 VOL: 0
;PCODE: $00001C56 VOL: 0
;PCODE: $00001C57 VOL: 0
;PCODE: $00001C58 VOL: 0
; 0000 0BB5 {
; 0000 0BB6 bit_temp = 1;
;PCODE: $00001C59 VOL: 0
;PCODE: $00001C5A VOL: 0
;PCODE: $00001C5B VOL: 0
; 0000 0BB7 bit_coi = 1;
;PCODE: $00001C5C VOL: 0
;PCODE: $00001C5D VOL: 0
;PCODE: $00001C5E VOL: 0
; 0000 0BB8 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
;PCODE: $00001C5F VOL: 0
;PCODE: $00001C60 VOL: 0
;PCODE: $00001C61 VOL: 0
;PCODE: $00001C62 VOL: 0
;PCODE: $00001C63 VOL: 0
;PCODE: $00001C64 VOL: 0
;PCODE: $00001C65 VOL: 0
;PCODE: $00001C66 VOL: 0
;PCODE: $00001C67 VOL: 0
;PCODE: $00001C68 VOL: 0
;PCODE: $00001C69 VOL: 0
;PCODE: $00001C6A VOL: 0
;PCODE: $00001C6B VOL: 0
;PCODE: $00001C6C VOL: 0
;PCODE: $00001C6D VOL: 0
;PCODE: $00001C6E VOL: 0
;PCODE: $00001C6F VOL: 0
;PCODE: $00001C70 VOL: 0
;PCODE: $00001C71 VOL: 0
;PCODE: $00001C72 VOL: 0
;PCODE: $00001C73 VOL: 0
;PCODE: $00001C74 VOL: 0
; 0000 0BB9 puts1(enthernet);
;PCODE: $00001C75 VOL: 0
;PCODE: $00001C76 VOL: 0
; 0000 0BBA delay_ms(100);
;PCODE: $00001C77 VOL: 0
;PCODE: $00001C78 VOL: 0
;PCODE: $00001C79 VOL: 0
; 0000 0BBB sprintf(sms, "nhiet do tram %s hien tai la %d,%d o duoi  nguong  ", tram, dht_nh ...
;PCODE: $00001C7A VOL: 0
;PCODE: $00001C7B VOL: 0
;PCODE: $00001C7C VOL: 0
;PCODE: $00001C7D VOL: 0
;PCODE: $00001C7E VOL: 0
;PCODE: $00001C7F VOL: 0
;PCODE: $00001C80 VOL: 0
;PCODE: $00001C81 VOL: 0
;PCODE: $00001C82 VOL: 0
;PCODE: $00001C83 VOL: 0
;PCODE: $00001C84 VOL: 0
;PCODE: $00001C85 VOL: 0
;PCODE: $00001C86 VOL: 0
;PCODE: $00001C87 VOL: 0
;PCODE: $00001C88 VOL: 0
;PCODE: $00001C89 VOL: 0
;PCODE: $00001C8A VOL: 0
;PCODE: $00001C8B VOL: 0
;PCODE: $00001C8C VOL: 0
;PCODE: $00001C8D VOL: 0
;PCODE: $00001C8E VOL: 0
;PCODE: $00001C8F VOL: 0
; 0000 0BBC send_sms(sdt_sms, sms);
;PCODE: $00001C90 VOL: 0
;PCODE: $00001C91 VOL: 0
;PCODE: $00001C92 VOL: 0
;PCODE: $00001C93 VOL: 0
; 0000 0BBD delay_ms(1000);
;PCODE: $00001C94 VOL: 0
;PCODE: $00001C95 VOL: 0
; 0000 0BBE // sprintf(sms, "nhiet do tram %s hien tai la %d,%d o duoi  nguong  ", tram, dht ...
; 0000 0BBF // send_sms(sdt_sms, sms);
; 0000 0BC0 // delay_ms(1000);
; 0000 0BC1 }
; 0000 0BC2 if ((dht_nhiet_do > nhietdo2 * 10) & (bit_temp == 0))
;PCODE: $00001C96 VOL: 0
;PCODE: $00001C97 VOL: 0
;PCODE: $00001C98 VOL: 0
;PCODE: $00001C99 VOL: 0
;PCODE: $00001C9A VOL: 0
;PCODE: $00001C9B VOL: 0
;PCODE: $00001C9C VOL: 0
;PCODE: $00001C9D VOL: 0
;PCODE: $00001C9E VOL: 0
;PCODE: $00001C9F VOL: 0
;PCODE: $00001CA0 VOL: 0
;PCODE: $00001CA1 VOL: 0
;PCODE: $00001CA2 VOL: 0
; 0000 0BC3 {
; 0000 0BC4 bit_coi = 1;
;PCODE: $00001CA3 VOL: 0
;PCODE: $00001CA4 VOL: 0
;PCODE: $00001CA5 VOL: 0
; 0000 0BC5 bit_temp = 1;
;PCODE: $00001CA6 VOL: 0
;PCODE: $00001CA7 VOL: 0
;PCODE: $00001CA8 VOL: 0
; 0000 0BC6 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
;PCODE: $00001CA9 VOL: 0
;PCODE: $00001CAA VOL: 0
;PCODE: $00001CAB VOL: 0
;PCODE: $00001CAC VOL: 0
;PCODE: $00001CAD VOL: 0
;PCODE: $00001CAE VOL: 0
;PCODE: $00001CAF VOL: 0
;PCODE: $00001CB0 VOL: 0
;PCODE: $00001CB1 VOL: 0
;PCODE: $00001CB2 VOL: 0
;PCODE: $00001CB3 VOL: 0
;PCODE: $00001CB4 VOL: 0
;PCODE: $00001CB5 VOL: 0
;PCODE: $00001CB6 VOL: 0
;PCODE: $00001CB7 VOL: 0
;PCODE: $00001CB8 VOL: 0
;PCODE: $00001CB9 VOL: 0
;PCODE: $00001CBA VOL: 0
;PCODE: $00001CBB VOL: 0
;PCODE: $00001CBC VOL: 0
;PCODE: $00001CBD VOL: 0
;PCODE: $00001CBE VOL: 0
; 0000 0BC7 puts1(enthernet);
;PCODE: $00001CBF VOL: 0
;PCODE: $00001CC0 VOL: 0
; 0000 0BC8 delay_ms(100);
;PCODE: $00001CC1 VOL: 0
;PCODE: $00001CC2 VOL: 0
;PCODE: $00001CC3 VOL: 0
; 0000 0BC9 sprintf(sms, "nhiet do tram %s hien tai la %d,%d o tren  nguong  ", tram, dht_nh ...
;PCODE: $00001CC4 VOL: 0
;PCODE: $00001CC5 VOL: 0
;PCODE: $00001CC6 VOL: 0
;PCODE: $00001CC7 VOL: 0
;PCODE: $00001CC8 VOL: 0
;PCODE: $00001CC9 VOL: 0
;PCODE: $00001CCA VOL: 0
;PCODE: $00001CCB VOL: 0
;PCODE: $00001CCC VOL: 0
;PCODE: $00001CCD VOL: 0
;PCODE: $00001CCE VOL: 0
;PCODE: $00001CCF VOL: 0
;PCODE: $00001CD0 VOL: 0
;PCODE: $00001CD1 VOL: 0
;PCODE: $00001CD2 VOL: 0
;PCODE: $00001CD3 VOL: 0
;PCODE: $00001CD4 VOL: 0
;PCODE: $00001CD5 VOL: 0
;PCODE: $00001CD6 VOL: 0
;PCODE: $00001CD7 VOL: 0
;PCODE: $00001CD8 VOL: 0
;PCODE: $00001CD9 VOL: 0
; 0000 0BCA send_sms(sdt_sms, sms);
;PCODE: $00001CDA VOL: 0
;PCODE: $00001CDB VOL: 0
;PCODE: $00001CDC VOL: 0
;PCODE: $00001CDD VOL: 0
; 0000 0BCB delay_ms(1000);
;PCODE: $00001CDE VOL: 0
;PCODE: $00001CDF VOL: 0
; 0000 0BCC // sprintf(sms, "nhiet do tram %s hien tai la %d,%d o tren  nguong  ", tram, dht ...
; 0000 0BCD // send_sms(sdt_sms, sms);
; 0000 0BCE // delay_ms(1000);
; 0000 0BCF }
; 0000 0BD0 ////////////////////////////////
; 0000 0BD1 if ((AS == 0) & (bit_as == 0))
;PCODE: $00001CE0 VOL: 0
;PCODE: $00001CE1 VOL: 0
;PCODE: $00001CE2 VOL: 0
;PCODE: $00001CE3 VOL: 0
;PCODE: $00001CE4 VOL: 0
;PCODE: $00001CE5 VOL: 0
;PCODE: $00001CE6 VOL: 0
;PCODE: $00001CE7 VOL: 0
;PCODE: $00001CE8 VOL: 0
;PCODE: $00001CE9 VOL: 0
;PCODE: $00001CEA VOL: 0
;PCODE: $00001CEB VOL: 0
; 0000 0BD2 {
; 0000 0BD3 bit_as = 1;
;PCODE: $00001CEC VOL: 0
;PCODE: $00001CED VOL: 0
;PCODE: $00001CEE VOL: 0
; 0000 0BD4 sprintf(enthernet, "%s,light,2", IP);
;PCODE: $00001CEF VOL: 0
;PCODE: $00001CF0 VOL: 0
;PCODE: $00001CF1 VOL: 0
;PCODE: $00001CF2 VOL: 0
;PCODE: $00001CF3 VOL: 0
;PCODE: $00001CF4 VOL: 0
;PCODE: $00001CF5 VOL: 0
;PCODE: $00001CF6 VOL: 0
;PCODE: $00001CF7 VOL: 0
;PCODE: $00001CF8 VOL: 0
;PCODE: $00001CF9 VOL: 0
;PCODE: $00001CFA VOL: 0
; 0000 0BD5 puts1(enthernet);
;PCODE: $00001CFB VOL: 0
;PCODE: $00001CFC VOL: 0
; 0000 0BD6 delay_ms(100);
;PCODE: $00001CFD VOL: 0
;PCODE: $00001CFE VOL: 0
;PCODE: $00001CFF VOL: 0
; 0000 0BD7 lcd_gotoxy(0, 0);
;PCODE: $00001D00 VOL: 0
;PCODE: $00001D01 VOL: 0
;PCODE: $00001D02 VOL: 0
;PCODE: $00001D03 VOL: 0
; 0000 0BD8 lcd_clear();
;PCODE: $00001D04 VOL: 0
; 0000 0BD9 sprintf(lcd, "mat anh sang ");
;PCODE: $00001D05 VOL: 0
;PCODE: $00001D06 VOL: 0
;PCODE: $00001D07 VOL: 0
;PCODE: $00001D08 VOL: 0
;PCODE: $00001D09 VOL: 0
;PCODE: $00001D0A VOL: 0
;PCODE: $00001D0B VOL: 0
;PCODE: $00001D0C VOL: 0
;PCODE: $00001D0D VOL: 0
; 0000 0BDA lcd_puts(lcd);
;PCODE: $00001D0E VOL: 0
;PCODE: $00001D0F VOL: 0
; 0000 0BDB delay_ms(1000);
;PCODE: $00001D10 VOL: 0
;PCODE: $00001D11 VOL: 0
; 0000 0BDC lcd_clear();
;PCODE: $00001D12 VOL: 0
; 0000 0BDD }
; 0000 0BDE if ((AS == 1) & (bit_as == 1))
;PCODE: $00001D13 VOL: 0
;PCODE: $00001D14 VOL: 0
;PCODE: $00001D15 VOL: 0
;PCODE: $00001D16 VOL: 0
;PCODE: $00001D17 VOL: 0
;PCODE: $00001D18 VOL: 0
;PCODE: $00001D19 VOL: 0
;PCODE: $00001D1A VOL: 0
;PCODE: $00001D1B VOL: 0
;PCODE: $00001D1C VOL: 0
;PCODE: $00001D1D VOL: 0
;PCODE: $00001D1E VOL: 0
; 0000 0BDF {
; 0000 0BE0 bit_as = 0;
;PCODE: $00001D1F VOL: 0
;PCODE: $00001D20 VOL: 0
;PCODE: $00001D21 VOL: 0
; 0000 0BE1 sprintf(enthernet, "%s,light,1", IP);
;PCODE: $00001D22 VOL: 0
;PCODE: $00001D23 VOL: 0
;PCODE: $00001D24 VOL: 0
;PCODE: $00001D25 VOL: 0
;PCODE: $00001D26 VOL: 0
;PCODE: $00001D27 VOL: 0
;PCODE: $00001D28 VOL: 0
;PCODE: $00001D29 VOL: 0
;PCODE: $00001D2A VOL: 0
;PCODE: $00001D2B VOL: 0
;PCODE: $00001D2C VOL: 0
;PCODE: $00001D2D VOL: 0
; 0000 0BE2 puts1(enthernet);
;PCODE: $00001D2E VOL: 0
;PCODE: $00001D2F VOL: 0
; 0000 0BE3 delay_ms(100);
;PCODE: $00001D30 VOL: 0
;PCODE: $00001D31 VOL: 0
;PCODE: $00001D32 VOL: 0
; 0000 0BE4 lcd_gotoxy(0, 0);
;PCODE: $00001D33 VOL: 0
;PCODE: $00001D34 VOL: 0
;PCODE: $00001D35 VOL: 0
;PCODE: $00001D36 VOL: 0
; 0000 0BE5 lcd_clear();
;PCODE: $00001D37 VOL: 0
; 0000 0BE6 sprintf(lcd, "co anh sang ");
;PCODE: $00001D38 VOL: 0
;PCODE: $00001D39 VOL: 0
;PCODE: $00001D3A VOL: 0
;PCODE: $00001D3B VOL: 0
;PCODE: $00001D3C VOL: 0
;PCODE: $00001D3D VOL: 0
;PCODE: $00001D3E VOL: 0
;PCODE: $00001D3F VOL: 0
;PCODE: $00001D40 VOL: 0
; 0000 0BE7 lcd_puts(lcd);
;PCODE: $00001D41 VOL: 0
;PCODE: $00001D42 VOL: 0
; 0000 0BE8 delay_ms(500);
;PCODE: $00001D43 VOL: 0
;PCODE: $00001D44 VOL: 0
; 0000 0BE9 lcd_clear();
;PCODE: $00001D45 VOL: 0
; 0000 0BEA }
; 0000 0BEB //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0BEC if ((KTAC1 == 0) & (bit_ac1 == 0))
;PCODE: $00001D46 VOL: 0
;PCODE: $00001D47 VOL: 0
;PCODE: $00001D48 VOL: 0
;PCODE: $00001D49 VOL: 0
;PCODE: $00001D4A VOL: 0
;PCODE: $00001D4B VOL: 0
;PCODE: $00001D4C VOL: 0
;PCODE: $00001D4D VOL: 0
;PCODE: $00001D4E VOL: 0
;PCODE: $00001D4F VOL: 0
;PCODE: $00001D50 VOL: 0
;PCODE: $00001D51 VOL: 0
; 0000 0BED {
; 0000 0BEE bit_ac1 = 1;
;PCODE: $00001D52 VOL: 0
;PCODE: $00001D53 VOL: 0
;PCODE: $00001D54 VOL: 0
; 0000 0BEF bit_coi = 1;
;PCODE: $00001D55 VOL: 0
;PCODE: $00001D56 VOL: 0
;PCODE: $00001D57 VOL: 0
; 0000 0BF0 sprintf(enthernet, "%s,voltage_ac,1", IP);
;PCODE: $00001D58 VOL: 0
;PCODE: $00001D59 VOL: 0
;PCODE: $00001D5A VOL: 0
;PCODE: $00001D5B VOL: 0
;PCODE: $00001D5C VOL: 0
;PCODE: $00001D5D VOL: 0
;PCODE: $00001D5E VOL: 0
;PCODE: $00001D5F VOL: 0
;PCODE: $00001D60 VOL: 0
;PCODE: $00001D61 VOL: 0
;PCODE: $00001D62 VOL: 0
;PCODE: $00001D63 VOL: 0
; 0000 0BF1 puts1(enthernet);
;PCODE: $00001D64 VOL: 0
;PCODE: $00001D65 VOL: 0
; 0000 0BF2 delay_ms(100);
;PCODE: $00001D66 VOL: 0
;PCODE: $00001D67 VOL: 0
;PCODE: $00001D68 VOL: 0
; 0000 0BF3 sprintf(sms, "canh bao mat dien ap AC1 tai tram %s", tram);
;PCODE: $00001D69 VOL: 0
;PCODE: $00001D6A VOL: 0
;PCODE: $00001D6B VOL: 0
;PCODE: $00001D6C VOL: 0
;PCODE: $00001D6D VOL: 0
;PCODE: $00001D6E VOL: 0
;PCODE: $00001D6F VOL: 0
;PCODE: $00001D70 VOL: 0
;PCODE: $00001D71 VOL: 0
;PCODE: $00001D72 VOL: 0
;PCODE: $00001D73 VOL: 0
;PCODE: $00001D74 VOL: 0
; 0000 0BF4 send_sms(sdt_sms, sms);
;PCODE: $00001D75 VOL: 0
;PCODE: $00001D76 VOL: 0
;PCODE: $00001D77 VOL: 0
;PCODE: $00001D78 VOL: 0
; 0000 0BF5 delay_ms(1000);
;PCODE: $00001D79 VOL: 0
;PCODE: $00001D7A VOL: 0
; 0000 0BF6 // sprintf(sms, "canh bao mat dien ap AC1 tai tram %s", tram);
; 0000 0BF7 // send_sms(sdt_sms, sms);
; 0000 0BF8 // delay_ms(1000);
; 0000 0BF9 }
; 0000 0BFA if ((KTAC1 == 1) & (bit_ac1 == 1))
;PCODE: $00001D7B VOL: 0
;PCODE: $00001D7C VOL: 0
;PCODE: $00001D7D VOL: 0
;PCODE: $00001D7E VOL: 0
;PCODE: $00001D7F VOL: 0
;PCODE: $00001D80 VOL: 0
;PCODE: $00001D81 VOL: 0
;PCODE: $00001D82 VOL: 0
;PCODE: $00001D83 VOL: 0
;PCODE: $00001D84 VOL: 0
;PCODE: $00001D85 VOL: 0
;PCODE: $00001D86 VOL: 0
; 0000 0BFB {
; 0000 0BFC bit_ac1 = 0;
;PCODE: $00001D87 VOL: 0
;PCODE: $00001D88 VOL: 0
;PCODE: $00001D89 VOL: 0
; 0000 0BFD sprintf(enthernet, "%s,voltage_ac,220", IP);
;PCODE: $00001D8A VOL: 0
;PCODE: $00001D8B VOL: 0
;PCODE: $00001D8C VOL: 0
;PCODE: $00001D8D VOL: 0
;PCODE: $00001D8E VOL: 0
;PCODE: $00001D8F VOL: 0
;PCODE: $00001D90 VOL: 0
;PCODE: $00001D91 VOL: 0
;PCODE: $00001D92 VOL: 0
;PCODE: $00001D93 VOL: 0
;PCODE: $00001D94 VOL: 0
;PCODE: $00001D95 VOL: 0
; 0000 0BFE puts1(enthernet);
;PCODE: $00001D96 VOL: 0
;PCODE: $00001D97 VOL: 0
; 0000 0BFF delay_ms(100);
;PCODE: $00001D98 VOL: 0
;PCODE: $00001D99 VOL: 0
;PCODE: $00001D9A VOL: 0
; 0000 0C00 sprintf(sms, "da co dien ap AC1 tai tram %s", tram);
;PCODE: $00001D9B VOL: 0
;PCODE: $00001D9C VOL: 0
;PCODE: $00001D9D VOL: 0
;PCODE: $00001D9E VOL: 0
;PCODE: $00001D9F VOL: 0
;PCODE: $00001DA0 VOL: 0
;PCODE: $00001DA1 VOL: 0
;PCODE: $00001DA2 VOL: 0
;PCODE: $00001DA3 VOL: 0
;PCODE: $00001DA4 VOL: 0
;PCODE: $00001DA5 VOL: 0
;PCODE: $00001DA6 VOL: 0
; 0000 0C01 send_sms(sdt_sms, sms);
;PCODE: $00001DA7 VOL: 0
;PCODE: $00001DA8 VOL: 0
;PCODE: $00001DA9 VOL: 0
;PCODE: $00001DAA VOL: 0
; 0000 0C02 delay_ms(1000);
;PCODE: $00001DAB VOL: 0
;PCODE: $00001DAC VOL: 0
; 0000 0C03 // sprintf(sms, "da co dien ap AC1 tai tram %s", tram);
; 0000 0C04 // send_sms(sdt_sms, sms);
; 0000 0C05 // delay_ms(1000);
; 0000 0C06 }
; 0000 0C07 ////////////////////////////////////////////////////////////////
; 0000 0C08 if ((KTAC2 == 0) & (bit_ac2 == 0))
;PCODE: $00001DAD VOL: 0
;PCODE: $00001DAE VOL: 0
;PCODE: $00001DAF VOL: 0
;PCODE: $00001DB0 VOL: 0
;PCODE: $00001DB1 VOL: 0
;PCODE: $00001DB2 VOL: 0
;PCODE: $00001DB3 VOL: 0
;PCODE: $00001DB4 VOL: 0
;PCODE: $00001DB5 VOL: 0
;PCODE: $00001DB6 VOL: 0
;PCODE: $00001DB7 VOL: 0
;PCODE: $00001DB8 VOL: 0
; 0000 0C09 {
; 0000 0C0A bit_ac2 = 1;
;PCODE: $00001DB9 VOL: 0
;PCODE: $00001DBA VOL: 0
;PCODE: $00001DBB VOL: 0
; 0000 0C0B bit_coi = 1;
;PCODE: $00001DBC VOL: 0
;PCODE: $00001DBD VOL: 0
;PCODE: $00001DBE VOL: 0
; 0000 0C0C sprintf(enthernet, "%s,voltage_ac2,1", IP);
;PCODE: $00001DBF VOL: 0
;PCODE: $00001DC0 VOL: 0
;PCODE: $00001DC1 VOL: 0
;PCODE: $00001DC2 VOL: 0
;PCODE: $00001DC3 VOL: 0
;PCODE: $00001DC4 VOL: 0
;PCODE: $00001DC5 VOL: 0
;PCODE: $00001DC6 VOL: 0
;PCODE: $00001DC7 VOL: 0
;PCODE: $00001DC8 VOL: 0
;PCODE: $00001DC9 VOL: 0
;PCODE: $00001DCA VOL: 0
; 0000 0C0D puts1(enthernet);
;PCODE: $00001DCB VOL: 0
;PCODE: $00001DCC VOL: 0
; 0000 0C0E delay_ms(100);
;PCODE: $00001DCD VOL: 0
;PCODE: $00001DCE VOL: 0
;PCODE: $00001DCF VOL: 0
; 0000 0C0F sprintf(sms, "Canh bao mat dien ap AC2 tai tram %s", tram);
;PCODE: $00001DD0 VOL: 0
;PCODE: $00001DD1 VOL: 0
;PCODE: $00001DD2 VOL: 0
;PCODE: $00001DD3 VOL: 0
;PCODE: $00001DD4 VOL: 0
;PCODE: $00001DD5 VOL: 0
;PCODE: $00001DD6 VOL: 0
;PCODE: $00001DD7 VOL: 0
;PCODE: $00001DD8 VOL: 0
;PCODE: $00001DD9 VOL: 0
;PCODE: $00001DDA VOL: 0
;PCODE: $00001DDB VOL: 0
; 0000 0C10 send_sms(sdt_sms, sms);
;PCODE: $00001DDC VOL: 0
;PCODE: $00001DDD VOL: 0
;PCODE: $00001DDE VOL: 0
;PCODE: $00001DDF VOL: 0
; 0000 0C11 delay_ms(1000);
;PCODE: $00001DE0 VOL: 0
;PCODE: $00001DE1 VOL: 0
; 0000 0C12 // sprintf(sms, "Canh bao mat dien ap AC2 tai tram %s", tram);
; 0000 0C13 // send_sms(sdt_sms, sms);
; 0000 0C14 // delay_ms(1000);
; 0000 0C15 }
; 0000 0C16 if ((KTAC2 == 1) & (bit_ac2 == 1))
;PCODE: $00001DE2 VOL: 0
;PCODE: $00001DE3 VOL: 0
;PCODE: $00001DE4 VOL: 0
;PCODE: $00001DE5 VOL: 0
;PCODE: $00001DE6 VOL: 0
;PCODE: $00001DE7 VOL: 0
;PCODE: $00001DE8 VOL: 0
;PCODE: $00001DE9 VOL: 0
;PCODE: $00001DEA VOL: 0
;PCODE: $00001DEB VOL: 0
;PCODE: $00001DEC VOL: 0
;PCODE: $00001DED VOL: 0
; 0000 0C17 {
; 0000 0C18 bit_ac2 = 0;
;PCODE: $00001DEE VOL: 0
;PCODE: $00001DEF VOL: 0
;PCODE: $00001DF0 VOL: 0
; 0000 0C19 sprintf(enthernet, "%s,voltage_ac2,220", IP);
;PCODE: $00001DF1 VOL: 0
;PCODE: $00001DF2 VOL: 0
;PCODE: $00001DF3 VOL: 0
;PCODE: $00001DF4 VOL: 0
;PCODE: $00001DF5 VOL: 0
;PCODE: $00001DF6 VOL: 0
;PCODE: $00001DF7 VOL: 0
;PCODE: $00001DF8 VOL: 0
;PCODE: $00001DF9 VOL: 0
;PCODE: $00001DFA VOL: 0
;PCODE: $00001DFB VOL: 0
;PCODE: $00001DFC VOL: 0
; 0000 0C1A puts1(enthernet);
;PCODE: $00001DFD VOL: 0
;PCODE: $00001DFE VOL: 0
; 0000 0C1B delay_ms(100);
;PCODE: $00001DFF VOL: 0
;PCODE: $00001E00 VOL: 0
;PCODE: $00001E01 VOL: 0
; 0000 0C1C sprintf(sms, "Da co dien ap AC2 tai tram %s", tram);
;PCODE: $00001E02 VOL: 0
;PCODE: $00001E03 VOL: 0
;PCODE: $00001E04 VOL: 0
;PCODE: $00001E05 VOL: 0
;PCODE: $00001E06 VOL: 0
;PCODE: $00001E07 VOL: 0
;PCODE: $00001E08 VOL: 0
;PCODE: $00001E09 VOL: 0
;PCODE: $00001E0A VOL: 0
;PCODE: $00001E0B VOL: 0
;PCODE: $00001E0C VOL: 0
;PCODE: $00001E0D VOL: 0
; 0000 0C1D send_sms(sdt_sms, sms);
;PCODE: $00001E0E VOL: 0
;PCODE: $00001E0F VOL: 0
;PCODE: $00001E10 VOL: 0
;PCODE: $00001E11 VOL: 0
; 0000 0C1E delay_ms(1000);
;PCODE: $00001E12 VOL: 0
;PCODE: $00001E13 VOL: 0
; 0000 0C1F // sprintf(sms, "Da co dien ap AC2 tai tram %s", tram);
; 0000 0C20 // send_sms(sdt_sms, sms);
; 0000 0C21 // delay_ms(1000);
; 0000 0C22 }
; 0000 0C23 if ((min % 5 == 0) & (sec == 0) & (bit_enthernet == 1))
;PCODE: $00001E14 VOL: 0
;PCODE: $00001E15 VOL: 0
;PCODE: $00001E16 VOL: 0
;PCODE: $00001E17 VOL: 0
;PCODE: $00001E18 VOL: 0
;PCODE: $00001E19 VOL: 0
;PCODE: $00001E1A VOL: 0
;PCODE: $00001E1B VOL: 0
;PCODE: $00001E1C VOL: 0
;PCODE: $00001E1D VOL: 0
;PCODE: $00001E1E VOL: 0
;PCODE: $00001E1F VOL: 0
;PCODE: $00001E20 VOL: 0
;PCODE: $00001E21 VOL: 0
;PCODE: $00001E22 VOL: 0
;PCODE: $00001E23 VOL: 0
;PCODE: $00001E24 VOL: 0
;PCODE: $00001E25 VOL: 0
;PCODE: $00001E26 VOL: 0
; 0000 0C24 {
; 0000 0C25 bit_enthernet = 0;
;PCODE: $00001E27 VOL: 0
;PCODE: $00001E28 VOL: 0
;PCODE: $00001E29 VOL: 0
; 0000 0C26 lcd_clear();
;PCODE: $00001E2A VOL: 0
; 0000 0C27 lcd_puts("truyen enthernet");
;PCODE: $00001E2B VOL: 0
;PCODE: $00001E2C VOL: 0
;PCODE: $00001E2D VOL: 0
; 0000 0C28 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
;PCODE: $00001E2E VOL: 0
;PCODE: $00001E2F VOL: 0
;PCODE: $00001E30 VOL: 0
;PCODE: $00001E31 VOL: 0
;PCODE: $00001E32 VOL: 0
;PCODE: $00001E33 VOL: 0
;PCODE: $00001E34 VOL: 0
;PCODE: $00001E35 VOL: 0
;PCODE: $00001E36 VOL: 0
;PCODE: $00001E37 VOL: 0
;PCODE: $00001E38 VOL: 0
;PCODE: $00001E39 VOL: 0
;PCODE: $00001E3A VOL: 0
;PCODE: $00001E3B VOL: 0
;PCODE: $00001E3C VOL: 0
;PCODE: $00001E3D VOL: 0
;PCODE: $00001E3E VOL: 0
;PCODE: $00001E3F VOL: 0
;PCODE: $00001E40 VOL: 0
;PCODE: $00001E41 VOL: 0
;PCODE: $00001E42 VOL: 0
;PCODE: $00001E43 VOL: 0
; 0000 0C29 puts1(enthernet);
;PCODE: $00001E44 VOL: 0
;PCODE: $00001E45 VOL: 0
; 0000 0C2A delay_ms(100);
;PCODE: $00001E46 VOL: 0
;PCODE: $00001E47 VOL: 0
;PCODE: $00001E48 VOL: 0
; 0000 0C2B sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
;PCODE: $00001E49 VOL: 0
;PCODE: $00001E4A VOL: 0
;PCODE: $00001E4B VOL: 0
;PCODE: $00001E4C VOL: 0
;PCODE: $00001E4D VOL: 0
;PCODE: $00001E4E VOL: 0
;PCODE: $00001E4F VOL: 0
;PCODE: $00001E50 VOL: 0
;PCODE: $00001E51 VOL: 0
;PCODE: $00001E52 VOL: 0
;PCODE: $00001E53 VOL: 0
;PCODE: $00001E54 VOL: 0
;PCODE: $00001E55 VOL: 0
;PCODE: $00001E56 VOL: 0
;PCODE: $00001E57 VOL: 0
;PCODE: $00001E58 VOL: 0
;PCODE: $00001E59 VOL: 0
;PCODE: $00001E5A VOL: 0
;PCODE: $00001E5B VOL: 0
;PCODE: $00001E5C VOL: 0
;PCODE: $00001E5D VOL: 0
;PCODE: $00001E5E VOL: 0
; 0000 0C2C puts1(enthernet);
;PCODE: $00001E5F VOL: 0
;PCODE: $00001E60 VOL: 0
; 0000 0C2D delay_ms(100);
;PCODE: $00001E61 VOL: 0
;PCODE: $00001E62 VOL: 0
;PCODE: $00001E63 VOL: 0
; 0000 0C2E sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
;PCODE: $00001E64 VOL: 0
;PCODE: $00001E65 VOL: 0
;PCODE: $00001E66 VOL: 0
;PCODE: $00001E67 VOL: 0
;PCODE: $00001E68 VOL: 0
;PCODE: $00001E69 VOL: 0
;PCODE: $00001E6A VOL: 0
;PCODE: $00001E6B VOL: 0
;PCODE: $00001E6C VOL: 0
;PCODE: $00001E6D VOL: 0
;PCODE: $00001E6E VOL: 0
;PCODE: $00001E6F VOL: 0
;PCODE: $00001E70 VOL: 0
;PCODE: $00001E71 VOL: 0
;PCODE: $00001E72 VOL: 0
;PCODE: $00001E73 VOL: 0
;PCODE: $00001E74 VOL: 0
;PCODE: $00001E75 VOL: 0
; 0000 0C2F puts1(enthernet);
;PCODE: $00001E76 VOL: 0
;PCODE: $00001E77 VOL: 0
; 0000 0C30 delay_ms(100);
;PCODE: $00001E78 VOL: 0
;PCODE: $00001E79 VOL: 0
;PCODE: $00001E7A VOL: 0
; 0000 0C31 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
;PCODE: $00001E7B VOL: 0
;PCODE: $00001E7C VOL: 0
;PCODE: $00001E7D VOL: 0
;PCODE: $00001E7E VOL: 0
;PCODE: $00001E7F VOL: 0
;PCODE: $00001E80 VOL: 0
;PCODE: $00001E81 VOL: 0
;PCODE: $00001E82 VOL: 0
;PCODE: $00001E83 VOL: 0
;PCODE: $00001E84 VOL: 0
;PCODE: $00001E85 VOL: 0
;PCODE: $00001E86 VOL: 0
;PCODE: $00001E87 VOL: 0
;PCODE: $00001E88 VOL: 0
;PCODE: $00001E89 VOL: 0
;PCODE: $00001E8A VOL: 0
;PCODE: $00001E8B VOL: 0
;PCODE: $00001E8C VOL: 0
; 0000 0C32 puts1(enthernet);
;PCODE: $00001E8D VOL: 0
;PCODE: $00001E8E VOL: 0
; 0000 0C33 delay_ms(100);
;PCODE: $00001E8F VOL: 0
;PCODE: $00001E90 VOL: 0
;PCODE: $00001E91 VOL: 0
; 0000 0C34 if (KTAC1 == 1)
;PCODE: $00001E92 VOL: 0
;PCODE: $00001E93 VOL: 0
;PCODE: $00001E94 VOL: 0
; 0000 0C35 {
; 0000 0C36 sprintf(enthernet, "%s,voltage_ac,220", IP);
;PCODE: $00001E95 VOL: 0
;PCODE: $00001E96 VOL: 0
;PCODE: $00001E97 VOL: 0
;PCODE: $00001E98 VOL: 0
;PCODE: $00001E99 VOL: 0
;PCODE: $00001E9A VOL: 0
;PCODE: $00001E9B VOL: 0
;PCODE: $00001E9C VOL: 0
;PCODE: $00001E9D VOL: 0
;PCODE: $00001E9E VOL: 0
;PCODE: $00001E9F VOL: 0
;PCODE: $00001EA0 VOL: 0
; 0000 0C37 puts1(enthernet);
;PCODE: $00001EA1 VOL: 0
;PCODE: $00001EA2 VOL: 0
; 0000 0C38 delay_ms(100);
;PCODE: $00001EA3 VOL: 0
;PCODE: $00001EA4 VOL: 0
;PCODE: $00001EA5 VOL: 0
; 0000 0C39 }
; 0000 0C3A else
;PCODE: $00001EA6 VOL: 0
;PCODE: $00001EA7 VOL: 0
; 0000 0C3B {
; 0000 0C3C sprintf(enthernet, "%s,voltage_ac,1", IP);
;PCODE: $00001EA8 VOL: 0
;PCODE: $00001EA9 VOL: 0
;PCODE: $00001EAA VOL: 0
;PCODE: $00001EAB VOL: 0
;PCODE: $00001EAC VOL: 0
;PCODE: $00001EAD VOL: 0
;PCODE: $00001EAE VOL: 0
;PCODE: $00001EAF VOL: 0
;PCODE: $00001EB0 VOL: 0
;PCODE: $00001EB1 VOL: 0
;PCODE: $00001EB2 VOL: 0
;PCODE: $00001EB3 VOL: 0
; 0000 0C3D puts1(enthernet);
;PCODE: $00001EB4 VOL: 0
;PCODE: $00001EB5 VOL: 0
; 0000 0C3E delay_ms(100);
;PCODE: $00001EB6 VOL: 0
;PCODE: $00001EB7 VOL: 0
;PCODE: $00001EB8 VOL: 0
; 0000 0C3F }
;PCODE: $00001EB9 VOL: 0
; 0000 0C40 if (KTAC2 == 1)
;PCODE: $00001EBA VOL: 0
;PCODE: $00001EBB VOL: 0
;PCODE: $00001EBC VOL: 0
; 0000 0C41 {
; 0000 0C42 sprintf(enthernet, "%s,voltage_ac2,220", IP);
;PCODE: $00001EBD VOL: 0
;PCODE: $00001EBE VOL: 0
;PCODE: $00001EBF VOL: 0
;PCODE: $00001EC0 VOL: 0
;PCODE: $00001EC1 VOL: 0
;PCODE: $00001EC2 VOL: 0
;PCODE: $00001EC3 VOL: 0
;PCODE: $00001EC4 VOL: 0
;PCODE: $00001EC5 VOL: 0
;PCODE: $00001EC6 VOL: 0
;PCODE: $00001EC7 VOL: 0
;PCODE: $00001EC8 VOL: 0
; 0000 0C43 puts1(enthernet);
;PCODE: $00001EC9 VOL: 0
;PCODE: $00001ECA VOL: 0
; 0000 0C44 delay_ms(100);
;PCODE: $00001ECB VOL: 0
;PCODE: $00001ECC VOL: 0
;PCODE: $00001ECD VOL: 0
; 0000 0C45 }
; 0000 0C46 else
;PCODE: $00001ECE VOL: 0
;PCODE: $00001ECF VOL: 0
; 0000 0C47 {
; 0000 0C48 sprintf(enthernet, "%s,voltage_ac2,1", IP);
;PCODE: $00001ED0 VOL: 0
;PCODE: $00001ED1 VOL: 0
;PCODE: $00001ED2 VOL: 0
;PCODE: $00001ED3 VOL: 0
;PCODE: $00001ED4 VOL: 0
;PCODE: $00001ED5 VOL: 0
;PCODE: $00001ED6 VOL: 0
;PCODE: $00001ED7 VOL: 0
;PCODE: $00001ED8 VOL: 0
;PCODE: $00001ED9 VOL: 0
;PCODE: $00001EDA VOL: 0
;PCODE: $00001EDB VOL: 0
; 0000 0C49 puts1(enthernet);
;PCODE: $00001EDC VOL: 0
;PCODE: $00001EDD VOL: 0
; 0000 0C4A delay_ms(100);
;PCODE: $00001EDE VOL: 0
;PCODE: $00001EDF VOL: 0
;PCODE: $00001EE0 VOL: 0
; 0000 0C4B }
;PCODE: $00001EE1 VOL: 0
; 0000 0C4C if (AS == 1)
;PCODE: $00001EE2 VOL: 0
;PCODE: $00001EE3 VOL: 0
;PCODE: $00001EE4 VOL: 0
; 0000 0C4D {
; 0000 0C4E sprintf(enthernet, "%s,light,1", IP);
;PCODE: $00001EE5 VOL: 0
;PCODE: $00001EE6 VOL: 0
;PCODE: $00001EE7 VOL: 0
;PCODE: $00001EE8 VOL: 0
;PCODE: $00001EE9 VOL: 0
;PCODE: $00001EEA VOL: 0
;PCODE: $00001EEB VOL: 0
;PCODE: $00001EEC VOL: 0
;PCODE: $00001EED VOL: 0
;PCODE: $00001EEE VOL: 0
;PCODE: $00001EEF VOL: 0
;PCODE: $00001EF0 VOL: 0
; 0000 0C4F puts1(enthernet);
;PCODE: $00001EF1 VOL: 0
;PCODE: $00001EF2 VOL: 0
; 0000 0C50 delay_ms(100);
;PCODE: $00001EF3 VOL: 0
;PCODE: $00001EF4 VOL: 0
;PCODE: $00001EF5 VOL: 0
; 0000 0C51 }
; 0000 0C52 else
;PCODE: $00001EF6 VOL: 0
;PCODE: $00001EF7 VOL: 0
; 0000 0C53 {
; 0000 0C54 sprintf(enthernet, "%s,light,2", IP);
;PCODE: $00001EF8 VOL: 0
;PCODE: $00001EF9 VOL: 0
;PCODE: $00001EFA VOL: 0
;PCODE: $00001EFB VOL: 0
;PCODE: $00001EFC VOL: 0
;PCODE: $00001EFD VOL: 0
;PCODE: $00001EFE VOL: 0
;PCODE: $00001EFF VOL: 0
;PCODE: $00001F00 VOL: 0
;PCODE: $00001F01 VOL: 0
;PCODE: $00001F02 VOL: 0
;PCODE: $00001F03 VOL: 0
; 0000 0C55 puts1(enthernet);
;PCODE: $00001F04 VOL: 0
;PCODE: $00001F05 VOL: 0
; 0000 0C56 delay_ms(100);
;PCODE: $00001F06 VOL: 0
;PCODE: $00001F07 VOL: 0
;PCODE: $00001F08 VOL: 0
; 0000 0C57 }
;PCODE: $00001F09 VOL: 0
; 0000 0C58 lcd_puts("truyen xong");
;PCODE: $00001F0A VOL: 0
;PCODE: $00001F0B VOL: 0
;PCODE: $00001F0C VOL: 0
; 0000 0C59 lcd_clear();
;PCODE: $00001F0D VOL: 0
; 0000 0C5A }
; 0000 0C5B else
;PCODE: $00001F0E VOL: 0
;PCODE: $00001F0F VOL: 0
; 0000 0C5C {
; 0000 0C5D bit_enthernet = 1;
;PCODE: $00001F10 VOL: 0
;PCODE: $00001F11 VOL: 0
;PCODE: $00001F12 VOL: 0
; 0000 0C5E delay_ms(100);
;PCODE: $00001F13 VOL: 0
;PCODE: $00001F14 VOL: 0
;PCODE: $00001F15 VOL: 0
; 0000 0C5F }
;PCODE: $00001F16 VOL: 0
; 0000 0C60 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0C61 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0C62 dc_low_11 = EEPROM_read(31) * 10 + EEPROM_read(32);
;PCODE: $00001F17 VOL: 0
;PCODE: $00001F18 VOL: 0
;PCODE: $00001F19 VOL: 0
;PCODE: $00001F1A VOL: 0
;PCODE: $00001F1B VOL: 0
;PCODE: $00001F1C VOL: 0
;PCODE: $00001F1D VOL: 0
;PCODE: $00001F1E VOL: 0
;PCODE: $00001F1F VOL: 0
;PCODE: $00001F20 VOL: 0
;PCODE: $00001F21 VOL: 0
;PCODE: $00001F22 VOL: 0
;PCODE: $00001F23 VOL: 0
; 0000 0C63 dc_low_21 = EEPROM_read(33) * 10 + EEPROM_read(34);
;PCODE: $00001F24 VOL: 0
;PCODE: $00001F25 VOL: 0
;PCODE: $00001F26 VOL: 0
;PCODE: $00001F27 VOL: 0
;PCODE: $00001F28 VOL: 0
;PCODE: $00001F29 VOL: 0
;PCODE: $00001F2A VOL: 0
;PCODE: $00001F2B VOL: 0
;PCODE: $00001F2C VOL: 0
;PCODE: $00001F2D VOL: 0
;PCODE: $00001F2E VOL: 0
;PCODE: $00001F2F VOL: 0
;PCODE: $00001F30 VOL: 0
; 0000 0C64 dc_high1 = EEPROM_read(35) * 10 + EEPROM_read(36);
;PCODE: $00001F31 VOL: 0
;PCODE: $00001F32 VOL: 0
;PCODE: $00001F33 VOL: 0
;PCODE: $00001F34 VOL: 0
;PCODE: $00001F35 VOL: 0
;PCODE: $00001F36 VOL: 0
;PCODE: $00001F37 VOL: 0
;PCODE: $00001F38 VOL: 0
;PCODE: $00001F39 VOL: 0
;PCODE: $00001F3A VOL: 0
;PCODE: $00001F3B VOL: 0
;PCODE: $00001F3C VOL: 0
;PCODE: $00001F3D VOL: 0
; 0000 0C65 if ((dc11 * 10 + dc22 < dc_low_11) & (bit_dc1_cb2 == 0))
;PCODE: $00001F3E VOL: 0
;PCODE: $00001F3F VOL: 0
;PCODE: $00001F40 VOL: 0
;PCODE: $00001F41 VOL: 0
;PCODE: $00001F42 VOL: 0
;PCODE: $00001F43 VOL: 0
;PCODE: $00001F44 VOL: 0
;PCODE: $00001F45 VOL: 0
;PCODE: $00001F46 VOL: 0
;PCODE: $00001F47 VOL: 0
;PCODE: $00001F48 VOL: 0
;PCODE: $00001F49 VOL: 0
;PCODE: $00001F4A VOL: 0
;PCODE: $00001F4B VOL: 0
; 0000 0C66 {
; 0000 0C67 bit_coi = 1;
;PCODE: $00001F4C VOL: 0
;PCODE: $00001F4D VOL: 0
;PCODE: $00001F4E VOL: 0
; 0000 0C68 bit_dc1_cb2 = 1;
;PCODE: $00001F4F VOL: 0
;PCODE: $00001F50 VOL: 0
;PCODE: $00001F51 VOL: 0
; 0000 0C69 bit_dc1_cb1 = 0;
;PCODE: $00001F52 VOL: 0
;PCODE: $00001F53 VOL: 0
;PCODE: $00001F54 VOL: 0
; 0000 0C6A led_vang = 0;
;PCODE: $00001F55 VOL: 0
;PCODE: $00001F56 VOL: 0
; 0000 0C6B sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
;PCODE: $00001F57 VOL: 0
;PCODE: $00001F58 VOL: 0
;PCODE: $00001F59 VOL: 0
;PCODE: $00001F5A VOL: 0
;PCODE: $00001F5B VOL: 0
;PCODE: $00001F5C VOL: 0
;PCODE: $00001F5D VOL: 0
;PCODE: $00001F5E VOL: 0
;PCODE: $00001F5F VOL: 0
;PCODE: $00001F60 VOL: 0
;PCODE: $00001F61 VOL: 0
;PCODE: $00001F62 VOL: 0
;PCODE: $00001F63 VOL: 0
;PCODE: $00001F64 VOL: 0
;PCODE: $00001F65 VOL: 0
;PCODE: $00001F66 VOL: 0
;PCODE: $00001F67 VOL: 0
;PCODE: $00001F68 VOL: 0
; 0000 0C6C puts1(enthernet);
;PCODE: $00001F69 VOL: 0
;PCODE: $00001F6A VOL: 0
; 0000 0C6D delay_ms(100);
;PCODE: $00001F6B VOL: 0
;PCODE: $00001F6C VOL: 0
;PCODE: $00001F6D VOL: 0
; 0000 0C6E sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV thap hon muc %d,%dV", tra ...
;PCODE: $00001F6E VOL: 0
;PCODE: $00001F6F VOL: 0
;PCODE: $00001F70 VOL: 0
;PCODE: $00001F71 VOL: 0
;PCODE: $00001F72 VOL: 0
;PCODE: $00001F73 VOL: 0
;PCODE: $00001F74 VOL: 0
;PCODE: $00001F75 VOL: 0
;PCODE: $00001F76 VOL: 0
;PCODE: $00001F77 VOL: 0
;PCODE: $00001F78 VOL: 0
;PCODE: $00001F79 VOL: 0
;PCODE: $00001F7A VOL: 0
;PCODE: $00001F7B VOL: 0
;PCODE: $00001F7C VOL: 0
;PCODE: $00001F7D VOL: 0
;PCODE: $00001F7E VOL: 0
;PCODE: $00001F7F VOL: 0
;PCODE: $00001F80 VOL: 0
;PCODE: $00001F81 VOL: 0
;PCODE: $00001F82 VOL: 0
;PCODE: $00001F83 VOL: 0
;PCODE: $00001F84 VOL: 0
;PCODE: $00001F85 VOL: 0
;PCODE: $00001F86 VOL: 0
;PCODE: $00001F87 VOL: 0
;PCODE: $00001F88 VOL: 0
;PCODE: $00001F89 VOL: 0
; 0000 0C6F send_sms(sdt_sms, sms);
;PCODE: $00001F8A VOL: 0
;PCODE: $00001F8B VOL: 0
;PCODE: $00001F8C VOL: 0
;PCODE: $00001F8D VOL: 0
; 0000 0C70 delay_ms(1000);
;PCODE: $00001F8E VOL: 0
;PCODE: $00001F8F VOL: 0
; 0000 0C71 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV thap hon muc %d,%dV",  ...
; 0000 0C72 // send_sms(sdt_sms, sms);
; 0000 0C73 // delay_ms(1000);
; 0000 0C74 
; 0000 0C75 // nho hon nguong
; 0000 0C76 }
; 0000 0C77 dc_low_21 = EEPROM_read(33) * 10 + EEPROM_read(34);
;PCODE: $00001F90 VOL: 0
;PCODE: $00001F91 VOL: 0
;PCODE: $00001F92 VOL: 0
;PCODE: $00001F93 VOL: 0
;PCODE: $00001F94 VOL: 0
;PCODE: $00001F95 VOL: 0
;PCODE: $00001F96 VOL: 0
;PCODE: $00001F97 VOL: 0
;PCODE: $00001F98 VOL: 0
;PCODE: $00001F99 VOL: 0
;PCODE: $00001F9A VOL: 0
;PCODE: $00001F9B VOL: 0
;PCODE: $00001F9C VOL: 0
;PCODE: $00001F9D VOL: 0
; 0000 0C78 if ((dc11 * 10 + dc22 >= dc_low_11) & (dc11 * 10 + dc22 <= dc_low_21) & (bit_dc1 ...
;PCODE: $00001F9E VOL: 0
;PCODE: $00001F9F VOL: 0
;PCODE: $00001FA0 VOL: 0
;PCODE: $00001FA1 VOL: 0
;PCODE: $00001FA2 VOL: 0
;PCODE: $00001FA3 VOL: 0
;PCODE: $00001FA4 VOL: 0
;PCODE: $00001FA5 VOL: 0
;PCODE: $00001FA6 VOL: 0
;PCODE: $00001FA7 VOL: 0
;PCODE: $00001FA8 VOL: 0
;PCODE: $00001FA9 VOL: 0
;PCODE: $00001FAA VOL: 0
;PCODE: $00001FAB VOL: 0
;PCODE: $00001FAC VOL: 0
;PCODE: $00001FAD VOL: 0
;PCODE: $00001FAE VOL: 0
;PCODE: $00001FAF VOL: 0
;PCODE: $00001FB0 VOL: 0
;PCODE: $00001FB1 VOL: 0
;PCODE: $00001FB2 VOL: 0
;PCODE: $00001FB3 VOL: 0
; 0000 0C79 {
; 0000 0C7A bit_dc1_cb2 = 0;
;PCODE: $00001FB4 VOL: 0
;PCODE: $00001FB5 VOL: 0
;PCODE: $00001FB6 VOL: 0
; 0000 0C7B bit_dc1_cb1 = 1;
;PCODE: $00001FB7 VOL: 0
;PCODE: $00001FB8 VOL: 0
;PCODE: $00001FB9 VOL: 0
; 0000 0C7C bit_coi = 1;
;PCODE: $00001FBA VOL: 0
;PCODE: $00001FBB VOL: 0
;PCODE: $00001FBC VOL: 0
; 0000 0C7D sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
;PCODE: $00001FBD VOL: 0
;PCODE: $00001FBE VOL: 0
;PCODE: $00001FBF VOL: 0
;PCODE: $00001FC0 VOL: 0
;PCODE: $00001FC1 VOL: 0
;PCODE: $00001FC2 VOL: 0
;PCODE: $00001FC3 VOL: 0
;PCODE: $00001FC4 VOL: 0
;PCODE: $00001FC5 VOL: 0
;PCODE: $00001FC6 VOL: 0
;PCODE: $00001FC7 VOL: 0
;PCODE: $00001FC8 VOL: 0
;PCODE: $00001FC9 VOL: 0
;PCODE: $00001FCA VOL: 0
;PCODE: $00001FCB VOL: 0
;PCODE: $00001FCC VOL: 0
;PCODE: $00001FCD VOL: 0
;PCODE: $00001FCE VOL: 0
; 0000 0C7E puts1(enthernet);
;PCODE: $00001FCF VOL: 0
;PCODE: $00001FD0 VOL: 0
; 0000 0C7F delay_ms(100);
;PCODE: $00001FD1 VOL: 0
;PCODE: $00001FD2 VOL: 0
;PCODE: $00001FD3 VOL: 0
; 0000 0C80 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV nam trong canh bao muc 1  ...
;PCODE: $00001FD4 VOL: 0
;PCODE: $00001FD5 VOL: 0
;PCODE: $00001FD6 VOL: 0
;PCODE: $00001FD7 VOL: 0
;PCODE: $00001FD8 VOL: 0
;PCODE: $00001FD9 VOL: 0
;PCODE: $00001FDA VOL: 0
;PCODE: $00001FDB VOL: 0
;PCODE: $00001FDC VOL: 0
;PCODE: $00001FDD VOL: 0
;PCODE: $00001FDE VOL: 0
;PCODE: $00001FDF VOL: 0
;PCODE: $00001FE0 VOL: 0
;PCODE: $00001FE1 VOL: 0
;PCODE: $00001FE2 VOL: 0
;PCODE: $00001FE3 VOL: 0
;PCODE: $00001FE4 VOL: 0
;PCODE: $00001FE5 VOL: 0
;PCODE: $00001FE6 VOL: 0
;PCODE: $00001FE7 VOL: 0
;PCODE: $00001FE8 VOL: 0
;PCODE: $00001FE9 VOL: 0
;PCODE: $00001FEA VOL: 0
;PCODE: $00001FEB VOL: 0
;PCODE: $00001FEC VOL: 0
;PCODE: $00001FED VOL: 0
;PCODE: $00001FEE VOL: 0
;PCODE: $00001FEF VOL: 0
;PCODE: $00001FF0 VOL: 0
;PCODE: $00001FF1 VOL: 0
;PCODE: $00001FF2 VOL: 0
;PCODE: $00001FF3 VOL: 0
;PCODE: $00001FF4 VOL: 0
;PCODE: $00001FF5 VOL: 0
;PCODE: $00001FF6 VOL: 0
;PCODE: $00001FF7 VOL: 0
;PCODE: $00001FF8 VOL: 0
;PCODE: $00001FF9 VOL: 0
; 0000 0C81 send_sms(sdt_sms, sms);
;PCODE: $00001FFA VOL: 0
;PCODE: $00001FFB VOL: 0
;PCODE: $00001FFC VOL: 0
;PCODE: $00001FFD VOL: 0
; 0000 0C82 delay_ms(1000);
;PCODE: $00001FFE VOL: 0
;PCODE: $00001FFF VOL: 0
; 0000 0C83 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV nam trong canh bao muc ...
; 0000 0C84 // send_sms(sdt_sms, sms);
; 0000 0C85 // delay_ms(1000);
; 0000 0C86 // canh bao 1
; 0000 0C87 }
; 0000 0C88 if ((dc11 * 10 + dc22 > dc_low_21) & (dc11 * 10 + dc22 < dc_high1) & ((bit_dc1_c ...
;PCODE: $00002000 VOL: 0
;PCODE: $00002001 VOL: 0
;PCODE: $00002002 VOL: 0
;PCODE: $00002003 VOL: 0
;PCODE: $00002004 VOL: 0
;PCODE: $00002005 VOL: 0
;PCODE: $00002006 VOL: 0
;PCODE: $00002007 VOL: 0
;PCODE: $00002008 VOL: 0
;PCODE: $00002009 VOL: 0
;PCODE: $0000200A VOL: 0
;PCODE: $0000200B VOL: 0
;PCODE: $0000200C VOL: 0
;PCODE: $0000200D VOL: 0
;PCODE: $0000200E VOL: 0
;PCODE: $0000200F VOL: 0
;PCODE: $00002010 VOL: 0
;PCODE: $00002011 VOL: 0
;PCODE: $00002012 VOL: 0
;PCODE: $00002013 VOL: 0
;PCODE: $00002014 VOL: 0
;PCODE: $00002015 VOL: 0
;PCODE: $00002016 VOL: 0
;PCODE: $00002017 VOL: 0
;PCODE: $00002018 VOL: 0
;PCODE: $00002019 VOL: 0
;PCODE: $0000201A VOL: 0
;PCODE: $0000201B VOL: 0
;PCODE: $0000201C VOL: 0
; 0000 0C89 {
; 0000 0C8A led_vang = 0;
;PCODE: $0000201D VOL: 0
;PCODE: $0000201E VOL: 0
; 0000 0C8B bit_dc1_cb2 = 0;
;PCODE: $0000201F VOL: 0
;PCODE: $00002020 VOL: 0
;PCODE: $00002021 VOL: 0
; 0000 0C8C bit_dc1_cb1 = 0;
;PCODE: $00002022 VOL: 0
;PCODE: $00002023 VOL: 0
;PCODE: $00002024 VOL: 0
; 0000 0C8D sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
;PCODE: $00002025 VOL: 0
;PCODE: $00002026 VOL: 0
;PCODE: $00002027 VOL: 0
;PCODE: $00002028 VOL: 0
;PCODE: $00002029 VOL: 0
;PCODE: $0000202A VOL: 0
;PCODE: $0000202B VOL: 0
;PCODE: $0000202C VOL: 0
;PCODE: $0000202D VOL: 0
;PCODE: $0000202E VOL: 0
;PCODE: $0000202F VOL: 0
;PCODE: $00002030 VOL: 0
;PCODE: $00002031 VOL: 0
;PCODE: $00002032 VOL: 0
;PCODE: $00002033 VOL: 0
;PCODE: $00002034 VOL: 0
;PCODE: $00002035 VOL: 0
;PCODE: $00002036 VOL: 0
; 0000 0C8E puts1(enthernet);
;PCODE: $00002037 VOL: 0
;PCODE: $00002038 VOL: 0
; 0000 0C8F delay_ms(100);
;PCODE: $00002039 VOL: 0
;PCODE: $0000203A VOL: 0
;PCODE: $0000203B VOL: 0
; 0000 0C90 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV da ve muc binh thuong tu  ...
;PCODE: $0000203C VOL: 0
;PCODE: $0000203D VOL: 0
;PCODE: $0000203E VOL: 0
;PCODE: $0000203F VOL: 0
;PCODE: $00002040 VOL: 0
;PCODE: $00002041 VOL: 0
;PCODE: $00002042 VOL: 0
;PCODE: $00002043 VOL: 0
;PCODE: $00002044 VOL: 0
;PCODE: $00002045 VOL: 0
;PCODE: $00002046 VOL: 0
;PCODE: $00002047 VOL: 0
;PCODE: $00002048 VOL: 0
;PCODE: $00002049 VOL: 0
;PCODE: $0000204A VOL: 0
;PCODE: $0000204B VOL: 0
;PCODE: $0000204C VOL: 0
;PCODE: $0000204D VOL: 0
;PCODE: $0000204E VOL: 0
;PCODE: $0000204F VOL: 0
;PCODE: $00002050 VOL: 0
;PCODE: $00002051 VOL: 0
;PCODE: $00002052 VOL: 0
;PCODE: $00002053 VOL: 0
;PCODE: $00002054 VOL: 0
;PCODE: $00002055 VOL: 0
;PCODE: $00002056 VOL: 0
;PCODE: $00002057 VOL: 0
;PCODE: $00002058 VOL: 0
;PCODE: $00002059 VOL: 0
;PCODE: $0000205A VOL: 0
;PCODE: $0000205B VOL: 0
;PCODE: $0000205C VOL: 0
;PCODE: $0000205D VOL: 0
;PCODE: $0000205E VOL: 0
;PCODE: $0000205F VOL: 0
;PCODE: $00002060 VOL: 0
;PCODE: $00002061 VOL: 0
; 0000 0C91 send_sms(sdt_sms, sms);
;PCODE: $00002062 VOL: 0
;PCODE: $00002063 VOL: 0
;PCODE: $00002064 VOL: 0
;PCODE: $00002065 VOL: 0
; 0000 0C92 delay_ms(1000);
;PCODE: $00002066 VOL: 0
;PCODE: $00002067 VOL: 0
; 0000 0C93 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV da ve muc binh thuong  ...
; 0000 0C94 // send_sms(sdt_sms, sms);
; 0000 0C95 // delay_ms(1000);
; 0000 0C96 // an toan
; 0000 0C97 }
; 0000 0C98 if ((dc11 * 10 + dc22 > dc_high1) & (bit_dc1_cb2 == 0))
;PCODE: $00002068 VOL: 0
;PCODE: $00002069 VOL: 0
;PCODE: $0000206A VOL: 0
;PCODE: $0000206B VOL: 0
;PCODE: $0000206C VOL: 0
;PCODE: $0000206D VOL: 0
;PCODE: $0000206E VOL: 0
;PCODE: $0000206F VOL: 0
;PCODE: $00002070 VOL: 0
;PCODE: $00002071 VOL: 0
;PCODE: $00002072 VOL: 0
;PCODE: $00002073 VOL: 0
;PCODE: $00002074 VOL: 0
;PCODE: $00002075 VOL: 0
;PCODE: $00002076 VOL: 0
; 0000 0C99 {
; 0000 0C9A bit_dc1_cb2 = 1;
;PCODE: $00002077 VOL: 0
;PCODE: $00002078 VOL: 0
;PCODE: $00002079 VOL: 0
; 0000 0C9B bit_dc1_cb1 = 0;
;PCODE: $0000207A VOL: 0
;PCODE: $0000207B VOL: 0
;PCODE: $0000207C VOL: 0
; 0000 0C9C led_vang = 0;
;PCODE: $0000207D VOL: 0
;PCODE: $0000207E VOL: 0
; 0000 0C9D bit_coi = 1;
;PCODE: $0000207F VOL: 0
;PCODE: $00002080 VOL: 0
;PCODE: $00002081 VOL: 0
; 0000 0C9E sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
;PCODE: $00002082 VOL: 0
;PCODE: $00002083 VOL: 0
;PCODE: $00002084 VOL: 0
;PCODE: $00002085 VOL: 0
;PCODE: $00002086 VOL: 0
;PCODE: $00002087 VOL: 0
;PCODE: $00002088 VOL: 0
;PCODE: $00002089 VOL: 0
;PCODE: $0000208A VOL: 0
;PCODE: $0000208B VOL: 0
;PCODE: $0000208C VOL: 0
;PCODE: $0000208D VOL: 0
;PCODE: $0000208E VOL: 0
;PCODE: $0000208F VOL: 0
;PCODE: $00002090 VOL: 0
;PCODE: $00002091 VOL: 0
;PCODE: $00002092 VOL: 0
;PCODE: $00002093 VOL: 0
; 0000 0C9F puts1(enthernet);
;PCODE: $00002094 VOL: 0
;PCODE: $00002095 VOL: 0
; 0000 0CA0 delay_ms(100);
;PCODE: $00002096 VOL: 0
;PCODE: $00002097 VOL: 0
;PCODE: $00002098 VOL: 0
; 0000 0CA1 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", tram ...
;PCODE: $00002099 VOL: 0
;PCODE: $0000209A VOL: 0
;PCODE: $0000209B VOL: 0
;PCODE: $0000209C VOL: 0
;PCODE: $0000209D VOL: 0
;PCODE: $0000209E VOL: 0
;PCODE: $0000209F VOL: 0
;PCODE: $000020A0 VOL: 0
;PCODE: $000020A1 VOL: 0
;PCODE: $000020A2 VOL: 0
;PCODE: $000020A3 VOL: 0
;PCODE: $000020A4 VOL: 0
;PCODE: $000020A5 VOL: 0
;PCODE: $000020A6 VOL: 0
;PCODE: $000020A7 VOL: 0
;PCODE: $000020A8 VOL: 0
;PCODE: $000020A9 VOL: 0
;PCODE: $000020AA VOL: 0
;PCODE: $000020AB VOL: 0
;PCODE: $000020AC VOL: 0
;PCODE: $000020AD VOL: 0
;PCODE: $000020AE VOL: 0
;PCODE: $000020AF VOL: 0
;PCODE: $000020B0 VOL: 0
;PCODE: $000020B1 VOL: 0
;PCODE: $000020B2 VOL: 0
;PCODE: $000020B3 VOL: 0
;PCODE: $000020B4 VOL: 0
; 0000 0CA2 send_sms(sdt_sms, sms);
;PCODE: $000020B5 VOL: 0
;PCODE: $000020B6 VOL: 0
;PCODE: $000020B7 VOL: 0
;PCODE: $000020B8 VOL: 0
; 0000 0CA3 delay_ms(1000);
;PCODE: $000020B9 VOL: 0
;PCODE: $000020BA VOL: 0
; 0000 0CA4 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", t ...
; 0000 0CA5 // send_sms(sdt_sms, sms);
; 0000 0CA6 // delay_ms(1000);
; 0000 0CA7 // cao hon nguong
; 0000 0CA8 }
; 0000 0CA9 //////////////
; 0000 0CAA if ((dc21 * 10 + dc22 < dc_low_11) & (bit_dc2_cb2 == 0))
;PCODE: $000020BB VOL: 0
;PCODE: $000020BC VOL: 0
;PCODE: $000020BD VOL: 0
;PCODE: $000020BE VOL: 0
;PCODE: $000020BF VOL: 0
;PCODE: $000020C0 VOL: 0
;PCODE: $000020C1 VOL: 0
;PCODE: $000020C2 VOL: 0
;PCODE: $000020C3 VOL: 0
;PCODE: $000020C4 VOL: 0
;PCODE: $000020C5 VOL: 0
;PCODE: $000020C6 VOL: 0
;PCODE: $000020C7 VOL: 0
;PCODE: $000020C8 VOL: 0
;PCODE: $000020C9 VOL: 0
; 0000 0CAB {
; 0000 0CAC bit_coi = 1;
;PCODE: $000020CA VOL: 0
;PCODE: $000020CB VOL: 0
;PCODE: $000020CC VOL: 0
; 0000 0CAD bit_dc2_cb2 = 1;
;PCODE: $000020CD VOL: 0
;PCODE: $000020CE VOL: 0
;PCODE: $000020CF VOL: 0
; 0000 0CAE bit_dc2_cb1 = 0;
;PCODE: $000020D0 VOL: 0
;PCODE: $000020D1 VOL: 0
;PCODE: $000020D2 VOL: 0
; 0000 0CAF led_vang = 0;
;PCODE: $000020D3 VOL: 0
;PCODE: $000020D4 VOL: 0
; 0000 0CB0 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
;PCODE: $000020D5 VOL: 0
;PCODE: $000020D6 VOL: 0
;PCODE: $000020D7 VOL: 0
;PCODE: $000020D8 VOL: 0
;PCODE: $000020D9 VOL: 0
;PCODE: $000020DA VOL: 0
;PCODE: $000020DB VOL: 0
;PCODE: $000020DC VOL: 0
;PCODE: $000020DD VOL: 0
;PCODE: $000020DE VOL: 0
;PCODE: $000020DF VOL: 0
;PCODE: $000020E0 VOL: 0
;PCODE: $000020E1 VOL: 0
;PCODE: $000020E2 VOL: 0
;PCODE: $000020E3 VOL: 0
;PCODE: $000020E4 VOL: 0
;PCODE: $000020E5 VOL: 0
;PCODE: $000020E6 VOL: 0
; 0000 0CB1 puts1(enthernet);
;PCODE: $000020E7 VOL: 0
;PCODE: $000020E8 VOL: 0
; 0000 0CB2 delay_ms(100);
;PCODE: $000020E9 VOL: 0
;PCODE: $000020EA VOL: 0
;PCODE: $000020EB VOL: 0
; 0000 0CB3 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV thap hon muc %d,%dV", tra ...
;PCODE: $000020EC VOL: 0
;PCODE: $000020ED VOL: 0
;PCODE: $000020EE VOL: 0
;PCODE: $000020EF VOL: 0
;PCODE: $000020F0 VOL: 0
;PCODE: $000020F1 VOL: 0
;PCODE: $000020F2 VOL: 0
;PCODE: $000020F3 VOL: 0
;PCODE: $000020F4 VOL: 0
;PCODE: $000020F5 VOL: 0
;PCODE: $000020F6 VOL: 0
;PCODE: $000020F7 VOL: 0
;PCODE: $000020F8 VOL: 0
;PCODE: $000020F9 VOL: 0
;PCODE: $000020FA VOL: 0
;PCODE: $000020FB VOL: 0
;PCODE: $000020FC VOL: 0
;PCODE: $000020FD VOL: 0
;PCODE: $000020FE VOL: 0
;PCODE: $000020FF VOL: 0
;PCODE: $00002100 VOL: 0
;PCODE: $00002101 VOL: 0
;PCODE: $00002102 VOL: 0
;PCODE: $00002103 VOL: 0
;PCODE: $00002104 VOL: 0
;PCODE: $00002105 VOL: 0
;PCODE: $00002106 VOL: 0
;PCODE: $00002107 VOL: 0
; 0000 0CB4 send_sms(sdt_sms, sms);
;PCODE: $00002108 VOL: 0
;PCODE: $00002109 VOL: 0
;PCODE: $0000210A VOL: 0
;PCODE: $0000210B VOL: 0
; 0000 0CB5 delay_ms(1000);
;PCODE: $0000210C VOL: 0
;PCODE: $0000210D VOL: 0
; 0000 0CB6 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV thap hon muc %d,%dV",  ...
; 0000 0CB7 // send_sms(sdt_sms, sms);
; 0000 0CB8 // delay_ms(1000);
; 0000 0CB9 // nho hon nguong
; 0000 0CBA }
; 0000 0CBB if ((dc21 * 10 + dc22 >= dc_low_11) & (dc21 * 10 + dc22 <= dc_low_21) & (bit_dc2 ...
;PCODE: $0000210E VOL: 0
;PCODE: $0000210F VOL: 0
;PCODE: $00002110 VOL: 0
;PCODE: $00002111 VOL: 0
;PCODE: $00002112 VOL: 0
;PCODE: $00002113 VOL: 0
;PCODE: $00002114 VOL: 0
;PCODE: $00002115 VOL: 0
;PCODE: $00002116 VOL: 0
;PCODE: $00002117 VOL: 0
;PCODE: $00002118 VOL: 0
;PCODE: $00002119 VOL: 0
;PCODE: $0000211A VOL: 0
;PCODE: $0000211B VOL: 0
;PCODE: $0000211C VOL: 0
;PCODE: $0000211D VOL: 0
;PCODE: $0000211E VOL: 0
;PCODE: $0000211F VOL: 0
;PCODE: $00002120 VOL: 0
;PCODE: $00002121 VOL: 0
;PCODE: $00002122 VOL: 0
;PCODE: $00002123 VOL: 0
;PCODE: $00002124 VOL: 0
; 0000 0CBC {
; 0000 0CBD bit_dc2_cb2 = 0;
;PCODE: $00002125 VOL: 0
;PCODE: $00002126 VOL: 0
;PCODE: $00002127 VOL: 0
; 0000 0CBE bit_dc2_cb1 = 1;
;PCODE: $00002128 VOL: 0
;PCODE: $00002129 VOL: 0
;PCODE: $0000212A VOL: 0
; 0000 0CBF led_vang = 1;
;PCODE: $0000212B VOL: 0
;PCODE: $0000212C VOL: 0
; 0000 0CC0 bit_coi = 1;
;PCODE: $0000212D VOL: 0
;PCODE: $0000212E VOL: 0
;PCODE: $0000212F VOL: 0
; 0000 0CC1 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
;PCODE: $00002130 VOL: 0
;PCODE: $00002131 VOL: 0
;PCODE: $00002132 VOL: 0
;PCODE: $00002133 VOL: 0
;PCODE: $00002134 VOL: 0
;PCODE: $00002135 VOL: 0
;PCODE: $00002136 VOL: 0
;PCODE: $00002137 VOL: 0
;PCODE: $00002138 VOL: 0
;PCODE: $00002139 VOL: 0
;PCODE: $0000213A VOL: 0
;PCODE: $0000213B VOL: 0
;PCODE: $0000213C VOL: 0
;PCODE: $0000213D VOL: 0
;PCODE: $0000213E VOL: 0
;PCODE: $0000213F VOL: 0
;PCODE: $00002140 VOL: 0
;PCODE: $00002141 VOL: 0
; 0000 0CC2 puts1(enthernet);
;PCODE: $00002142 VOL: 0
;PCODE: $00002143 VOL: 0
; 0000 0CC3 delay_ms(100);
;PCODE: $00002144 VOL: 0
;PCODE: $00002145 VOL: 0
;PCODE: $00002146 VOL: 0
; 0000 0CC4 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV nam trong canh bao muc 1  ...
;PCODE: $00002147 VOL: 0
;PCODE: $00002148 VOL: 0
;PCODE: $00002149 VOL: 0
;PCODE: $0000214A VOL: 0
;PCODE: $0000214B VOL: 0
;PCODE: $0000214C VOL: 0
;PCODE: $0000214D VOL: 0
;PCODE: $0000214E VOL: 0
;PCODE: $0000214F VOL: 0
;PCODE: $00002150 VOL: 0
;PCODE: $00002151 VOL: 0
;PCODE: $00002152 VOL: 0
;PCODE: $00002153 VOL: 0
;PCODE: $00002154 VOL: 0
;PCODE: $00002155 VOL: 0
;PCODE: $00002156 VOL: 0
;PCODE: $00002157 VOL: 0
;PCODE: $00002158 VOL: 0
;PCODE: $00002159 VOL: 0
;PCODE: $0000215A VOL: 0
;PCODE: $0000215B VOL: 0
;PCODE: $0000215C VOL: 0
;PCODE: $0000215D VOL: 0
;PCODE: $0000215E VOL: 0
;PCODE: $0000215F VOL: 0
;PCODE: $00002160 VOL: 0
;PCODE: $00002161 VOL: 0
;PCODE: $00002162 VOL: 0
;PCODE: $00002163 VOL: 0
;PCODE: $00002164 VOL: 0
;PCODE: $00002165 VOL: 0
;PCODE: $00002166 VOL: 0
;PCODE: $00002167 VOL: 0
;PCODE: $00002168 VOL: 0
;PCODE: $00002169 VOL: 0
;PCODE: $0000216A VOL: 0
;PCODE: $0000216B VOL: 0
;PCODE: $0000216C VOL: 0
; 0000 0CC5 send_sms(sdt_sms, sms);
;PCODE: $0000216D VOL: 0
;PCODE: $0000216E VOL: 0
;PCODE: $0000216F VOL: 0
;PCODE: $00002170 VOL: 0
; 0000 0CC6 delay_ms(1000);
;PCODE: $00002171 VOL: 0
;PCODE: $00002172 VOL: 0
; 0000 0CC7 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV nam trong canh bao muc ...
; 0000 0CC8 // send_sms(sdt_sms, sms);
; 0000 0CC9 // delay_ms(1000);
; 0000 0CCA // canh bao 1
; 0000 0CCB }
; 0000 0CCC if ((dc21 * 10 + dc22 > dc_low_21) & (dc21 * 10 + dc22 < dc_high1) & ((bit_dc2_c ...
;PCODE: $00002173 VOL: 0
;PCODE: $00002174 VOL: 0
;PCODE: $00002175 VOL: 0
;PCODE: $00002176 VOL: 0
;PCODE: $00002177 VOL: 0
;PCODE: $00002178 VOL: 0
;PCODE: $00002179 VOL: 0
;PCODE: $0000217A VOL: 0
;PCODE: $0000217B VOL: 0
;PCODE: $0000217C VOL: 0
;PCODE: $0000217D VOL: 0
;PCODE: $0000217E VOL: 0
;PCODE: $0000217F VOL: 0
;PCODE: $00002180 VOL: 0
;PCODE: $00002181 VOL: 0
;PCODE: $00002182 VOL: 0
;PCODE: $00002183 VOL: 0
;PCODE: $00002184 VOL: 0
;PCODE: $00002185 VOL: 0
;PCODE: $00002186 VOL: 0
;PCODE: $00002187 VOL: 0
;PCODE: $00002188 VOL: 0
;PCODE: $00002189 VOL: 0
;PCODE: $0000218A VOL: 0
;PCODE: $0000218B VOL: 0
;PCODE: $0000218C VOL: 0
;PCODE: $0000218D VOL: 0
;PCODE: $0000218E VOL: 0
;PCODE: $0000218F VOL: 0
; 0000 0CCD {
; 0000 0CCE led_vang = 0;
;PCODE: $00002190 VOL: 0
;PCODE: $00002191 VOL: 0
; 0000 0CCF bit_dc2_cb2 = 0;
;PCODE: $00002192 VOL: 0
;PCODE: $00002193 VOL: 0
;PCODE: $00002194 VOL: 0
; 0000 0CD0 bit_dc2_cb1 = 0;
;PCODE: $00002195 VOL: 0
;PCODE: $00002196 VOL: 0
;PCODE: $00002197 VOL: 0
; 0000 0CD1 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
;PCODE: $00002198 VOL: 0
;PCODE: $00002199 VOL: 0
;PCODE: $0000219A VOL: 0
;PCODE: $0000219B VOL: 0
;PCODE: $0000219C VOL: 0
;PCODE: $0000219D VOL: 0
;PCODE: $0000219E VOL: 0
;PCODE: $0000219F VOL: 0
;PCODE: $000021A0 VOL: 0
;PCODE: $000021A1 VOL: 0
;PCODE: $000021A2 VOL: 0
;PCODE: $000021A3 VOL: 0
;PCODE: $000021A4 VOL: 0
;PCODE: $000021A5 VOL: 0
;PCODE: $000021A6 VOL: 0
;PCODE: $000021A7 VOL: 0
;PCODE: $000021A8 VOL: 0
;PCODE: $000021A9 VOL: 0
; 0000 0CD2 puts1(enthernet);
;PCODE: $000021AA VOL: 0
;PCODE: $000021AB VOL: 0
; 0000 0CD3 delay_ms(100);
;PCODE: $000021AC VOL: 0
;PCODE: $000021AD VOL: 0
;PCODE: $000021AE VOL: 0
; 0000 0CD4 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV da ve muc binh thuong tu  ...
;PCODE: $000021AF VOL: 0
;PCODE: $000021B0 VOL: 0
;PCODE: $000021B1 VOL: 0
;PCODE: $000021B2 VOL: 0
;PCODE: $000021B3 VOL: 0
;PCODE: $000021B4 VOL: 0
;PCODE: $000021B5 VOL: 0
;PCODE: $000021B6 VOL: 0
;PCODE: $000021B7 VOL: 0
;PCODE: $000021B8 VOL: 0
;PCODE: $000021B9 VOL: 0
;PCODE: $000021BA VOL: 0
;PCODE: $000021BB VOL: 0
;PCODE: $000021BC VOL: 0
;PCODE: $000021BD VOL: 0
;PCODE: $000021BE VOL: 0
;PCODE: $000021BF VOL: 0
;PCODE: $000021C0 VOL: 0
;PCODE: $000021C1 VOL: 0
;PCODE: $000021C2 VOL: 0
;PCODE: $000021C3 VOL: 0
;PCODE: $000021C4 VOL: 0
;PCODE: $000021C5 VOL: 0
;PCODE: $000021C6 VOL: 0
;PCODE: $000021C7 VOL: 0
;PCODE: $000021C8 VOL: 0
;PCODE: $000021C9 VOL: 0
;PCODE: $000021CA VOL: 0
;PCODE: $000021CB VOL: 0
;PCODE: $000021CC VOL: 0
;PCODE: $000021CD VOL: 0
;PCODE: $000021CE VOL: 0
;PCODE: $000021CF VOL: 0
;PCODE: $000021D0 VOL: 0
;PCODE: $000021D1 VOL: 0
;PCODE: $000021D2 VOL: 0
;PCODE: $000021D3 VOL: 0
;PCODE: $000021D4 VOL: 0
; 0000 0CD5 send_sms(sdt_sms, sms);
;PCODE: $000021D5 VOL: 0
;PCODE: $000021D6 VOL: 0
;PCODE: $000021D7 VOL: 0
;PCODE: $000021D8 VOL: 0
; 0000 0CD6 delay_ms(1000);
;PCODE: $000021D9 VOL: 0
;PCODE: $000021DA VOL: 0
; 0000 0CD7 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV da ve muc binh thuong  ...
; 0000 0CD8 // send_sms(sdt_sms, sms);
; 0000 0CD9 // delay_ms(1000);
; 0000 0CDA // an toan
; 0000 0CDB }
; 0000 0CDC if ((dc21 * 10 + dc22 > dc_high1) & (bit_dc2_cb2 == 0))
;PCODE: $000021DB VOL: 0
;PCODE: $000021DC VOL: 0
;PCODE: $000021DD VOL: 0
;PCODE: $000021DE VOL: 0
;PCODE: $000021DF VOL: 0
;PCODE: $000021E0 VOL: 0
;PCODE: $000021E1 VOL: 0
;PCODE: $000021E2 VOL: 0
;PCODE: $000021E3 VOL: 0
;PCODE: $000021E4 VOL: 0
;PCODE: $000021E5 VOL: 0
;PCODE: $000021E6 VOL: 0
;PCODE: $000021E7 VOL: 0
;PCODE: $000021E8 VOL: 0
;PCODE: $000021E9 VOL: 0
; 0000 0CDD {
; 0000 0CDE bit_dc2_cb2 = 1;
;PCODE: $000021EA VOL: 0
;PCODE: $000021EB VOL: 0
;PCODE: $000021EC VOL: 0
; 0000 0CDF bit_dc2_cb1 = 0;
;PCODE: $000021ED VOL: 0
;PCODE: $000021EE VOL: 0
;PCODE: $000021EF VOL: 0
; 0000 0CE0 bit_coi = 1;
;PCODE: $000021F0 VOL: 0
;PCODE: $000021F1 VOL: 0
;PCODE: $000021F2 VOL: 0
; 0000 0CE1 led_vang = 0;
;PCODE: $000021F3 VOL: 0
;PCODE: $000021F4 VOL: 0
; 0000 0CE2 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
;PCODE: $000021F5 VOL: 0
;PCODE: $000021F6 VOL: 0
;PCODE: $000021F7 VOL: 0
;PCODE: $000021F8 VOL: 0
;PCODE: $000021F9 VOL: 0
;PCODE: $000021FA VOL: 0
;PCODE: $000021FB VOL: 0
;PCODE: $000021FC VOL: 0
;PCODE: $000021FD VOL: 0
;PCODE: $000021FE VOL: 0
;PCODE: $000021FF VOL: 0
;PCODE: $00002200 VOL: 0
;PCODE: $00002201 VOL: 0
;PCODE: $00002202 VOL: 0
;PCODE: $00002203 VOL: 0
;PCODE: $00002204 VOL: 0
;PCODE: $00002205 VOL: 0
;PCODE: $00002206 VOL: 0
; 0000 0CE3 puts1(enthernet);
;PCODE: $00002207 VOL: 0
;PCODE: $00002208 VOL: 0
; 0000 0CE4 delay_ms(100);
;PCODE: $00002209 VOL: 0
;PCODE: $0000220A VOL: 0
;PCODE: $0000220B VOL: 0
; 0000 0CE5 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", tram ...
;PCODE: $0000220C VOL: 0
;PCODE: $0000220D VOL: 0
;PCODE: $0000220E VOL: 0
;PCODE: $0000220F VOL: 0
;PCODE: $00002210 VOL: 0
;PCODE: $00002211 VOL: 0
;PCODE: $00002212 VOL: 0
;PCODE: $00002213 VOL: 0
;PCODE: $00002214 VOL: 0
;PCODE: $00002215 VOL: 0
;PCODE: $00002216 VOL: 0
;PCODE: $00002217 VOL: 0
;PCODE: $00002218 VOL: 0
;PCODE: $00002219 VOL: 0
;PCODE: $0000221A VOL: 0
;PCODE: $0000221B VOL: 0
;PCODE: $0000221C VOL: 0
;PCODE: $0000221D VOL: 0
;PCODE: $0000221E VOL: 0
;PCODE: $0000221F VOL: 0
;PCODE: $00002220 VOL: 0
;PCODE: $00002221 VOL: 0
;PCODE: $00002222 VOL: 0
;PCODE: $00002223 VOL: 0
;PCODE: $00002224 VOL: 0
;PCODE: $00002225 VOL: 0
;PCODE: $00002226 VOL: 0
;PCODE: $00002227 VOL: 0
; 0000 0CE6 send_sms(sdt_sms, sms);
;PCODE: $00002228 VOL: 0
;PCODE: $00002229 VOL: 0
;PCODE: $0000222A VOL: 0
;PCODE: $0000222B VOL: 0
; 0000 0CE7 delay_ms(1000);
;PCODE: $0000222C VOL: 0
;PCODE: $0000222D VOL: 0
; 0000 0CE8 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", t ...
; 0000 0CE9 // send_sms(sdt_sms, sms);
; 0000 0CEA // delay_ms(1000);
; 0000 0CEB // cao hon nguong
; 0000 0CEC }
; 0000 0CED 
; 0000 0CEE //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0CEF //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0CF0 bit_canh_bao = bit_temp || bit_humi || bit_ac1 || bit_ac2 || bit_dc1_cb1 || bit_ ...
;PCODE: $0000222E VOL: 0
;PCODE: $0000222F VOL: 0
;PCODE: $00002230 VOL: 0
;PCODE: $00002231 VOL: 0
;PCODE: $00002232 VOL: 0
;PCODE: $00002233 VOL: 0
;PCODE: $00002234 VOL: 0
;PCODE: $00002235 VOL: 0
;PCODE: $00002236 VOL: 0
;PCODE: $00002237 VOL: 0
;PCODE: $00002238 VOL: 0
;PCODE: $00002239 VOL: 0
;PCODE: $0000223A VOL: 0
;PCODE: $0000223B VOL: 0
;PCODE: $0000223C VOL: 0
;PCODE: $0000223D VOL: 0
;PCODE: $0000223E VOL: 0
;PCODE: $0000223F VOL: 0
;PCODE: $00002240 VOL: 0
;PCODE: $00002241 VOL: 0
;PCODE: $00002242 VOL: 0
;PCODE: $00002243 VOL: 0
;PCODE: $00002244 VOL: 0
;PCODE: $00002245 VOL: 0
;PCODE: $00002246 VOL: 0
;PCODE: $00002247 VOL: 0
;PCODE: $00002248 VOL: 0
;PCODE: $00002249 VOL: 0
;PCODE: $0000224A VOL: 0
;PCODE: $0000224B VOL: 0
;PCODE: $0000224C VOL: 0
;PCODE: $0000224D VOL: 0
;PCODE: $0000224E VOL: 0
; 0000 0CF1 if ((bit_canh_bao == 1) && (bit_coi == 1))
;PCODE: $0000224F VOL: 0
;PCODE: $00002250 VOL: 0
;PCODE: $00002251 VOL: 0
;PCODE: $00002252 VOL: 0
;PCODE: $00002253 VOL: 0
;PCODE: $00002254 VOL: 0
;PCODE: $00002255 VOL: 0
;PCODE: $00002256 VOL: 0
;PCODE: $00002257 VOL: 0
;PCODE: $00002258 VOL: 0
; 0000 0CF2 {
; 0000 0CF3 coi = 1;
;PCODE: $00002259 VOL: 0
;PCODE: $0000225A VOL: 0
; 0000 0CF4 // led_vang = 1;
; 0000 0CF5 }
; 0000 0CF6 else
;PCODE: $0000225B VOL: 0
;PCODE: $0000225C VOL: 0
; 0000 0CF7 {
; 0000 0CF8 coi = 0;
;PCODE: $0000225D VOL: 0
;PCODE: $0000225E VOL: 0
; 0000 0CF9 // led_vang = 0;
; 0000 0CFA }
;PCODE: $0000225F VOL: 0
; 0000 0CFB if (bit_temp | bit_humi | bit_ac1 | bit_ac2 | bit_dc1_cb2 | bit_dc2_cb2)
;PCODE: $00002260 VOL: 0
;PCODE: $00002261 VOL: 0
;PCODE: $00002262 VOL: 0
;PCODE: $00002263 VOL: 0
;PCODE: $00002264 VOL: 0
;PCODE: $00002265 VOL: 0
;PCODE: $00002266 VOL: 0
;PCODE: $00002267 VOL: 0
;PCODE: $00002268 VOL: 0
;PCODE: $00002269 VOL: 0
;PCODE: $0000226A VOL: 0
;PCODE: $0000226B VOL: 0
;PCODE: $0000226C VOL: 0
;PCODE: $0000226D VOL: 0
;PCODE: $0000226E VOL: 0
;PCODE: $0000226F VOL: 0
;PCODE: $00002270 VOL: 0
;PCODE: $00002271 VOL: 0
;PCODE: $00002272 VOL: 0
;PCODE: $00002273 VOL: 0
;PCODE: $00002274 VOL: 0
;PCODE: $00002275 VOL: 0
; 0000 0CFC {
; 0000 0CFD led_do = 1;
;PCODE: $00002276 VOL: 0
;PCODE: $00002277 VOL: 0
; 0000 0CFE }
; 0000 0CFF else
;PCODE: $00002278 VOL: 0
;PCODE: $00002279 VOL: 0
; 0000 0D00 {
; 0000 0D01 led_do = 0;
;PCODE: $0000227A VOL: 0
;PCODE: $0000227B VOL: 0
; 0000 0D02 }
;PCODE: $0000227C VOL: 0
; 0000 0D03 ////////////////////////////////////////////////////////////////
; 0000 0D04 if (bit_canh_bao == 1)
;PCODE: $0000227D VOL: 0
;PCODE: $0000227E VOL: 0
;PCODE: $0000227F VOL: 0
; 0000 0D05 {
; 0000 0D06 led_xanh = 0;
;PCODE: $00002280 VOL: 0
;PCODE: $00002281 VOL: 0
; 0000 0D07 }
; 0000 0D08 else
;PCODE: $00002282 VOL: 0
;PCODE: $00002283 VOL: 0
; 0000 0D09 {
; 0000 0D0A led_xanh = 1;
;PCODE: $00002284 VOL: 0
;PCODE: $00002285 VOL: 0
; 0000 0D0B }
;PCODE: $00002286 VOL: 0
; 0000 0D0C }
;PCODE: $00002287 VOL: 0
;PCODE: $00002288 VOL: 0
; 0000 0D0D }
;PCODE: $00002289 VOL: 0
;PCODE: $0000228A VOL: 0
;PCODE: $0000228B VOL: 0

	.DSEG
_0x281:
	.BYTE 0x1D
