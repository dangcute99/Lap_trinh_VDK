
;CodeVisionAVR C Compiler V3.40 Advanced
;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
;http://www.hpinfotech.ro

;Build configuration    : Debug
;Chip type              : ATmega128
;Program type           : Application
;Clock frequency        : 8.000000 MHz
;Memory model           : Small
;Optimize for           : Size
;(s)printf features     : int, width
;(s)scanf features      : int, width
;External RAM size      : 0
;Data Stack size        : 1024 byte(s)
;Heap size              : 0 byte(s)
;Promote 'char' to 'int': Yes
;'char' is unsigned     : Yes
;8 bit enums            : Yes
;Global 'const' stored in FLASH: Yes
;Enhanced function parameter passing: Mode 1
;Enhanced core instructions: On
;Automatic register allocation for global variables: On
;Smart register allocation: On

	#define _MODEL_SMALL_

	#pragma AVRPART ADMIN PART_NAME ATmega128
	#pragma AVRPART MEMORY PROG_FLASH 131072
	#pragma AVRPART MEMORY EEPROM 4096
	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU RAMPZ=0x3B
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU XMCRA=0x6D
	.EQU XMCRB=0x6C

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x10FF
	.EQU __DSTACK_SIZE=0x0400
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD2M
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	PUSH R26
	PUSH R27
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	POP  R27
	POP  R26
	ICALL
	.ENDM

	.MACRO __CALL2EX
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __EEPROMRDD
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z
	MOVW R30,R0
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETW1Z
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	CALL __GETD1Z
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETW2X
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __GETD2X
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _sdt_call1=R4
	.DEF _sdt_call1_msb=R5
	.DEF _sdt_call2=R6
	.DEF _sdt_call2_msb=R7
	.DEF _sdt_call3=R8
	.DEF _sdt_call3_msb=R9
	.DEF _sdt_call4=R10
	.DEF _sdt_call4_msb=R11
	.DEF _sdt_call5=R12
	.DEF _sdt_call5_msb=R13

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _ext_int7_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer1_ovf_isr
	JMP  _timer0_comp_isr
	JMP  _timer0_ovf_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_tbl10_G101:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G101:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

;REGISTER BIT VARIABLES INITIALIZATION
__REG_BIT_VARS:
	.DW  0x3011

_0x3:
	.DB  0x63,0x68,0x75,0x6E,0x67
_0x4:
	.DB  0x31,0x37,0x32,0x2E,0x32,0x30,0x2E,0x31
	.DB  0x30,0x2E,0x32,0x30
_0x5:
	.DB  0x30,0x39,0x34,0x32,0x34,0x36,0x37,0x36
	.DB  0x38,0x34
_0x6:
	.DB  0x30,0x39,0x34,0x32,0x34,0x36,0x37,0x36
	.DB  0x38,0x34
_0x7:
	.DB  0x50,0x68,0x6F,0x6E,0x67,0x20,0x4C,0x61
	.DB  0x62,0x20,0x54,0x54,0x42,0x44
_0x8:
	.DB  0xFF,0xFF
_0x9:
	.DB  0x1
_0xA:
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0
_0x0:
	.DB  0x6B,0x68,0x6F,0x69,0x20,0x74,0x61,0x6F
	.DB  0x20,0x73,0x69,0x6D,0x2E,0x2E,0x2E,0x0
	.DB  0x41,0x54,0x0,0x41,0x54,0x45,0x30,0x0
	.DB  0x41,0x54,0x2B,0x49,0x50,0x52,0x3D,0x39
	.DB  0x36,0x30,0x30,0x0,0x41,0x54,0x26,0x57
	.DB  0x0,0x41,0x54,0x58,0x34,0x0,0x41,0x54
	.DB  0x2B,0x43,0x53,0x43,0x53,0x3D,0x22,0x47
	.DB  0x53,0x4D,0x22,0x0,0x41,0x54,0x2B,0x43
	.DB  0x4D,0x47,0x46,0x3D,0x31,0x0,0x41,0x54
	.DB  0x2B,0x43,0x4E,0x4D,0x49,0x3D,0x32,0x2C
	.DB  0x31,0x2C,0x30,0x2C,0x30,0x2C,0x30,0x0
	.DB  0x41,0x54,0x2B,0x43,0x53,0x41,0x53,0x0
	.DB  0x41,0x54,0x2B,0x43,0x4E,0x4D,0x49,0x3D
	.DB  0x32,0x2C,0x32,0x0,0x41,0x54,0x44,0x3B
	.DB  0x25,0x73,0x25,0x63,0x25,0x63,0x0,0x41
	.DB  0x54,0x2B,0x43,0x4D,0x47,0x53,0x3D,0x25
	.DB  0x63,0x25,0x73,0x25,0x63,0x25,0x63,0x25
	.DB  0x63,0x0,0x25,0x73,0x20,0x25,0x63,0x25
	.DB  0x63,0x0,0x63,0x68,0x75,0x6E,0x67,0x0
	.DB  0x44,0x43,0x31,0x3A,0x25,0x32,0x64,0x25
	.DB  0x63,0x25,0x64,0x76,0x20,0x20,0x20,0x25
	.DB  0x31,0x64,0x25,0x31,0x64,0x3A,0x25,0x31
	.DB  0x64,0x25,0x31,0x64,0x3A,0x25,0x31,0x64
	.DB  0x25,0x31,0x64,0x0,0x44,0x43,0x32,0x3A
	.DB  0x25,0x32,0x64,0x25,0x63,0x25,0x64,0x76
	.DB  0x20,0x20,0x20,0x25,0x31,0x64,0x25,0x31
	.DB  0x64,0x2F,0x25,0x31,0x64,0x25,0x31,0x64
	.DB  0x2F,0x25,0x32,0x64,0x0,0x4F,0x46,0x46
	.DB  0x0,0x4F,0x4E,0x0,0x48,0x75,0x6D,0x69
	.DB  0x3A,0x25,0x32,0x64,0x25,0x63,0x25,0x64
	.DB  0x25,0x25,0x20,0x20,0x20,0x41,0x43,0x31
	.DB  0x3A,0x25,0x33,0x73,0x0,0x54,0x65,0x6D
	.DB  0x70,0x3A,0x25,0x32,0x64,0x25,0x63,0x25
	.DB  0x64,0x25,0x63,0x43,0x20,0x20,0x41,0x43
	.DB  0x32,0x3A,0x25,0x33,0x73,0x0,0x4D,0x6F
	.DB  0x64,0x65,0x0,0x74,0x69,0x6D,0x65,0x3A
	.DB  0x20,0x20,0x20,0x20,0x25,0x31,0x64,0x25
	.DB  0x31,0x64,0x3A,0x25,0x31,0x64,0x25,0x31
	.DB  0x64,0x0,0x64,0x61,0x74,0x65,0x3A,0x20
	.DB  0x20,0x20,0x20,0x25,0x31,0x64,0x25,0x31
	.DB  0x64,0x2F,0x25,0x31,0x64,0x25,0x31,0x64
	.DB  0x2F,0x25,0x32,0x64,0x0,0x68,0x75,0x6D
	.DB  0x69,0x3A,0x20,0x25,0x31,0x64,0x25,0x31
	.DB  0x64,0x20,0x74,0x6F,0x20,0x25,0x31,0x64
	.DB  0x25,0x31,0x64,0x25,0x25,0x0,0x74,0x65
	.DB  0x6D,0x70,0x3A,0x20,0x25,0x31,0x64,0x25
	.DB  0x31,0x64,0x20,0x74,0x6F,0x20,0x25,0x31
	.DB  0x64,0x25,0x31,0x64,0x25,0x63,0x43,0x0
	.DB  0x21,0x76,0x75,0x69,0x20,0x6C,0x6F,0x6E
	.DB  0x67,0x20,0x6E,0x68,0x61,0x70,0x20,0x6C
	.DB  0x61,0x69,0x20,0x67,0x69,0x6F,0x21,0x0
	.DB  0x6C,0x75,0x75,0x20,0x74,0x68,0x61,0x6E
	.DB  0x68,0x20,0x63,0x6F,0x6E,0x67,0x21,0x0
	.DB  0x6E,0x68,0x61,0x70,0x20,0x6C,0x61,0x69
	.DB  0x20,0x6E,0x67,0x61,0x79,0x20,0x74,0x68
	.DB  0x61,0x6E,0x67,0x21,0x0,0x25,0x73,0x2C
	.DB  0x64,0x6F,0x61,0x6D,0x5F,0x6C,0x6F,0x77
	.DB  0x2C,0x25,0x64,0x20,0x25,0x63,0x25,0x63
	.DB  0x25,0x63,0x0,0x25,0x73,0x2C,0x64,0x6F
	.DB  0x61,0x6D,0x5F,0x68,0x69,0x67,0x68,0x2C
	.DB  0x25,0x64,0x20,0x25,0x63,0x25,0x63,0x25
	.DB  0x63,0x0,0x21,0x21,0x6E,0x68,0x61,0x70
	.DB  0x20,0x6C,0x61,0x69,0x20,0x6E,0x67,0x75
	.DB  0x6F,0x6E,0x67,0x21,0x21,0x0,0x25,0x73
	.DB  0x2C,0x6E,0x68,0x69,0x65,0x74,0x64,0x6F
	.DB  0x5F,0x6C,0x6F,0x77,0x65,0x72,0x2C,0x25
	.DB  0x64,0x20,0x25,0x63,0x25,0x63,0x25,0x63
	.DB  0x0,0x25,0x73,0x2C,0x6E,0x68,0x69,0x65
	.DB  0x74,0x64,0x6F,0x5F,0x68,0x69,0x67,0x68
	.DB  0x2C,0x25,0x64,0x20,0x25,0x63,0x25,0x63
	.DB  0x25,0x63,0x0,0x73,0x65,0x74,0x44,0x43
	.DB  0x0,0x43,0x61,0x69,0x20,0x64,0x61,0x74
	.DB  0x20,0x6D,0x75,0x63,0x20,0x44,0x43,0x0
	.DB  0x44,0x43,0x5F,0x6C,0x6F,0x77,0x5F,0x31
	.DB  0x3A,0x20,0x25,0x31,0x64,0x25,0x31,0x64
	.DB  0x2C,0x25,0x31,0x64,0x0,0x44,0x43,0x5F
	.DB  0x6C,0x6F,0x77,0x5F,0x32,0x3A,0x20,0x25
	.DB  0x31,0x64,0x25,0x31,0x64,0x2C,0x25,0x31
	.DB  0x64,0x0,0x44,0x43,0x5F,0x68,0x69,0x67
	.DB  0x68,0x20,0x3A,0x20,0x25,0x31,0x64,0x25
	.DB  0x31,0x64,0x2C,0x25,0x31,0x64,0x0,0x25
	.DB  0x73,0x2C,0x64,0x69,0x65,0x6E,0x61,0x70
	.DB  0x5F,0x6C,0x6F,0x77,0x2C,0x25,0x64,0x2E
	.DB  0x25,0x64,0x0,0x44,0x61,0x20,0x6C,0x75
	.DB  0x75,0x20,0x6E,0x67,0x75,0x6F,0x6E,0x67
	.DB  0x0,0x44,0x43,0x5F,0x6C,0x6F,0x77,0x5F
	.DB  0x31,0x3A,0x25,0x64,0x2C,0x25,0x64,0x56
	.DB  0x0,0x4B,0x69,0x65,0x6D,0x20,0x74,0x72
	.DB  0x61,0x20,0x6C,0x61,0x69,0x20,0x6D,0x75
	.DB  0x63,0x20,0x44,0x43,0x5F,0x6C,0x6F,0x77
	.DB  0x5F,0x31,0x21,0x0,0x25,0x73,0x2C,0x64
	.DB  0x69,0x65,0x6E,0x61,0x70,0x5F,0x6C,0x6F
	.DB  0x77,0x31,0x2C,0x25,0x64,0x2E,0x25,0x64
	.DB  0x0,0x44,0x63,0x5F,0x6C,0x6F,0x77,0x5F
	.DB  0x32,0x3A,0x25,0x64,0x2C,0x25,0x64,0x56
	.DB  0x0,0x4B,0x69,0x65,0x6D,0x20,0x74,0x72
	.DB  0x61,0x20,0x6C,0x61,0x69,0x20,0x6D,0x75
	.DB  0x63,0x20,0x44,0x63,0x5F,0x6C,0x6F,0x77
	.DB  0x5F,0x32,0x21,0x0,0x25,0x73,0x2C,0x64
	.DB  0x69,0x65,0x6E,0x61,0x70,0x5F,0x68,0x69
	.DB  0x67,0x68,0x2C,0x25,0x64,0x2E,0x25,0x64
	.DB  0x0,0x44,0x63,0x5F,0x68,0x69,0x67,0x68
	.DB  0x3A,0x25,0x64,0x2C,0x25,0x64,0x56,0x0
	.DB  0x4B,0x69,0x65,0x6D,0x20,0x74,0x72,0x61
	.DB  0x20,0x6C,0x61,0x69,0x20,0x6D,0x75,0x63
	.DB  0x20,0x44,0x63,0x5F,0x68,0x69,0x67,0x68
	.DB  0x21,0x0,0x73,0x64,0x74,0x0,0x43,0x61
	.DB  0x69,0x20,0x64,0x61,0x74,0x20,0x53,0x44
	.DB  0x54,0x20,0x63,0x61,0x6E,0x68,0x20,0x62
	.DB  0x61,0x6F,0x0,0x25,0x73,0x0,0x53,0x6D
	.DB  0x73,0x20,0x3A,0x20,0x30,0x25,0x31,0x64
	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
	.DB  0x0,0x64,0x61,0x20,0x6C,0x75,0x75,0x20
	.DB  0x73,0x64,0x74,0x20,0x73,0x6D,0x73,0x3A
	.DB  0x0,0x6B,0x69,0x65,0x6D,0x20,0x74,0x72
	.DB  0x61,0x20,0x6C,0x61,0x69,0x20,0x53,0x44
	.DB  0x54,0x21,0x0,0x25,0x73,0x2C,0x68,0x75
	.DB  0x6D,0x69,0x64,0x69,0x74,0x79,0x2C,0x25
	.DB  0x64,0x2E,0x25,0x64,0x0,0x64,0x6F,0x20
	.DB  0x61,0x6D,0x20,0x74,0x72,0x61,0x6D,0x20
	.DB  0x25,0x73,0x20,0x68,0x69,0x65,0x6E,0x20
	.DB  0x74,0x61,0x69,0x20,0x6C,0x61,0x20,0x25
	.DB  0x64,0x2C,0x25,0x64,0x20,0x64,0x61,0x20
	.DB  0x76,0x65,0x20,0x6E,0x67,0x75,0x6F,0x6E
	.DB  0x67,0x20,0x62,0x69,0x6E,0x68,0x20,0x74
	.DB  0x68,0x75,0x6F,0x6E,0x67,0x20,0x20,0x0
	.DB  0x64,0x6F,0x20,0x61,0x6D,0x20,0x74,0x72
	.DB  0x61,0x6D,0x20,0x25,0x73,0x20,0x68,0x69
	.DB  0x65,0x6E,0x20,0x74,0x61,0x69,0x20,0x6C
	.DB  0x61,0x20,0x25,0x64,0x2C,0x25,0x64,0x20
	.DB  0x6F,0x20,0x64,0x75,0x6F,0x69,0x20,0x6E
	.DB  0x67,0x75,0x6F,0x6E,0x67,0x20,0x20,0x0
	.DB  0x64,0x6F,0x20,0x61,0x6D,0x20,0x74,0x72
	.DB  0x61,0x6D,0x20,0x25,0x73,0x20,0x68,0x69
	.DB  0x65,0x6E,0x20,0x74,0x61,0x69,0x20,0x6C
	.DB  0x61,0x20,0x25,0x64,0x2C,0x25,0x64,0x20
	.DB  0x6F,0x20,0x74,0x72,0x65,0x6E,0x20,0x6E
	.DB  0x67,0x75,0x6F,0x6E,0x67,0x20,0x20,0x0
	.DB  0x25,0x73,0x2C,0x74,0x65,0x6D,0x70,0x65
	.DB  0x72,0x61,0x74,0x75,0x72,0x65,0x2C,0x25
	.DB  0x64,0x2E,0x25,0x64,0x0,0x6E,0x68,0x69
	.DB  0x65,0x74,0x20,0x64,0x6F,0x20,0x74,0x72
	.DB  0x61,0x6D,0x20,0x25,0x73,0x20,0x68,0x69
	.DB  0x65,0x6E,0x20,0x74,0x61,0x69,0x20,0x6C
	.DB  0x61,0x20,0x25,0x64,0x2C,0x25,0x64,0x20
	.DB  0x64,0x61,0x20,0x74,0x72,0x6F,0x20,0x76
	.DB  0x65,0x20,0x6E,0x67,0x75,0x6F,0x6E,0x67
	.DB  0x20,0x62,0x69,0x6E,0x68,0x20,0x74,0x68
	.DB  0x75,0x6F,0x6E,0x67,0x20,0x20,0x0,0x6E
	.DB  0x68,0x69,0x65,0x74,0x20,0x64,0x6F,0x20
	.DB  0x74,0x72,0x61,0x6D,0x20,0x25,0x73,0x20
	.DB  0x68,0x69,0x65,0x6E,0x20,0x74,0x61,0x69
	.DB  0x20,0x6C,0x61,0x20,0x25,0x64,0x2C,0x25
	.DB  0x64,0x20,0x6F,0x20,0x64,0x75,0x6F,0x69
	.DB  0x20,0x20,0x6E,0x67,0x75,0x6F,0x6E,0x67
	.DB  0x20,0x20,0x0,0x6E,0x68,0x69,0x65,0x74
	.DB  0x20,0x64,0x6F,0x20,0x74,0x72,0x61,0x6D
	.DB  0x20,0x25,0x73,0x20,0x68,0x69,0x65,0x6E
	.DB  0x20,0x74,0x61,0x69,0x20,0x6C,0x61,0x20
	.DB  0x25,0x64,0x2C,0x25,0x64,0x20,0x6F,0x20
	.DB  0x74,0x72,0x65,0x6E,0x20,0x20,0x6E,0x67
	.DB  0x75,0x6F,0x6E,0x67,0x20,0x20,0x0,0x25
	.DB  0x73,0x2C,0x6C,0x69,0x67,0x68,0x74,0x2C
	.DB  0x32,0x0,0x6D,0x61,0x74,0x20,0x61,0x6E
	.DB  0x68,0x20,0x73,0x61,0x6E,0x67,0x20,0x0
	.DB  0x25,0x73,0x2C,0x6C,0x69,0x67,0x68,0x74
	.DB  0x2C,0x31,0x0,0x63,0x6F,0x20,0x61,0x6E
	.DB  0x68,0x20,0x73,0x61,0x6E,0x67,0x20,0x0
	.DB  0x25,0x73,0x2C,0x76,0x6F,0x6C,0x74,0x61
	.DB  0x67,0x65,0x5F,0x61,0x63,0x2C,0x31,0x0
	.DB  0x63,0x61,0x6E,0x68,0x20,0x62,0x61,0x6F
	.DB  0x20,0x6D,0x61,0x74,0x20,0x64,0x69,0x65
	.DB  0x6E,0x20,0x61,0x70,0x20,0x41,0x43,0x31
	.DB  0x20,0x74,0x61,0x69,0x20,0x74,0x72,0x61
	.DB  0x6D,0x20,0x25,0x73,0x0,0x25,0x73,0x2C
	.DB  0x76,0x6F,0x6C,0x74,0x61,0x67,0x65,0x5F
	.DB  0x61,0x63,0x2C,0x32,0x32,0x30,0x0,0x64
	.DB  0x61,0x20,0x63,0x6F,0x20,0x64,0x69,0x65
	.DB  0x6E,0x20,0x61,0x70,0x20,0x41,0x43,0x31
	.DB  0x20,0x74,0x61,0x69,0x20,0x74,0x72,0x61
	.DB  0x6D,0x20,0x25,0x73,0x0,0x25,0x73,0x2C
	.DB  0x76,0x6F,0x6C,0x74,0x61,0x67,0x65,0x5F
	.DB  0x61,0x63,0x32,0x2C,0x31,0x0,0x43,0x61
	.DB  0x6E,0x68,0x20,0x62,0x61,0x6F,0x20,0x6D
	.DB  0x61,0x74,0x20,0x64,0x69,0x65,0x6E,0x20
	.DB  0x61,0x70,0x20,0x41,0x43,0x32,0x20,0x74
	.DB  0x61,0x69,0x20,0x74,0x72,0x61,0x6D,0x20
	.DB  0x25,0x73,0x0,0x25,0x73,0x2C,0x76,0x6F
	.DB  0x6C,0x74,0x61,0x67,0x65,0x5F,0x61,0x63
	.DB  0x32,0x2C,0x32,0x32,0x30,0x0,0x44,0x61
	.DB  0x20,0x63,0x6F,0x20,0x64,0x69,0x65,0x6E
	.DB  0x20,0x61,0x70,0x20,0x41,0x43,0x32,0x20
	.DB  0x74,0x61,0x69,0x20,0x74,0x72,0x61,0x6D
	.DB  0x20,0x25,0x73,0x0,0x74,0x72,0x75,0x79
	.DB  0x65,0x6E,0x20,0x65,0x6E,0x74,0x68,0x65
	.DB  0x72,0x6E,0x65,0x74,0x0,0x25,0x73,0x2C
	.DB  0x76,0x6F,0x6C,0x74,0x61,0x67,0x65,0x5F
	.DB  0x64,0x63,0x31,0x2C,0x25,0x64,0x2E,0x25
	.DB  0x64,0x0,0x25,0x73,0x2C,0x76,0x6F,0x6C
	.DB  0x74,0x61,0x67,0x65,0x5F,0x64,0x63,0x32
	.DB  0x2C,0x25,0x64,0x2E,0x25,0x64,0x0,0x74
	.DB  0x72,0x75,0x79,0x65,0x6E,0x20,0x78,0x6F
	.DB  0x6E,0x67,0x0,0x44,0x69,0x65,0x6E,0x20
	.DB  0x61,0x70,0x20,0x44,0x43,0x31,0x20,0x68
	.DB  0x69,0x65,0x6E,0x20,0x74,0x61,0x69,0x20
	.DB  0x6F,0x20,0x74,0x72,0x61,0x6D,0x20,0x25
	.DB  0x73,0x20,0x6C,0x61,0x20,0x25,0x64,0x2C
	.DB  0x25,0x64,0x56,0x20,0x74,0x68,0x61,0x70
	.DB  0x20,0x68,0x6F,0x6E,0x20,0x6D,0x75,0x63
	.DB  0x20,0x25,0x64,0x2C,0x25,0x64,0x56,0x0
	.DB  0x44,0x69,0x65,0x6E,0x20,0x61,0x70,0x20
	.DB  0x44,0x43,0x31,0x20,0x68,0x69,0x65,0x6E
	.DB  0x20,0x74,0x61,0x69,0x20,0x6F,0x20,0x74
	.DB  0x72,0x61,0x6D,0x20,0x25,0x73,0x20,0x6C
	.DB  0x61,0x20,0x25,0x64,0x2C,0x25,0x64,0x56
	.DB  0x20,0x6E,0x61,0x6D,0x20,0x74,0x72,0x6F
	.DB  0x6E,0x67,0x20,0x63,0x61,0x6E,0x68,0x20
	.DB  0x62,0x61,0x6F,0x20,0x6D,0x75,0x63,0x20
	.DB  0x31,0x20,0x74,0x75,0x20,0x25,0x64,0x2C
	.DB  0x25,0x64,0x56,0x20,0x64,0x65,0x6E,0x20
	.DB  0x25,0x64,0x2C,0x25,0x64,0x56,0x20,0x0
	.DB  0x44,0x69,0x65,0x6E,0x20,0x61,0x70,0x20
	.DB  0x44,0x43,0x31,0x20,0x68,0x69,0x65,0x6E
	.DB  0x20,0x74,0x61,0x69,0x20,0x6F,0x20,0x74
	.DB  0x72,0x61,0x6D,0x20,0x25,0x73,0x20,0x6C
	.DB  0x61,0x20,0x25,0x64,0x2C,0x25,0x64,0x56
	.DB  0x20,0x64,0x61,0x20,0x76,0x65,0x20,0x6D
	.DB  0x75,0x63,0x20,0x62,0x69,0x6E,0x68,0x20
	.DB  0x74,0x68,0x75,0x6F,0x6E,0x67,0x20,0x74
	.DB  0x75,0x20,0x20,0x25,0x64,0x2C,0x25,0x64
	.DB  0x56,0x20,0x64,0x65,0x6E,0x20,0x25,0x64
	.DB  0x2C,0x25,0x64,0x56,0x0,0x44,0x69,0x65
	.DB  0x6E,0x20,0x61,0x70,0x20,0x44,0x43,0x31
	.DB  0x20,0x68,0x69,0x65,0x6E,0x20,0x74,0x61
	.DB  0x69,0x20,0x6F,0x20,0x74,0x72,0x61,0x6D
	.DB  0x20,0x25,0x73,0x20,0x6C,0x61,0x20,0x25
	.DB  0x64,0x2C,0x25,0x64,0x56,0x20,0x63,0x61
	.DB  0x6F,0x20,0x68,0x6F,0x6E,0x20,0x6D,0x75
	.DB  0x63,0x20,0x25,0x64,0x2C,0x25,0x64,0x56
	.DB  0x0,0x44,0x69,0x65,0x6E,0x20,0x61,0x70
	.DB  0x20,0x44,0x43,0x32,0x20,0x68,0x69,0x65
	.DB  0x6E,0x20,0x74,0x61,0x69,0x20,0x6F,0x20
	.DB  0x74,0x72,0x61,0x6D,0x20,0x25,0x73,0x20
	.DB  0x6C,0x61,0x20,0x25,0x64,0x2C,0x25,0x64
	.DB  0x56,0x20,0x74,0x68,0x61,0x70,0x20,0x68
	.DB  0x6F,0x6E,0x20,0x6D,0x75,0x63,0x20,0x25
	.DB  0x64,0x2C,0x25,0x64,0x56,0x0,0x44,0x69
	.DB  0x65,0x6E,0x20,0x61,0x70,0x20,0x44,0x43
	.DB  0x32,0x20,0x68,0x69,0x65,0x6E,0x20,0x74
	.DB  0x61,0x69,0x20,0x6F,0x20,0x74,0x72,0x61
	.DB  0x6D,0x20,0x25,0x73,0x20,0x6C,0x61,0x20
	.DB  0x25,0x64,0x2C,0x25,0x64,0x56,0x20,0x6E
	.DB  0x61,0x6D,0x20,0x74,0x72,0x6F,0x6E,0x67
	.DB  0x20,0x63,0x61,0x6E,0x68,0x20,0x62,0x61
	.DB  0x6F,0x20,0x6D,0x75,0x63,0x20,0x31,0x20
	.DB  0x74,0x75,0x20,0x25,0x64,0x2C,0x25,0x64
	.DB  0x56,0x20,0x64,0x65,0x6E,0x20,0x25,0x64
	.DB  0x2C,0x25,0x64,0x56,0x20,0x0,0x44,0x69
	.DB  0x65,0x6E,0x20,0x61,0x70,0x20,0x44,0x43
	.DB  0x32,0x20,0x68,0x69,0x65,0x6E,0x20,0x74
	.DB  0x61,0x69,0x20,0x6F,0x20,0x74,0x72,0x61
	.DB  0x6D,0x20,0x25,0x73,0x20,0x6C,0x61,0x20
	.DB  0x25,0x64,0x2C,0x25,0x64,0x56,0x20,0x64
	.DB  0x61,0x20,0x76,0x65,0x20,0x6D,0x75,0x63
	.DB  0x20,0x62,0x69,0x6E,0x68,0x20,0x74,0x68
	.DB  0x75,0x6F,0x6E,0x67,0x20,0x74,0x75,0x20
	.DB  0x20,0x25,0x64,0x2C,0x25,0x64,0x56,0x20
	.DB  0x64,0x65,0x6E,0x20,0x25,0x64,0x2C,0x25
	.DB  0x64,0x56,0x0,0x44,0x69,0x65,0x6E,0x20
	.DB  0x61,0x70,0x20,0x44,0x43,0x32,0x20,0x68
	.DB  0x69,0x65,0x6E,0x20,0x74,0x61,0x69,0x20
	.DB  0x6F,0x20,0x74,0x72,0x61,0x6D,0x20,0x25
	.DB  0x73,0x20,0x6C,0x61,0x20,0x25,0x64,0x2C
	.DB  0x25,0x64,0x56,0x20,0x63,0x61,0x6F,0x20
	.DB  0x68,0x6F,0x6E,0x20,0x6D,0x75,0x63,0x20
	.DB  0x25,0x64,0x2C,0x25,0x64,0x56,0x0
_0x2060003:
	.DB  0x80,0xC0

__GLOBAL_INI_TBL:
	.DW  0x02
	.DW  0x02
	.DW  __REG_BIT_VARS*2

	.DW  0x05
	.DW  _hienthi
	.DW  _0x3*2

	.DW  0x0C
	.DW  _IP
	.DW  _0x4*2

	.DW  0x0A
	.DW  _sdt_sms
	.DW  _0x5*2

	.DW  0x0A
	.DW  _sdt_call
	.DW  _0x6*2

	.DW  0x0E
	.DW  _tram
	.DW  _0x7*2

	.DW  0x02
	.DW  _hang
	.DW  _0x8*2

	.DW  0x01
	.DW  _cot
	.DW  _0x9*2

	.DW  0x10
	.DW  _0x42
	.DW  _0x0*2

	.DW  0x03
	.DW  _0x42+16
	.DW  _0x0*2+16

	.DW  0x05
	.DW  _0x42+19
	.DW  _0x0*2+19

	.DW  0x0C
	.DW  _0x42+24
	.DW  _0x0*2+24

	.DW  0x05
	.DW  _0x42+36
	.DW  _0x0*2+36

	.DW  0x05
	.DW  _0x42+41
	.DW  _0x0*2+41

	.DW  0x05
	.DW  _0x42+46
	.DW  _0x0*2+36

	.DW  0x0E
	.DW  _0x42+51
	.DW  _0x0*2+46

	.DW  0x0A
	.DW  _0x42+65
	.DW  _0x0*2+60

	.DW  0x12
	.DW  _0x42+75
	.DW  _0x0*2+70

	.DW  0x08
	.DW  _0x42+93
	.DW  _0x0*2+88

	.DW  0x0C
	.DW  _0x42+101
	.DW  _0x0*2+96

	.DW  0x06
	.DW  _0x4F
	.DW  _0x0*2+146

	.DW  0x04
	.DW  _0x4F+6
	.DW  _0x0*2+221

	.DW  0x03
	.DW  _0x4F+10
	.DW  _0x0*2+225

	.DW  0x04
	.DW  _0x4F+13
	.DW  _0x0*2+221

	.DW  0x03
	.DW  _0x4F+17
	.DW  _0x0*2+225

	.DW  0x05
	.DW  _0x4F+20
	.DW  _0x0*2+278

	.DW  0x18
	.DW  _0x4F+25
	.DW  _0x0*2+384

	.DW  0x10
	.DW  _0x4F+49
	.DW  _0x0*2+408

	.DW  0x15
	.DW  _0x4F+65
	.DW  _0x0*2+424

	.DW  0x10
	.DW  _0x4F+86
	.DW  _0x0*2+408

	.DW  0x10
	.DW  _0x4F+102
	.DW  _0x0*2+408

	.DW  0x10
	.DW  _0x4F+118
	.DW  _0x0*2+408

	.DW  0x06
	.DW  _0x4F+134
	.DW  _0x0*2+563

	.DW  0x1B
	.DW  _0x4F+140
	.DW  _0x0*2+697

	.DW  0x1B
	.DW  _0x4F+167
	.DW  _0x0*2+761

	.DW  0x1A
	.DW  _0x4F+194
	.DW  _0x0*2+824

	.DW  0x04
	.DW  _0x4F+220
	.DW  _0x0*2+850

	.DW  0x12
	.DW  _0x4F+224
	.DW  _0x0*2+929

	.DW  0x05
	.DW  _0x4F+242
	.DW  _0x0*2+278

	.DW  0x06
	.DW  _0x4F+247
	.DW  _0x0*2+563

	.DW  0x04
	.DW  _0x4F+253
	.DW  _0x0*2+850

	.DW  0x06
	.DW  _0x4F+257
	.DW  _0x0*2+146

	.DW  0x04
	.DW  _0x4F+263
	.DW  _0x0*2+850

	.DW  0x05
	.DW  _0x4F+267
	.DW  _0x0*2+278

	.DW  0x06
	.DW  _0x4F+272
	.DW  _0x0*2+563

	.DW  0x11
	.DW  _0x281
	.DW  _0x0*2+1564

	.DW  0x0C
	.DW  _0x281+17
	.DW  _0x0*2+1623

	.DW  0x02
	.DW  __base_y_G103
	.DW  _0x2060003*2

_0xFFFFFFFF:
	.DW  0

#define __GLOBAL_INI_TBL_PRESENT 1

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30
	STS  XMCRB,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

	OUT  RAMPZ,R24

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0x00

	.DSEG
	.ORG 0x500

	.CSEG
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;char hienthi[] = "chung";

	.DSEG
;char lcd[20];
;char enthernet[100];
;char AC1[4];
;char IP[20] = "172.20.10.20";
;char sdt_sms[11] = "0942467684";
;char sdt_call[11] = "0942467684";
;int sdt_call1, sdt_call2, sdt_call3, sdt_call4, sdt_call5, sdt_call6, sdt_call7, ...
;int sdt_sms1, sdt_sms2, sdt_sms3, sdt_sms4, sdt_sms5, sdt_sms6, sdt_sms7, sdt_sm ...
;char tram[] = "Phong Lab TTBD";
;char sim[100];
;char sms[100];
;int i, hang = -1;
;int cot = 1;
;unsigned int DC1;
;unsigned int DC2;
;int dc11, dc12;
;int dht = 0;
;int dc21, dc22;
;int dc_low_1 = 0, dc_low_2 = 0, dc_high = 0;
;int dc_low_11 = 0, dc_low_21 = 0, dc_high1 = 0;
;unsigned char hour, min, sec, day, month, year, week_day;
;unsigned int h11 = 0, h12 = 0, hour1, m11 = 0, m12 = 0, min1, d1, d2, day1 = 0,  ...
;bit bit_phim = 1;
;bit bit_temp, bit_humi;
;bit bit_canh_bao = 0;
;bit bit_coi = 1;
;bit bit_ac1, bit_ac2;
;bit bit_as;
;bit bit_dc1_cb1 = 0, bit_dc1_cb2 = 0;
;bit bit_dc2_cb1 = 0, bit_dc2_cb2 = 0;
;bit bit_enthernet = 1;
;bit dht_bit = 1;
;int doam1, doam2, nhietdo1, nhietdo2;
;int doam11, doam22, nhietdo11, nhietdo22;
;int dht_nhiet_do, dht_do_am;
;int DHT22_getdata(int *tem, int *humi)
; 0000 005C {

	.CSEG
_DHT22_getdata:
; .FSTART _DHT22_getdata
; 0000 005D 
; 0000 005E int buffer[5] = {0, 0, 0, 0, 0};
; 0000 005F int ii, i, checksum;
; 0000 0060 // request data
; 0000 0061 
; 0000 0062 DDRF = (1 << DDF6);
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,10
	LDI  R24,10
	LDI  R26,LOW(0)
	LDI  R27,HIGH(0)
	LDI  R30,LOW(_0xA*2)
	LDI  R31,HIGH(_0xA*2)
	CALL __INITLOCB
	CALL __SAVELOCR6
;	*tem -> Y+18
;	*humi -> Y+16
;	buffer -> Y+6
;	ii -> R16,R17
;	i -> R18,R19
;	checksum -> R20,R21
	LDI  R30,LOW(64)
	STS  97,R30
; 0000 0063 PORTF = (1 << PORTF6);
	STS  98,R30
; 0000 0064 delay_us(50);
	CALL SUBOPT_0x0
; 0000 0065 PORTF = (0 << PORTF6);
	STS  98,R30
; 0000 0066 delay_ms(25);
	CALL SUBOPT_0x1
; 0000 0067 PORTF = (1 << PORTF6);
	LDI  R30,LOW(64)
	STS  98,R30
; 0000 0068 DDRF = (0 << DDF6);
	LDI  R30,LOW(0)
	STS  97,R30
; 0000 0069 // response
; 0000 006A dht = 0;
	CALL SUBOPT_0x2
; 0000 006B while (PINF .6 == 1)
_0xB:
	SBIS 0x0,6
	RJMP _0xD
; 0000 006C {
; 0000 006D if (dht > 40)
	CALL SUBOPT_0x3
	BRLT _0xE
; 0000 006E {
; 0000 006F PORTB .6 = 1;
	SBI  0x18,6
; 0000 0070 dht_bit = 0;
	CLT
	BLD  R3,5
; 0000 0071 break;
	RJMP _0xD
; 0000 0072 }
; 0000 0073 }
_0xE:
	RJMP _0xB
_0xD:
; 0000 0074 while (PINF .6 == 0)
_0x11:
	SBIC 0x0,6
	RJMP _0x13
; 0000 0075 if (dht_bit == 0)
	SBRS R3,5
; 0000 0076 break;
	RJMP _0x13
; 0000 0077 dht = 0;
	RJMP _0x11
_0x13:
	CALL SUBOPT_0x2
; 0000 0078 while (PINF .6 == 1)
_0x15:
	SBIS 0x0,6
	RJMP _0x17
; 0000 0079 
; 0000 007A if (dht > 40)
	CALL SUBOPT_0x3
	BRLT _0x18
; 0000 007B {
; 0000 007C dht_bit = 0;
	CLT
	BLD  R3,5
; 0000 007D break;
	RJMP _0x17
; 0000 007E }
; 0000 007F while (PINF .6 == 0)
_0x18:
	RJMP _0x15
_0x17:
_0x19:
	SBIC 0x0,6
	RJMP _0x1B
; 0000 0080 if (dht_bit == 0)
	SBRS R3,5
; 0000 0081 break;
	RJMP _0x1B
; 0000 0082 
; 0000 0083 // received data
; 0000 0084 if (dht_bit == 1)
	RJMP _0x19
_0x1B:
	SBRS R3,5
	RJMP _0x1D
; 0000 0085 {
; 0000 0086 for (i = 0; i < 5; i++)
	__GETWRN 18,19,0
_0x1F:
	__CPWRN 18,19,5
	BRGE _0x20
; 0000 0087 {
; 0000 0088 for (ii = 0; ii < 8; ii++)
	__GETWRN 16,17,0
_0x22:
	__CPWRN 16,17,8
	BRGE _0x23
; 0000 0089 {
; 0000 008A while (PINF .6 == 0)
_0x24:
	SBIS 0x0,6
; 0000 008B ; // doi data len 1
	RJMP _0x24
; 0000 008C delay_us(50);
	__DELAY_USB 133
; 0000 008D if (PINF .6 == 1)
	SBIS 0x0,6
	RJMP _0x27
; 0000 008E buffer[i] = (buffer[i] << 1) | (0x01);
	CALL SUBOPT_0x4
	ADD  R30,R26
	ADC  R31,R27
	MOVW R0,R30
	CALL SUBOPT_0x4
	ADD  R26,R30
	ADC  R27,R31
	CALL __GETW1P
	LSL  R30
	ROL  R31
	ORI  R30,1
	RJMP _0x2B6
; 0000 008F else
_0x27:
; 0000 0090 buffer[i] = (buffer[i] << 1);
	CALL SUBOPT_0x4
	ADD  R30,R26
	ADC  R31,R27
	MOVW R0,R30
	CALL SUBOPT_0x4
	ADD  R26,R30
	ADC  R27,R31
	LD   R30,X+
	LD   R31,X+
	LSL  R30
	ROL  R31
_0x2B6:
	MOVW R26,R0
	ST   X+,R30
	ST   X,R31
; 0000 0091 dht = 0;
	CALL SUBOPT_0x2
; 0000 0092 while (PINF .6 == 1)
_0x29:
	SBIS 0x0,6
	RJMP _0x2B
; 0000 0093 
; 0000 0094 if (dht > 40)
	CALL SUBOPT_0x3
	BRLT _0x29
; 0000 0095 break;
; 0000 0096 // doi data xuong 0
; 0000 0097 }
_0x2B:
	__ADDWRN 16,17,1
	RJMP _0x22
_0x23:
; 0000 0098 }
	__ADDWRN 18,19,1
	RJMP _0x1F
_0x20:
; 0000 0099 // check sum
; 0000 009A checksum = buffer[0] + buffer[1] + buffer[2] + buffer[3];
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	ADD  R30,R26
	ADC  R31,R27
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	ADD  R30,R26
	ADC  R31,R27
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	ADD  R30,R26
	ADC  R31,R27
	MOVW R20,R30
; 0000 009B // kiem tra
; 0000 009C if ((checksum) != buffer[4])
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	CP   R30,R20
	CPC  R31,R21
	BREQ _0x2D
; 0000 009D return 0;
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	RJMP _0x20C0006
; 0000 009E // lay du lieu
; 0000 009F *tem = buffer[2] * 256 + buffer[3];
_0x2D:
	LDD  R31,Y+10
	LDI  R30,LOW(0)
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	ADD  R30,R26
	ADC  R31,R27
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ST   X+,R30
	ST   X,R31
; 0000 00A0 *humi = buffer[0] * 256 + buffer[1];
	LDD  R31,Y+6
	LDI  R30,LOW(0)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	ADD  R30,R26
	ADC  R31,R27
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ST   X+,R30
	ST   X,R31
; 0000 00A1 dht_bit = 1;
	SET
	BLD  R3,5
; 0000 00A2 return 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
; 0000 00A3 }
; 0000 00A4 }
_0x1D:
_0x20C0006:
	CALL __LOADLOCR6
	ADIW R28,20
	RET
; .FEND
;interrupt[EXT_INT7] void ext_int7_isr(void)
; 0000 00A7 {
_ext_int7_isr:
; .FSTART _ext_int7_isr
	ST   -Y,R0
	ST   -Y,R26
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
; 0000 00A8 // Place your code here
; 0000 00A9 if ((bit_canh_bao == 1) & (bit_coi == 1))
	LDI  R26,0
	SBRC R2,3
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R2,4
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x2E
; 0000 00AA {
; 0000 00AB bit_coi = 0;
	CLT
	BLD  R2,4
; 0000 00AC }
; 0000 00AD }
_0x2E:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	LD   R26,Y+
	LD   R0,Y+
	RETI
; .FEND
;char getchar1(void)
; 0000 00B8 {
; 0000 00B9 unsigned char status;
; 0000 00BA char data;
; 0000 00BB while (1)
;	status -> R17
;	data -> R16
; 0000 00BC {
; 0000 00BD while (((status = UCSR1A) & RX_COMPLETE) == 0)
; 0000 00BE ;
; 0000 00BF data = UDR1;
; 0000 00C0 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN)) == 0)
; 0000 00C1 return data;
; 0000 00C2 }
; 0000 00C3 }
;void putchar1(char c)
; 0000 00C9 {
; 0000 00CA while ((UCSR1A & DATA_REGISTER_EMPTY) == 0)
;	c -> Y+0
; 0000 00CB ;
; 0000 00CC UDR1 = c;
; 0000 00CD }
;unsigned int read_adc(unsigned char adc_input)
; 0000 00D8 {
_read_adc:
; .FSTART _read_adc
; 0000 00D9 ADMUX = adc_input | ADC_VREF_TYPE;
	ST   -Y,R26
;	adc_input -> Y+0
	LD   R30,Y
	OUT  0x7,R30
; 0000 00DA // Delay needed for the stabilization of the ADC input voltage
; 0000 00DB delay_us(10);
	__DELAY_USB 27
; 0000 00DC // Start the AD conversion
; 0000 00DD ADCSRA |= (1 << ADSC);
	SBI  0x6,6
; 0000 00DE // Wait for the AD conversion to complete
; 0000 00DF while ((ADCSRA & (1 << ADIF)) == 0)
_0x39:
	SBIS 0x6,4
; 0000 00E0 ;
	RJMP _0x39
; 0000 00E1 ADCSRA |= (1 << ADIF);
	SBI  0x6,4
; 0000 00E2 return ADCW;
	IN   R30,0x4
	IN   R31,0x4+1
	ADIW R28,1
	RET
; 0000 00E3 }
; .FEND
;void puts1(unsigned char chuoi[])
; 0000 00E6 {
_puts1:
; .FSTART _puts1
; 0000 00E7 for (i = 0; chuoi[i] != '\0'; i++)
	ST   -Y,R27
	ST   -Y,R26
;	chuoi -> Y+0
	LDI  R30,LOW(0)
	STS  _i,R30
	STS  _i+1,R30
_0x3D:
	CALL SUBOPT_0x7
	CPI  R30,0
	BREQ _0x3E
; 0000 00E8 {
; 0000 00E9 while ((UCSR1A & DATA_REGISTER_EMPTY) == 0)
_0x3F:
	LDS  R30,155
	ANDI R30,LOW(0x20)
	BREQ _0x3F
; 0000 00EA ;
; 0000 00EB UDR1 = chuoi[i];
	CALL SUBOPT_0x7
	STS  156,R30
; 0000 00EC }
	CALL SUBOPT_0x8
	RJMP _0x3D
_0x3E:
; 0000 00ED }
	RJMP _0x20C0005
; .FEND
;void khoitaosim()
; 0000 00F1 {
_khoitaosim:
; .FSTART _khoitaosim
; 0000 00F2 lcd_gotoxy(0, 0);
	CALL SUBOPT_0x9
; 0000 00F3 lcd_puts("khoi tao sim...");
	__POINTW2MN _0x42,0
	CALL _lcd_puts
; 0000 00F4 delay_ms(50);
	CALL SUBOPT_0xA
; 0000 00F5 puts("AT");
	__POINTW2MN _0x42,16
	CALL SUBOPT_0xB
; 0000 00F6 putchar(13);
; 0000 00F7 putchar(10);
; 0000 00F8 delay_ms(200);
; 0000 00F9 puts("ATE0");
	__POINTW2MN _0x42,19
	CALL SUBOPT_0xB
; 0000 00FA putchar(13);
; 0000 00FB putchar(10);
; 0000 00FC delay_ms(200);
; 0000 00FD puts("AT+IPR=9600");
	__POINTW2MN _0x42,24
	CALL SUBOPT_0xB
; 0000 00FE putchar(13);
; 0000 00FF putchar(10);
; 0000 0100 delay_ms(200);
; 0000 0101 puts("AT&W");
	__POINTW2MN _0x42,36
	CALL SUBOPT_0xB
; 0000 0102 putchar(13);
; 0000 0103 putchar(10);
; 0000 0104 delay_ms(200); // LUU LAI CAC CAI DAT DA CAI
; 0000 0105 puts("ATX4");
	__POINTW2MN _0x42,41
	CALL SUBOPT_0xB
; 0000 0106 putchar(13);
; 0000 0107 putchar(10);
; 0000 0108 delay_ms(200); // LENH CHO CUOC GOI
; 0000 0109 puts("AT&W");
	__POINTW2MN _0x42,46
	CALL SUBOPT_0xB
; 0000 010A putchar(13);
; 0000 010B putchar(10);
; 0000 010C delay_ms(200);
; 0000 010D puts("AT+CSCS=\"GSM\"");
	__POINTW2MN _0x42,51
	CALL SUBOPT_0xB
; 0000 010E putchar(13);
; 0000 010F putchar(10);
; 0000 0110 delay_ms(200);
; 0000 0111 puts("AT+CMGF=1");
	__POINTW2MN _0x42,65
	CALL SUBOPT_0xB
; 0000 0112 putchar(13);
; 0000 0113 putchar(10);
; 0000 0114 delay_ms(200); // DUA TIN NHAN TRA VE VE DANG TEXT
; 0000 0115 puts("AT+CNMI=2,1,0,0,0");
	__POINTW2MN _0x42,75
	CALL SUBOPT_0xB
; 0000 0116 putchar(13);
; 0000 0117 putchar(10);
; 0000 0118 delay_ms(200);
; 0000 0119 puts("AT+CSAS");
	__POINTW2MN _0x42,93
	CALL SUBOPT_0xB
; 0000 011A putchar(13);
; 0000 011B putchar(10);
; 0000 011C delay_ms(200); // luu cac cai dat
; 0000 011D puts("AT+CNMI=2,2");
	__POINTW2MN _0x42,101
	CALL _puts
; 0000 011E putchar(13);
	LDI  R26,LOW(13)
	CALL _putchar
; 0000 011F putchar(10);
	LDI  R26,LOW(10)
	CALL _putchar
; 0000 0120 delay_ms(300);
	LDI  R26,LOW(300)
	LDI  R27,HIGH(300)
	CALL SUBOPT_0xC
; 0000 0121 lcd_clear();
; 0000 0122 }
	RET
; .FEND

	.DSEG
_0x42:
	.BYTE 0x71
;void call(char sdt[])
; 0000 0124 {

	.CSEG
; 0000 0125 sprintf(sim, "ATD;%s%c%c", sdt, 13, 10);
;	sdt -> Y+0
; 0000 0126 puts(sim);
; 0000 0127 delay_ms(500);
; 0000 0128 }
;void send_sms(char sdt[], char text[])
; 0000 012A {
_send_sms:
; .FSTART _send_sms
; 0000 012B lcd_clear();
	ST   -Y,R27
	ST   -Y,R26
;	sdt -> Y+2
;	text -> Y+0
	CALL _lcd_clear
; 0000 012C delay_ms(500);
	CALL SUBOPT_0xD
; 0000 012D sprintf(sim, "AT+CMGS=%c%s%c%c%c", '"', sdt, '"', 13, 10);
	__POINTW1FN _0x0,119
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0xE
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	CALL SUBOPT_0xF
	CALL SUBOPT_0xE
	CALL SUBOPT_0x10
	CALL SUBOPT_0x11
; 0000 012E puts(sim);
	LDI  R26,LOW(_sim)
	LDI  R27,HIGH(_sim)
	CALL _puts
; 0000 012F delay_ms(500);
	CALL SUBOPT_0xD
; 0000 0130 sprintf(sim, "%s %c%c", text, 13, 10);
	__POINTW1FN _0x0,138
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	CALL SUBOPT_0xF
	CALL SUBOPT_0x10
	CALL SUBOPT_0x12
; 0000 0131 puts(sim);
	LDI  R26,LOW(_sim)
	LDI  R27,HIGH(_sim)
	CALL _puts
; 0000 0132 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 0133 putchar(26);
	LDI  R26,LOW(26)
	CALL _putchar
; 0000 0134 }
	ADIW R28,4
	RET
; .FEND
;void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
; 0000 0136 {
_EEPROM_write:
; .FSTART _EEPROM_write
; 0000 0137 /* Wait for completion of previous write */
; 0000 0138 while (EECR & (1 << EEWE))
	ST   -Y,R26
;	uiAddress -> Y+1
;	ucData -> Y+0
_0x43:
	SBIC 0x1C,1
; 0000 0139 ;
	RJMP _0x43
; 0000 013A /* Set up address and data registers */
; 0000 013B EEAR = uiAddress;
	LDD  R30,Y+1
	LDD  R31,Y+1+1
	OUT  0x1E+1,R31
	OUT  0x1E,R30
; 0000 013C EEDR = ucData;
	LD   R30,Y
	OUT  0x1D,R30
; 0000 013D /* Write logical one to EEMWE */
; 0000 013E EECR |= (1 << EEMWE);
	SBI  0x1C,2
; 0000 013F /* Start eeprom write by setting EEWE */
; 0000 0140 EECR |= (1 << EEWE);
	SBI  0x1C,1
; 0000 0141 }
	ADIW R28,3
	RET
; .FEND
;unsigned char EEPROM_read(unsigned int uiAddress)
; 0000 0143 {
_EEPROM_read:
; .FSTART _EEPROM_read
; 0000 0144 /* Wait for completion of previous write */
; 0000 0145 while (EECR & (1 << EEWE))
	ST   -Y,R27
	ST   -Y,R26
;	uiAddress -> Y+0
_0x46:
	SBIC 0x1C,1
; 0000 0146 ;
	RJMP _0x46
; 0000 0147 /* Set up address register */
; 0000 0148 EEAR = uiAddress;
	LD   R30,Y
	LDD  R31,Y+1
	OUT  0x1E+1,R31
	OUT  0x1E,R30
; 0000 0149 /* Start eeprom read by writing EERE */
; 0000 014A EECR |= (1 << EERE);
	SBI  0x1C,0
; 0000 014B /* Return data from data register */
; 0000 014C return EEDR;
	IN   R30,0x1D
_0x20C0005:
	ADIW R28,2
	RET
; 0000 014D }
; .FEND
;void trohang()
; 0000 014F {
_trohang:
; .FSTART _trohang
; 0000 0150 for (i = 0; i < 4; i++)
	LDI  R30,LOW(0)
	STS  _i,R30
	STS  _i+1,R30
_0x4A:
	CALL SUBOPT_0x14
	SBIW R26,4
	BRGE _0x4B
; 0000 0151 if (i == hang)
	CALL SUBOPT_0x15
	CALL SUBOPT_0x16
	BRNE _0x4C
; 0000 0152 {
; 0000 0153 lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 0154 lcd_putchar('<');
	LDI  R26,LOW(60)
	RJMP _0x2B7
; 0000 0155 }
; 0000 0156 else
_0x4C:
; 0000 0157 {
; 0000 0158 lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 0159 lcd_putchar(' ');
	LDI  R26,LOW(32)
_0x2B7:
	CALL _lcd_putchar
; 0000 015A }
	CALL SUBOPT_0x8
	RJMP _0x4A
_0x4B:
; 0000 015B }
	RET
; .FEND
;void ct_hienthichung(void)
; 0000 018E {
_ct_hienthichung:
; .FSTART _ct_hienthichung
; 0000 018F delay_ms(1);
	CALL SUBOPT_0x18
; 0000 0190 rtc_get_date(&week_day, &day, &month, &year);
	LDI  R30,LOW(_week_day)
	LDI  R31,HIGH(_week_day)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_day)
	LDI  R31,HIGH(_day)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_month)
	LDI  R31,HIGH(_month)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(_year)
	LDI  R27,HIGH(_year)
	CALL _rtc_get_date
; 0000 0191 delay_ms(1);
	CALL SUBOPT_0x18
; 0000 0192 rtc_get_time(&hour, &min, &sec);
	LDI  R30,LOW(_hour)
	LDI  R31,HIGH(_hour)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_min)
	LDI  R31,HIGH(_min)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(_sec)
	LDI  R27,HIGH(_sec)
	CALL _rtc_get_time
; 0000 0193 delay_ms(1);
	CALL SUBOPT_0x18
; 0000 0194 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0195 delay_ms(1);
	CALL SUBOPT_0x18
; 0000 0196 if (strcmp(hienthi, "chung") == 0)
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,0
	CALL _strcmp
	CPI  R30,0
	BREQ PC+2
	RJMP _0x4E
; 0000 0197 {
; 0000 0198 doam11 = EEPROM_read(0);
	LDI  R26,LOW(0)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x1B
; 0000 0199 doam22 = EEPROM_read(1);
	LDI  R26,LOW(1)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x1C
; 0000 019A nhietdo11 = EEPROM_read(2);
	LDI  R26,LOW(2)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x1D
; 0000 019B nhietdo22 = EEPROM_read(3);
	LDI  R26,LOW(3)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x1E
; 0000 019C h11 = hour / 10;
	CALL SUBOPT_0x1F
	STS  _h11,R30
	STS  _h11+1,R31
; 0000 019D h12 = hour % 10;
	CALL SUBOPT_0x20
	CALL SUBOPT_0x21
; 0000 019E m11 = min / 10;
	CALL SUBOPT_0x22
	STS  _m11,R30
	STS  _m11+1,R31
; 0000 019F m12 = min % 10;
	CALL SUBOPT_0x23
	STS  _m12,R30
	STS  _m12+1,R31
; 0000 01A0 d1 = day / 10;
	CALL SUBOPT_0x24
	STS  _d1,R30
	STS  _d1+1,R31
; 0000 01A1 d2 = day % 10;
	CALL SUBOPT_0x25
	CALL SUBOPT_0x26
; 0000 01A2 m1 = month / 10;
	CALL SUBOPT_0x27
	STS  _m1,R30
	STS  _m1+1,R31
; 0000 01A3 m2 = month % 10;
	CALL SUBOPT_0x28
	CALL SUBOPT_0x29
; 0000 01A4 y1 = year / 10;
	LDS  R26,_year
	LDI  R27,0
	CALL SUBOPT_0x2A
	STS  _y1,R30
	STS  _y1+1,R31
; 0000 01A5 y2 = year % 10;
	LDS  R26,_year
	CLR  R27
	CALL SUBOPT_0x2B
	STS  _y2,R30
	STS  _y2+1,R31
; 0000 01A6 if (doam11 > 99)
	CALL SUBOPT_0x2C
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x50
; 0000 01A7 {
; 0000 01A8 doam11 = 40;
	LDI  R30,LOW(40)
	LDI  R31,HIGH(40)
	CALL SUBOPT_0x1B
; 0000 01A9 EEPROM_write(0, doam11);
	CALL SUBOPT_0x2D
; 0000 01AA }
; 0000 01AB if (doam22 > 99)
_0x50:
	CALL SUBOPT_0x2E
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x51
; 0000 01AC {
; 0000 01AD doam22 = 70;
	LDI  R30,LOW(70)
	LDI  R31,HIGH(70)
	CALL SUBOPT_0x1C
; 0000 01AE EEPROM_write(1, doam22);
	CALL SUBOPT_0x2F
; 0000 01AF }
; 0000 01B0 if (nhietdo11 > 99)
_0x51:
	CALL SUBOPT_0x30
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x52
; 0000 01B1 {
; 0000 01B2 nhietdo11 = 20;
	LDI  R30,LOW(20)
	LDI  R31,HIGH(20)
	CALL SUBOPT_0x1D
; 0000 01B3 EEPROM_write(2, nhietdo11);
	CALL SUBOPT_0x31
; 0000 01B4 }
; 0000 01B5 if (nhietdo22 > 99)
_0x52:
	CALL SUBOPT_0x32
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x53
; 0000 01B6 {
; 0000 01B7 nhietdo22 = 25;
	LDI  R30,LOW(25)
	LDI  R31,HIGH(25)
	CALL SUBOPT_0x1E
; 0000 01B8 EEPROM_write(3, nhietdo22);
	CALL SUBOPT_0x33
; 0000 01B9 }
; 0000 01BA lcd_gotoxy(0, 0);
_0x53:
	CALL SUBOPT_0x9
; 0000 01BB sprintf(lcd, "DC1:%2d%c%dv   %1d%1d:%1d%1d:%1d%1d", dc11, ',', dc12, hour / 10,  ...
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,152
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x35
	CALL SUBOPT_0x36
	CALL SUBOPT_0x37
	CALL SUBOPT_0x1F
	CALL SUBOPT_0x38
	CALL SUBOPT_0x20
	CALL SUBOPT_0x38
	CALL SUBOPT_0x22
	CALL SUBOPT_0x38
	CALL SUBOPT_0x23
	CALL SUBOPT_0x38
	LDS  R26,_sec
	LDI  R27,0
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	LDS  R26,_sec
	CLR  R27
	CALL SUBOPT_0x2B
	CALL SUBOPT_0x38
	CALL SUBOPT_0x39
; 0000 01BC lcd_puts(lcd);
; 0000 01BD delay_us(50);
	CALL SUBOPT_0x0
; 0000 01BE lcd_gotoxy(0, 1);
	CALL SUBOPT_0x3A
; 0000 01BF sprintf(lcd, "DC2:%2d%c%dv   %1d%1d/%1d%1d/%2d", dc21, ',', dc22, day / 10, day  ...
	__POINTW1FN _0x0,188
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x36
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x24
	CALL SUBOPT_0x38
	CALL SUBOPT_0x25
	CALL SUBOPT_0x38
	CALL SUBOPT_0x27
	CALL SUBOPT_0x38
	CALL SUBOPT_0x28
	CALL SUBOPT_0x38
	LDS  R30,_year
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,32
	CALL _sprintf
	ADIW R28,36
; 0000 01C0 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 01C1 delay_us(50);
	CALL SUBOPT_0x0
; 0000 01C2 lcd_gotoxy(0, 2);
	CALL SUBOPT_0x3E
; 0000 01C3 if (KTAC1 == 0)
	SBIC 0x16,2
	RJMP _0x54
; 0000 01C4 {
; 0000 01C5 strcpy(AC1, "OFF");
	CALL SUBOPT_0x3F
	__POINTW2MN _0x4F,6
	RJMP _0x2B8
; 0000 01C6 }
; 0000 01C7 else
_0x54:
; 0000 01C8 {
; 0000 01C9 strcpy(AC1, "ON");
	CALL SUBOPT_0x3F
	__POINTW2MN _0x4F,10
_0x2B8:
	CALL _strcpy
; 0000 01CA }
; 0000 01CB // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 01CC sprintf(lcd, "Humi:%2d%c%d%%   AC1:%3s", dht_do_am / 10, ',', dht_do_am % 10, AC ...
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,228
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x40
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x36
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	LDI  R30,LOW(_AC1)
	LDI  R31,HIGH(_AC1)
	CALL SUBOPT_0xF
	CALL SUBOPT_0x42
; 0000 01CD lcd_puts(lcd);
; 0000 01CE if (KTAC2 == 0)
	SBIC 0x16,3
	RJMP _0x56
; 0000 01CF {
; 0000 01D0 strcpy(AC1, "OFF");
	CALL SUBOPT_0x3F
	__POINTW2MN _0x4F,13
	RJMP _0x2B9
; 0000 01D1 }
; 0000 01D2 else
_0x56:
; 0000 01D3 {
; 0000 01D4 strcpy(AC1, "ON");
	CALL SUBOPT_0x3F
	__POINTW2MN _0x4F,17
_0x2B9:
	CALL _strcpy
; 0000 01D5 }
; 0000 01D6 delay_us(50);
	CALL SUBOPT_0x0
; 0000 01D7 lcd_gotoxy(0, 3);
	CALL SUBOPT_0x43
; 0000 01D8 sprintf(lcd, "Temp:%2d%c%d%cC  AC2:%3s", dht_nhiet_do / 10, ',', dht_nhiet_do %  ...
	__POINTW1FN _0x0,253
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x44
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x36
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x46
	LDI  R30,LOW(_AC1)
	LDI  R31,HIGH(_AC1)
	CALL SUBOPT_0xF
	CALL SUBOPT_0x11
; 0000 01D9 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 01DA delay_us(50);
	__DELAY_USB 133
; 0000 01DB }
; 0000 01DC if (strcmp(hienthi, "Mode") == 0)
_0x4E:
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,20
	CALL _strcmp
	CPI  R30,0
	BREQ PC+2
	RJMP _0x58
; 0000 01DD {
; 0000 01DE dc_low_1 = EEPROM_read(31) * 10 + EEPROM_read(32);
	CALL SUBOPT_0x47
	PUSH R31
	PUSH R30
	LDI  R26,LOW(32)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x48
; 0000 01DF dc_low_2 = EEPROM_read(33) * 10 + EEPROM_read(34);
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x49
; 0000 01E0 dc_high = EEPROM_read(35) * 10 + EEPROM_read(36);
	PUSH R31
	PUSH R30
	LDI  R26,LOW(36)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x4A
; 0000 01E1 if ((dc_low_1 > 999) | (dc_low_2 > 999) | (dc_high > 999))
	BREQ _0x59
; 0000 01E2 {
; 0000 01E3 dc_low_1 = 470;
	CALL SUBOPT_0x4B
; 0000 01E4 dc_low_2 = 480;
; 0000 01E5 dc_high = 585;
; 0000 01E6 EEPROM_write(31, dc_low_1 / 10);
	CALL SUBOPT_0x4C
; 0000 01E7 EEPROM_write(32, dc_low_1 % 10);
	CALL SUBOPT_0x4D
; 0000 01E8 EEPROM_write(33, dc_low_2 / 10);
	CALL SUBOPT_0x4E
; 0000 01E9 EEPROM_write(34, dc_low_2 % 10);
	CALL SUBOPT_0x4F
; 0000 01EA EEPROM_write(35, dc_high / 10);
	CALL SUBOPT_0x50
; 0000 01EB EEPROM_write(36, dc_high % 10);
	MOV  R26,R30
	RCALL _EEPROM_write
; 0000 01EC }
; 0000 01ED trohang();
_0x59:
	RCALL _trohang
; 0000 01EE lcd_gotoxy(0, 0);
	CALL SUBOPT_0x9
; 0000 01EF sprintf(lcd, "time:    %1d%1d:%1d%1d", h11, h12, m11, m12);
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,283
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_h11
	LDS  R31,_h11+1
	CALL SUBOPT_0xF
	LDS  R30,_h12
	LDS  R31,_h12+1
	CALL SUBOPT_0xF
	LDS  R30,_m11
	LDS  R31,_m11+1
	CALL SUBOPT_0xF
	LDS  R30,_m12
	LDS  R31,_m12+1
	CALL SUBOPT_0xF
	CALL SUBOPT_0x42
; 0000 01F0 lcd_puts(lcd);
; 0000 01F1 lcd_gotoxy(0, 1);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x3A
; 0000 01F2 sprintf(lcd, "date:    %1d%1d/%1d%1d/%2d", d1, d2, m1, m2, y1 * 10 + y2);
	__POINTW1FN _0x0,306
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_d1
	LDS  R31,_d1+1
	CALL SUBOPT_0xF
	LDS  R30,_d2
	LDS  R31,_d2+1
	CALL SUBOPT_0xF
	LDS  R30,_m1
	LDS  R31,_m1+1
	CALL SUBOPT_0xF
	LDS  R30,_m2
	LDS  R31,_m2+1
	CALL SUBOPT_0xF
	CALL SUBOPT_0x51
	CALL SUBOPT_0x52
	CALL SUBOPT_0xF
	CALL SUBOPT_0x11
; 0000 01F3 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 01F4 lcd_gotoxy(0, 2);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x3E
; 0000 01F5 sprintf(lcd, "humi: %1d%1d to %1d%1d%%", doam11 / 10, doam11 % 10, doam22 / 10,  ...
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,333
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x2C
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x2C
	CALL SUBOPT_0x2B
	CALL SUBOPT_0x38
	CALL SUBOPT_0x2E
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x2E
	CALL SUBOPT_0x2B
	CALL SUBOPT_0x38
	CALL SUBOPT_0x42
; 0000 01F6 lcd_puts(lcd);
; 0000 01F7 lcd_gotoxy(0, 3);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x43
; 0000 01F8 sprintf(lcd, "temp: %1d%1d to %1d%1d%cC", nhietdo11 / 10, nhietdo11 % 10, nhietd ...
	__POINTW1FN _0x0,358
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x30
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x30
	CALL SUBOPT_0x2B
	CALL SUBOPT_0x38
	CALL SUBOPT_0x32
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x32
	CALL SUBOPT_0x2B
	CALL SUBOPT_0x38
	CALL SUBOPT_0x46
	CALL SUBOPT_0x11
; 0000 01F9 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 01FA // hang 1
; 0000 01FB if (hang == 0)
	CALL SUBOPT_0x15
	SBIW R30,0
	BREQ PC+2
	RJMP _0x5A
; 0000 01FC {
; 0000 01FD 
; 0000 01FE switch (cot)
	CALL SUBOPT_0x53
; 0000 01FF {
; 0000 0200 case 1:
	BREQ PC+2
	RJMP _0x5E
; 0000 0201 
; 0000 0202 lcd_gotoxy(9, 0);
	LDI  R30,LOW(9)
	CALL SUBOPT_0x54
; 0000 0203 delay_ms(200);
; 0000 0204 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0205 // phim up
; 0000 0206 
; 0000 0207 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x60
	SBRC R2,0
	RJMP _0x61
_0x60:
	RJMP _0x5F
_0x61:
; 0000 0208 {
; 0000 0209 h11++;
	LDI  R26,LOW(_h11)
	LDI  R27,HIGH(_h11)
	CALL SUBOPT_0x55
; 0000 020A if (h11 > 2)
	CALL SUBOPT_0x56
	SBIW R26,3
	BRLO _0x62
; 0000 020B h11 = 0;
	LDI  R30,LOW(0)
	STS  _h11,R30
	STS  _h11+1,R30
; 0000 020C bit_phim = 0;
_0x62:
	CLT
	BLD  R2,0
; 0000 020D delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BA
; 0000 020E }
; 0000 020F else
_0x5F:
; 0000 0210 {
; 0000 0211 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0212 delay_ms(25);
	LDI  R26,LOW(25)
_0x2BA:
	LDI  R27,0
	CALL _delay_ms
; 0000 0213 }
; 0000 0214 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x65
	SBRC R2,0
	RJMP _0x66
_0x65:
	RJMP _0x64
_0x66:
; 0000 0215 {
; 0000 0216 h11--;
	LDI  R26,LOW(_h11)
	LDI  R27,HIGH(_h11)
	CALL SUBOPT_0x57
; 0000 0217 if (h11 == -1)
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x67
; 0000 0218 h11 = 2;
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	STS  _h11,R30
	STS  _h11+1,R31
; 0000 0219 bit_phim = 0;
_0x67:
	CLT
	BLD  R2,0
; 0000 021A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BB
; 0000 021B }
; 0000 021C else
_0x64:
; 0000 021D {
; 0000 021E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 021F delay_ms(25);
	LDI  R26,LOW(25)
_0x2BB:
	LDI  R27,0
	CALL _delay_ms
; 0000 0220 }
; 0000 0221 break;
	RJMP _0x5D
; 0000 0222 case 2:
_0x5E:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x69
; 0000 0223 
; 0000 0224 lcd_gotoxy(10, 0);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x54
; 0000 0225 delay_ms(200);
; 0000 0226 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0227 
; 0000 0228 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x6B
	SBRC R2,0
	RJMP _0x6C
_0x6B:
	RJMP _0x6A
_0x6C:
; 0000 0229 {
; 0000 022A h12++;
	LDI  R26,LOW(_h12)
	LDI  R27,HIGH(_h12)
	CALL SUBOPT_0x55
; 0000 022B if (h12 > 9)
	CALL SUBOPT_0x58
	SBIW R26,10
	BRLO _0x6D
; 0000 022C h12 = 0;
	LDI  R30,LOW(0)
	STS  _h12,R30
	STS  _h12+1,R30
; 0000 022D if (h11 == 2)
_0x6D:
	CALL SUBOPT_0x56
	SBIW R26,2
	BRNE _0x6E
; 0000 022E if (h12 > 4)
	CALL SUBOPT_0x58
	SBIW R26,5
	BRLO _0x6F
; 0000 022F h12 = 0;
	LDI  R30,LOW(0)
	STS  _h12,R30
	STS  _h12+1,R30
; 0000 0230 
; 0000 0231 bit_phim = 0;
_0x6F:
_0x6E:
	CLT
	BLD  R2,0
; 0000 0232 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BC
; 0000 0233 }
; 0000 0234 else
_0x6A:
; 0000 0235 {
; 0000 0236 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0237 delay_ms(25);
	LDI  R26,LOW(25)
_0x2BC:
	LDI  R27,0
	CALL _delay_ms
; 0000 0238 }
; 0000 0239 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x72
	SBRC R2,0
	RJMP _0x73
_0x72:
	RJMP _0x71
_0x73:
; 0000 023A {
; 0000 023B h12--;
	LDI  R26,LOW(_h12)
	LDI  R27,HIGH(_h12)
	CALL SUBOPT_0x57
; 0000 023C if (h11 == 2)
	SBIW R26,2
	BRNE _0x74
; 0000 023D if (h12 == -1)
	CALL SUBOPT_0x58
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x75
; 0000 023E h12 = 4;
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	CALL SUBOPT_0x21
; 0000 023F if (h12 == -1)
_0x75:
_0x74:
	CALL SUBOPT_0x58
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x76
; 0000 0240 h12 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x21
; 0000 0241 bit_phim = 0;
_0x76:
	CLT
	BLD  R2,0
; 0000 0242 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BD
; 0000 0243 }
; 0000 0244 else
_0x71:
; 0000 0245 {
; 0000 0246 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0247 delay_ms(25);
	LDI  R26,LOW(25)
_0x2BD:
	LDI  R27,0
	CALL _delay_ms
; 0000 0248 }
; 0000 0249 break;
	RJMP _0x5D
; 0000 024A case 3:
_0x69:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x78
; 0000 024B 
; 0000 024C lcd_gotoxy(12, 0);
	LDI  R30,LOW(12)
	CALL SUBOPT_0x54
; 0000 024D delay_ms(200);
; 0000 024E lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 024F if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x7A
	SBRC R2,0
	RJMP _0x7B
_0x7A:
	RJMP _0x79
_0x7B:
; 0000 0250 {
; 0000 0251 m11++;
	LDI  R26,LOW(_m11)
	LDI  R27,HIGH(_m11)
	CALL SUBOPT_0x55
; 0000 0252 if (m11 > 5)
	CALL SUBOPT_0x59
	SBIW R26,6
	BRLO _0x7C
; 0000 0253 m11 = 0;
	LDI  R30,LOW(0)
	STS  _m11,R30
	STS  _m11+1,R30
; 0000 0254 
; 0000 0255 bit_phim = 0;
_0x7C:
	CLT
	BLD  R2,0
; 0000 0256 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BE
; 0000 0257 }
; 0000 0258 else
_0x79:
; 0000 0259 {
; 0000 025A bit_phim = 1;
	SET
	BLD  R2,0
; 0000 025B delay_ms(25);
	LDI  R26,LOW(25)
_0x2BE:
	LDI  R27,0
	CALL _delay_ms
; 0000 025C }
; 0000 025D if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x7F
	SBRC R2,0
	RJMP _0x80
_0x7F:
	RJMP _0x7E
_0x80:
; 0000 025E {
; 0000 025F m11--;
	LDI  R26,LOW(_m11)
	LDI  R27,HIGH(_m11)
	CALL SUBOPT_0x5A
; 0000 0260 if (m11 == -1)
	CALL SUBOPT_0x59
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x81
; 0000 0261 m11 = 5;
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	STS  _m11,R30
	STS  _m11+1,R31
; 0000 0262 bit_phim = 0;
_0x81:
	CLT
	BLD  R2,0
; 0000 0263 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2BF
; 0000 0264 }
; 0000 0265 else
_0x7E:
; 0000 0266 {
; 0000 0267 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0268 delay_ms(25);
	LDI  R26,LOW(25)
_0x2BF:
	LDI  R27,0
	CALL _delay_ms
; 0000 0269 }
; 0000 026A break;
	RJMP _0x5D
; 0000 026B case 4:
_0x78:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BRNE _0x8E
; 0000 026C 
; 0000 026D lcd_gotoxy(13, 0);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x54
; 0000 026E delay_ms(200);
; 0000 026F lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0270 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x85
	SBRC R2,0
	RJMP _0x86
_0x85:
	RJMP _0x84
_0x86:
; 0000 0271 {
; 0000 0272 m12++;
	LDI  R26,LOW(_m12)
	LDI  R27,HIGH(_m12)
	CALL SUBOPT_0x55
; 0000 0273 if (m12 > 9)
	CALL SUBOPT_0x5B
	SBIW R26,10
	BRLO _0x87
; 0000 0274 m12 = 0;
	LDI  R30,LOW(0)
	STS  _m12,R30
	STS  _m12+1,R30
; 0000 0275 bit_phim = 0;
_0x87:
	CLT
	BLD  R2,0
; 0000 0276 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C0
; 0000 0277 }
; 0000 0278 else
_0x84:
; 0000 0279 {
; 0000 027A bit_phim = 1;
	SET
	BLD  R2,0
; 0000 027B delay_ms(25);
	LDI  R26,LOW(25)
_0x2C0:
	LDI  R27,0
	CALL _delay_ms
; 0000 027C }
; 0000 027D if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x8A
	SBRC R2,0
	RJMP _0x8B
_0x8A:
	RJMP _0x89
_0x8B:
; 0000 027E {
; 0000 027F m12--;
	LDI  R26,LOW(_m12)
	LDI  R27,HIGH(_m12)
	CALL SUBOPT_0x5A
; 0000 0280 if (m12 == -1)
	CALL SUBOPT_0x5B
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x8C
; 0000 0281 m12 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	STS  _m12,R30
	STS  _m12+1,R31
; 0000 0282 bit_phim = 0;
_0x8C:
	CLT
	RJMP _0x2C1
; 0000 0283 delay_ms(50);
; 0000 0284 }
; 0000 0285 else
_0x89:
; 0000 0286 {
; 0000 0287 bit_phim = 1;
	SET
_0x2C1:
	BLD  R2,0
; 0000 0288 delay_ms(50);
	CALL SUBOPT_0xA
; 0000 0289 }
; 0000 028A break;
	RJMP _0x5D
; 0000 028B default:
_0x8E:
; 0000 028C cot = 1;
	CALL SUBOPT_0x5C
; 0000 028D delay_ms(25);
	CALL SUBOPT_0x1
; 0000 028E break;
; 0000 028F }
_0x5D:
; 0000 0290 // luu
; 0000 0291 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x90
	SBRC R2,0
	RJMP _0x91
_0x90:
	RJMP _0x8F
_0x91:
; 0000 0292 {
; 0000 0293 hour1 = h11 * 10 + h12;
	CALL SUBOPT_0x56
	LDI  R30,LOW(10)
	CALL __MULB1W2U
	CALL SUBOPT_0x58
	ADD  R30,R26
	ADC  R31,R27
	STS  _hour1,R30
	STS  _hour1+1,R31
; 0000 0294 min1 = m11 * 10 + m12;
	CALL SUBOPT_0x59
	LDI  R30,LOW(10)
	CALL __MULB1W2U
	CALL SUBOPT_0x5B
	ADD  R30,R26
	ADC  R31,R27
	STS  _min1,R30
	STS  _min1+1,R31
; 0000 0295 if (hour1 > 24)
	LDS  R26,_hour1
	LDS  R27,_hour1+1
	SBIW R26,25
	BRLO _0x92
; 0000 0296 {
; 0000 0297 lcd_clear();
	CALL SUBOPT_0x5D
; 0000 0298 lcd_gotoxy(1, 1);
; 0000 0299 lcd_puts("!vui long nhap lai gio!");
	__POINTW2MN _0x4F,25
	RJMP _0x2C2
; 0000 029A delay_ms(500);
; 0000 029B lcd_clear();
; 0000 029C }
; 0000 029D else
_0x92:
; 0000 029E {
; 0000 029F rtc_set_time(hour1, min1, 0);
	LDS  R30,_hour1
	ST   -Y,R30
	LDS  R30,_min1
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _rtc_set_time
; 0000 02A0 cot = 1;
	CALL SUBOPT_0x5C
; 0000 02A1 lcd_clear();
	CALL SUBOPT_0x5E
; 0000 02A2 lcd_gotoxy(2, 1);
; 0000 02A3 lcd_puts("luu thanh cong!");
	__POINTW2MN _0x4F,49
_0x2C2:
	CALL _lcd_puts
; 0000 02A4 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 02A5 lcd_clear();
; 0000 02A6 }
; 0000 02A7 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 02A8 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C3
; 0000 02A9 }
; 0000 02AA else
_0x8F:
; 0000 02AB {
; 0000 02AC bit_phim = 1;
	SET
	BLD  R2,0
; 0000 02AD 
; 0000 02AE delay_ms(25);
	LDI  R26,LOW(25)
_0x2C3:
	LDI  R27,0
	CALL _delay_ms
; 0000 02AF }
; 0000 02B0 };
_0x5A:
; 0000 02B1 // hang 2
; 0000 02B2 if (hang == 1)
	CALL SUBOPT_0x60
	SBIW R26,1
	BREQ PC+2
	RJMP _0x95
; 0000 02B3 {
; 0000 02B4 
; 0000 02B5 switch (cot)
	CALL SUBOPT_0x53
; 0000 02B6 {
; 0000 02B7 case 1:
	BREQ PC+2
	RJMP _0x99
; 0000 02B8 
; 0000 02B9 lcd_gotoxy(9, 1);
	LDI  R30,LOW(9)
	CALL SUBOPT_0x61
; 0000 02BA delay_ms(200);
; 0000 02BB lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 02BC // phim up
; 0000 02BD 
; 0000 02BE if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x9B
	SBRC R2,0
	RJMP _0x9C
_0x9B:
	RJMP _0x9A
_0x9C:
; 0000 02BF {
; 0000 02C0 d1++;
	LDI  R26,LOW(_d1)
	LDI  R27,HIGH(_d1)
	CALL SUBOPT_0x55
; 0000 02C1 if (d1 > 3)
	CALL SUBOPT_0x62
	SBIW R26,4
	BRLO _0x9D
; 0000 02C2 d1 = 0;
	LDI  R30,LOW(0)
	STS  _d1,R30
	STS  _d1+1,R30
; 0000 02C3 bit_phim = 0;
_0x9D:
	CLT
	BLD  R2,0
; 0000 02C4 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C4
; 0000 02C5 }
; 0000 02C6 else
_0x9A:
; 0000 02C7 {
; 0000 02C8 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 02C9 delay_ms(25);
	LDI  R26,LOW(25)
_0x2C4:
	LDI  R27,0
	CALL _delay_ms
; 0000 02CA }
; 0000 02CB if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xA0
	SBRC R2,0
	RJMP _0xA1
_0xA0:
	RJMP _0x9F
_0xA1:
; 0000 02CC {
; 0000 02CD d1--;
	LDI  R26,LOW(_d1)
	LDI  R27,HIGH(_d1)
	CALL SUBOPT_0x5A
; 0000 02CE if (d1 == -1)
	CALL SUBOPT_0x62
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xA2
; 0000 02CF d1 = 3;
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	STS  _d1,R30
	STS  _d1+1,R31
; 0000 02D0 led_do = ~led_do;
_0xA2:
	SBIS 0x12,5
	RJMP _0xA3
	CBI  0x12,5
	RJMP _0xA4
_0xA3:
	SBI  0x12,5
_0xA4:
; 0000 02D1 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 02D2 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C5
; 0000 02D3 }
; 0000 02D4 else
_0x9F:
; 0000 02D5 {
; 0000 02D6 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 02D7 delay_ms(25);
	LDI  R26,LOW(25)
_0x2C5:
	LDI  R27,0
	CALL _delay_ms
; 0000 02D8 }
; 0000 02D9 break;
	RJMP _0x98
; 0000 02DA case 2:
_0x99:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xA6
; 0000 02DB 
; 0000 02DC lcd_gotoxy(10, 1);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x61
; 0000 02DD delay_ms(200);
; 0000 02DE lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 02DF 
; 0000 02E0 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xA8
	SBRC R2,0
	RJMP _0xA9
_0xA8:
	RJMP _0xA7
_0xA9:
; 0000 02E1 {
; 0000 02E2 d2++;
	LDI  R26,LOW(_d2)
	LDI  R27,HIGH(_d2)
	CALL SUBOPT_0x55
; 0000 02E3 if (d2 > 9)
	CALL SUBOPT_0x63
	SBIW R26,10
	BRLO _0xAA
; 0000 02E4 d2 = 0;
	LDI  R30,LOW(0)
	STS  _d2,R30
	STS  _d2+1,R30
; 0000 02E5 if (d1 == 3)
_0xAA:
	CALL SUBOPT_0x62
	SBIW R26,3
	BRNE _0xAB
; 0000 02E6 if (d2 > 1)
	CALL SUBOPT_0x63
	SBIW R26,2
	BRLO _0xAC
; 0000 02E7 d2 = 0;
	LDI  R30,LOW(0)
	STS  _d2,R30
	STS  _d2+1,R30
; 0000 02E8 
; 0000 02E9 bit_phim = 0;
_0xAC:
_0xAB:
	CLT
	BLD  R2,0
; 0000 02EA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C6
; 0000 02EB }
; 0000 02EC else
_0xA7:
; 0000 02ED {
; 0000 02EE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 02EF delay_ms(25);
	LDI  R26,LOW(25)
_0x2C6:
	LDI  R27,0
	CALL _delay_ms
; 0000 02F0 }
; 0000 02F1 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xAF
	SBRC R2,0
	RJMP _0xB0
_0xAF:
	RJMP _0xAE
_0xB0:
; 0000 02F2 {
; 0000 02F3 d2--;
	LDI  R26,LOW(_d2)
	LDI  R27,HIGH(_d2)
	CALL SUBOPT_0x5A
; 0000 02F4 if (d1 == 3)
	CALL SUBOPT_0x62
	SBIW R26,3
	BRNE _0xB1
; 0000 02F5 if (d2 == -1)
	CALL SUBOPT_0x63
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xB2
; 0000 02F6 d2 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	CALL SUBOPT_0x26
; 0000 02F7 if (d2 == -1)
_0xB2:
_0xB1:
	CALL SUBOPT_0x63
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xB3
; 0000 02F8 d2 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x26
; 0000 02F9 bit_phim = 0;
_0xB3:
	CLT
	BLD  R2,0
; 0000 02FA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C7
; 0000 02FB }
; 0000 02FC else
_0xAE:
; 0000 02FD {
; 0000 02FE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 02FF delay_ms(25);
	LDI  R26,LOW(25)
_0x2C7:
	LDI  R27,0
	CALL _delay_ms
; 0000 0300 }
; 0000 0301 break;
	RJMP _0x98
; 0000 0302 case 3:
_0xA6:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xB5
; 0000 0303 
; 0000 0304 lcd_gotoxy(12, 1);
	LDI  R30,LOW(12)
	CALL SUBOPT_0x61
; 0000 0305 delay_ms(200);
; 0000 0306 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0307 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xB7
	SBRC R2,0
	RJMP _0xB8
_0xB7:
	RJMP _0xB6
_0xB8:
; 0000 0308 {
; 0000 0309 m1++;
	LDI  R26,LOW(_m1)
	LDI  R27,HIGH(_m1)
	CALL SUBOPT_0x55
; 0000 030A if (m1 > 1)
	CALL SUBOPT_0x64
	SBIW R26,2
	BRLO _0xB9
; 0000 030B m1 = 0;
	LDI  R30,LOW(0)
	STS  _m1,R30
	STS  _m1+1,R30
; 0000 030C bit_phim = 0;
_0xB9:
	CLT
	BLD  R2,0
; 0000 030D delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C8
; 0000 030E }
; 0000 030F else
_0xB6:
; 0000 0310 {
; 0000 0311 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0312 delay_ms(25);
	LDI  R26,LOW(25)
_0x2C8:
	LDI  R27,0
	CALL _delay_ms
; 0000 0313 }
; 0000 0314 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xBC
	SBRC R2,0
	RJMP _0xBD
_0xBC:
	RJMP _0xBB
_0xBD:
; 0000 0315 {
; 0000 0316 m1--;
	LDI  R26,LOW(_m1)
	LDI  R27,HIGH(_m1)
	CALL SUBOPT_0x5A
; 0000 0317 if (m1 == -1)
	CALL SUBOPT_0x64
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xBE
; 0000 0318 m1 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _m1,R30
	STS  _m1+1,R31
; 0000 0319 bit_phim = 0;
_0xBE:
	CLT
	BLD  R2,0
; 0000 031A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2C9
; 0000 031B }
; 0000 031C else
_0xBB:
; 0000 031D {
; 0000 031E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 031F delay_ms(25);
	LDI  R26,LOW(25)
_0x2C9:
	LDI  R27,0
	CALL _delay_ms
; 0000 0320 }
; 0000 0321 break;
	RJMP _0x98
; 0000 0322 case 4:
_0xB5:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xC0
; 0000 0323 
; 0000 0324 lcd_gotoxy(13, 1);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x61
; 0000 0325 delay_ms(200);
; 0000 0326 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0327 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xC2
	SBRC R2,0
	RJMP _0xC3
_0xC2:
	RJMP _0xC1
_0xC3:
; 0000 0328 {
; 0000 0329 m2++;
	LDI  R26,LOW(_m2)
	LDI  R27,HIGH(_m2)
	CALL SUBOPT_0x55
; 0000 032A if (m1 == 1)
	CALL SUBOPT_0x64
	SBIW R26,1
	BRNE _0xC4
; 0000 032B {
; 0000 032C if (m2 > 2)
	CALL SUBOPT_0x65
	SBIW R26,3
	BRLO _0xC5
; 0000 032D m2 = 0;
	LDI  R30,LOW(0)
	STS  _m2,R30
	STS  _m2+1,R30
; 0000 032E }
_0xC5:
; 0000 032F if (m2 > 9)
_0xC4:
	CALL SUBOPT_0x65
	SBIW R26,10
	BRLO _0xC6
; 0000 0330 m2 = 0;
	LDI  R30,LOW(0)
	STS  _m2,R30
	STS  _m2+1,R30
; 0000 0331 bit_phim = 0;
_0xC6:
	CLT
	BLD  R2,0
; 0000 0332 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CA
; 0000 0333 }
; 0000 0334 else
_0xC1:
; 0000 0335 {
; 0000 0336 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0337 delay_ms(25);
	LDI  R26,LOW(25)
_0x2CA:
	LDI  R27,0
	CALL _delay_ms
; 0000 0338 }
; 0000 0339 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xC9
	SBRC R2,0
	RJMP _0xCA
_0xC9:
	RJMP _0xC8
_0xCA:
; 0000 033A {
; 0000 033B m2--;
	LDI  R26,LOW(_m2)
	LDI  R27,HIGH(_m2)
	CALL SUBOPT_0x5A
; 0000 033C if (m1 == 1)
	CALL SUBOPT_0x64
	SBIW R26,1
	BRNE _0xCB
; 0000 033D if (m2 == -1)
	CALL SUBOPT_0x65
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xCC
; 0000 033E m2 = 2;
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL SUBOPT_0x29
; 0000 033F if (m2 == -1)
_0xCC:
_0xCB:
	CALL SUBOPT_0x65
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xCD
; 0000 0340 m2 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x29
; 0000 0341 bit_phim = 0;
_0xCD:
	CLT
	BLD  R2,0
; 0000 0342 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CB
; 0000 0343 }
; 0000 0344 else
_0xC8:
; 0000 0345 {
; 0000 0346 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0347 delay_ms(25);
	LDI  R26,LOW(25)
_0x2CB:
	LDI  R27,0
	CALL _delay_ms
; 0000 0348 }
; 0000 0349 break;
	RJMP _0x98
; 0000 034A case 5:
_0xC0:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xCF
; 0000 034B 
; 0000 034C lcd_gotoxy(15, 1);
	LDI  R30,LOW(15)
	CALL SUBOPT_0x61
; 0000 034D delay_ms(200);
; 0000 034E lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 034F if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xD1
	SBRC R2,0
	RJMP _0xD2
_0xD1:
	RJMP _0xD0
_0xD2:
; 0000 0350 {
; 0000 0351 y1++;
	LDI  R26,LOW(_y1)
	LDI  R27,HIGH(_y1)
	CALL SUBOPT_0x55
; 0000 0352 if (y1 > 9)
	CALL SUBOPT_0x51
	SBIW R26,10
	BRLO _0xD3
; 0000 0353 y1 = 0;
	LDI  R30,LOW(0)
	STS  _y1,R30
	STS  _y1+1,R30
; 0000 0354 bit_phim = 0;
_0xD3:
	CLT
	BLD  R2,0
; 0000 0355 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CC
; 0000 0356 }
; 0000 0357 else
_0xD0:
; 0000 0358 {
; 0000 0359 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 035A delay_ms(25);
	LDI  R26,LOW(25)
_0x2CC:
	LDI  R27,0
	CALL _delay_ms
; 0000 035B }
; 0000 035C if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xD6
	SBRC R2,0
	RJMP _0xD7
_0xD6:
	RJMP _0xD5
_0xD7:
; 0000 035D {
; 0000 035E y1--;
	LDI  R26,LOW(_y1)
	LDI  R27,HIGH(_y1)
	CALL SUBOPT_0x5A
; 0000 035F if (y1 == -1)
	CALL SUBOPT_0x51
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xD8
; 0000 0360 y1 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	STS  _y1,R30
	STS  _y1+1,R31
; 0000 0361 bit_phim = 0;
_0xD8:
	CLT
	BLD  R2,0
; 0000 0362 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CD
; 0000 0363 }
; 0000 0364 else
_0xD5:
; 0000 0365 {
; 0000 0366 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0367 delay_ms(25);
	LDI  R26,LOW(25)
_0x2CD:
	LDI  R27,0
	CALL _delay_ms
; 0000 0368 }
; 0000 0369 break;
	RJMP _0x98
; 0000 036A case 6:
_0xCF:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xE5
; 0000 036B 
; 0000 036C lcd_gotoxy(16, 1);
	LDI  R30,LOW(16)
	CALL SUBOPT_0x61
; 0000 036D delay_ms(200);
; 0000 036E lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 036F if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xDC
	SBRC R2,0
	RJMP _0xDD
_0xDC:
	RJMP _0xDB
_0xDD:
; 0000 0370 {
; 0000 0371 y2++;
	LDI  R26,LOW(_y2)
	LDI  R27,HIGH(_y2)
	CALL SUBOPT_0x55
; 0000 0372 if (y2 > 9)
	LDS  R26,_y2
	LDS  R27,_y2+1
	SBIW R26,10
	BRLO _0xDE
; 0000 0373 y2 = 0;
	LDI  R30,LOW(0)
	STS  _y2,R30
	STS  _y2+1,R30
; 0000 0374 bit_phim = 0;
_0xDE:
	CLT
	BLD  R2,0
; 0000 0375 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CE
; 0000 0376 }
; 0000 0377 else
_0xDB:
; 0000 0378 {
; 0000 0379 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 037A delay_ms(25);
	LDI  R26,LOW(25)
_0x2CE:
	LDI  R27,0
	CALL _delay_ms
; 0000 037B }
; 0000 037C if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xE1
	SBRC R2,0
	RJMP _0xE2
_0xE1:
	RJMP _0xE0
_0xE2:
; 0000 037D {
; 0000 037E y2--;
	LDI  R26,LOW(_y2)
	LDI  R27,HIGH(_y2)
	CALL SUBOPT_0x5A
; 0000 037F if (y2 == -1)
	LDS  R26,_y2
	LDS  R27,_y2+1
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0xE3
; 0000 0380 y2 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	STS  _y2,R30
	STS  _y2+1,R31
; 0000 0381 bit_phim = 0;
_0xE3:
	CLT
	BLD  R2,0
; 0000 0382 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2CF
; 0000 0383 }
; 0000 0384 else
_0xE0:
; 0000 0385 {
; 0000 0386 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0387 delay_ms(25);
	LDI  R26,LOW(25)
_0x2CF:
	LDI  R27,0
	CALL _delay_ms
; 0000 0388 }
; 0000 0389 break;
	RJMP _0x98
; 0000 038A default:
_0xE5:
; 0000 038B cot = 1;
	CALL SUBOPT_0x5C
; 0000 038C break;
; 0000 038D }
_0x98:
; 0000 038E // luu
; 0000 038F if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0xE7
	SBRC R2,0
	RJMP _0xE8
_0xE7:
	RJMP _0xE6
_0xE8:
; 0000 0390 {
; 0000 0391 day1 = d1 * 10 + d2;
	CALL SUBOPT_0x62
	LDI  R30,LOW(10)
	CALL __MULB1W2U
	CALL SUBOPT_0x63
	ADD  R30,R26
	ADC  R31,R27
	STS  _day1,R30
	STS  _day1+1,R31
; 0000 0392 month1 = m1 * 10 + m2;
	CALL SUBOPT_0x64
	LDI  R30,LOW(10)
	CALL __MULB1W2U
	CALL SUBOPT_0x65
	ADD  R30,R26
	ADC  R31,R27
	STS  _month1,R30
	STS  _month1+1,R31
; 0000 0393 year1 = y1 * 10 + y2;
	CALL SUBOPT_0x51
	CALL SUBOPT_0x52
	STS  _year1,R30
	STS  _year1+1,R31
; 0000 0394 if ((day1 > 31) | (month1 > 12) | (day1 == 0) | (month1 == 0))
	LDS  R26,_day1
	LDS  R27,_day1+1
	LDI  R30,LOW(31)
	LDI  R31,HIGH(31)
	CALL __GTW12U
	MOV  R0,R30
	LDS  R26,_month1
	LDS  R27,_month1+1
	LDI  R30,LOW(12)
	LDI  R31,HIGH(12)
	CALL __GTW12U
	OR   R0,R30
	LDS  R26,_day1
	LDS  R27,_day1+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	CALL __EQW12
	OR   R0,R30
	LDS  R26,_month1
	LDS  R27,_month1+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	CALL __EQW12
	OR   R30,R0
	BREQ _0xE9
; 0000 0395 {
; 0000 0396 lcd_clear();
	CALL SUBOPT_0x5D
; 0000 0397 lcd_gotoxy(1, 1);
; 0000 0398 lcd_puts("nhap lai ngay thang!");
	__POINTW2MN _0x4F,65
	RJMP _0x2D0
; 0000 0399 delay_ms(500);
; 0000 039A lcd_clear();
; 0000 039B }
; 0000 039C else
_0xE9:
; 0000 039D {
; 0000 039E rtc_set_date(2, day1, month1, year1);
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDS  R30,_day1
	ST   -Y,R30
	LDS  R30,_month1
	ST   -Y,R30
	LDS  R26,_year1
	CALL _rtc_set_date
; 0000 039F cot = 1;
	CALL SUBOPT_0x5C
; 0000 03A0 lcd_clear();
	CALL SUBOPT_0x5E
; 0000 03A1 lcd_gotoxy(2, 1);
; 0000 03A2 lcd_puts("luu thanh cong!");
	__POINTW2MN _0x4F,86
_0x2D0:
	CALL _lcd_puts
; 0000 03A3 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 03A4 lcd_clear();
; 0000 03A5 }
; 0000 03A6 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 03A7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D1
; 0000 03A8 }
; 0000 03A9 else
_0xE6:
; 0000 03AA {
; 0000 03AB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 03AC delay_ms(25);
	LDI  R26,LOW(25)
_0x2D1:
	LDI  R27,0
	CALL _delay_ms
; 0000 03AD }
; 0000 03AE };
_0x95:
; 0000 03AF // hang 3
; 0000 03B0 if (hang == 2)
	CALL SUBOPT_0x60
	SBIW R26,2
	BREQ PC+2
	RJMP _0xEC
; 0000 03B1 {
; 0000 03B2 
; 0000 03B3 switch (cot)
	CALL SUBOPT_0x53
; 0000 03B4 {
; 0000 03B5 case 1:
	BREQ PC+2
	RJMP _0xF0
; 0000 03B6 
; 0000 03B7 lcd_gotoxy(6, 2);
	LDI  R30,LOW(6)
	CALL SUBOPT_0x3E
; 0000 03B8 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 03B9 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 03BA if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xF2
	SBRC R2,0
	RJMP _0xF3
_0xF2:
	RJMP _0xF1
_0xF3:
; 0000 03BB {
; 0000 03BC doam11 = doam11 + 10;
	CALL SUBOPT_0x66
	ADIW R30,10
	CALL SUBOPT_0x1B
; 0000 03BD if (doam11 > 99)
	CALL SUBOPT_0x2C
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0xF4
; 0000 03BE doam11 = doam11 - 100;
	CALL SUBOPT_0x66
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	CALL SUBOPT_0x1B
; 0000 03BF bit_phim = 0;
_0xF4:
	CLT
	BLD  R2,0
; 0000 03C0 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D2
; 0000 03C1 }
; 0000 03C2 else
_0xF1:
; 0000 03C3 {
; 0000 03C4 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 03C5 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D2:
	LDI  R27,0
	CALL _delay_ms
; 0000 03C6 }
; 0000 03C7 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0xF7
	SBRC R2,0
	RJMP _0xF8
_0xF7:
	RJMP _0xF6
_0xF8:
; 0000 03C8 {
; 0000 03C9 doam11 = doam11 - 10;
	CALL SUBOPT_0x66
	SBIW R30,10
	CALL SUBOPT_0x1B
; 0000 03CA if (doam11 < 0)
	LDS  R26,_doam11+1
	TST  R26
	BRPL _0xF9
; 0000 03CB doam11 = doam11 + 100;
	CALL SUBOPT_0x66
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	CALL SUBOPT_0x1B
; 0000 03CC bit_phim = 0;
_0xF9:
	CLT
	BLD  R2,0
; 0000 03CD delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D3
; 0000 03CE }
; 0000 03CF else
_0xF6:
; 0000 03D0 {
; 0000 03D1 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 03D2 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D3:
	LDI  R27,0
	CALL _delay_ms
; 0000 03D3 }
; 0000 03D4 break;
	RJMP _0xEF
; 0000 03D5 case 2:
_0xF0:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0xFB
; 0000 03D6 lcd_gotoxy(7, 2);
	LDI  R30,LOW(7)
	CALL SUBOPT_0x3E
; 0000 03D7 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 03D8 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 03D9 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0xFD
	SBRC R2,0
	RJMP _0xFE
_0xFD:
	RJMP _0xFC
_0xFE:
; 0000 03DA {
; 0000 03DB doam11++;
	LDI  R26,LOW(_doam11)
	LDI  R27,HIGH(_doam11)
	CALL SUBOPT_0x55
; 0000 03DC if ((doam11 - 1) % 10 == 9)
	CALL SUBOPT_0x2C
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0xFF
; 0000 03DD doam11 = doam11 - 10;
	CALL SUBOPT_0x66
	SBIW R30,10
	CALL SUBOPT_0x1B
; 0000 03DE bit_phim = 0;
_0xFF:
	CLT
	BLD  R2,0
; 0000 03DF delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D4
; 0000 03E0 }
; 0000 03E1 else
_0xFC:
; 0000 03E2 {
; 0000 03E3 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 03E4 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D4:
	LDI  R27,0
	CALL _delay_ms
; 0000 03E5 }
; 0000 03E6 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x102
	SBRC R2,0
	RJMP _0x103
_0x102:
	RJMP _0x101
_0x103:
; 0000 03E7 {
; 0000 03E8 doam11--;
	LDI  R26,LOW(_doam11)
	LDI  R27,HIGH(_doam11)
	CALL SUBOPT_0x5A
; 0000 03E9 if ((doam11 + 1) % 10 == 0)
	CALL SUBOPT_0x2C
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x104
; 0000 03EA doam11 = doam11 + 10;
	CALL SUBOPT_0x66
	ADIW R30,10
	CALL SUBOPT_0x1B
; 0000 03EB bit_phim = 0;
_0x104:
	CLT
	BLD  R2,0
; 0000 03EC delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D5
; 0000 03ED }
; 0000 03EE else
_0x101:
; 0000 03EF {
; 0000 03F0 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 03F1 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D5:
	LDI  R27,0
	CALL _delay_ms
; 0000 03F2 }
; 0000 03F3 break;
	RJMP _0xEF
; 0000 03F4 case 3:
_0xFB:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x106
; 0000 03F5 
; 0000 03F6 lcd_gotoxy(12, 2);
	LDI  R30,LOW(12)
	CALL SUBOPT_0x3E
; 0000 03F7 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 03F8 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 03F9 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x108
	SBRC R2,0
	RJMP _0x109
_0x108:
	RJMP _0x107
_0x109:
; 0000 03FA {
; 0000 03FB doam22 = doam22 + 10;
	CALL SUBOPT_0x67
	ADIW R30,10
	CALL SUBOPT_0x1C
; 0000 03FC if (doam22 > 99)
	CALL SUBOPT_0x2E
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x10A
; 0000 03FD doam22 = doam22 - 100;
	CALL SUBOPT_0x67
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	CALL SUBOPT_0x1C
; 0000 03FE bit_phim = 0;
_0x10A:
	CLT
	BLD  R2,0
; 0000 03FF delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D6
; 0000 0400 }
; 0000 0401 else
_0x107:
; 0000 0402 {
; 0000 0403 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0404 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D6:
	LDI  R27,0
	CALL _delay_ms
; 0000 0405 }
; 0000 0406 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x10D
	SBRC R2,0
	RJMP _0x10E
_0x10D:
	RJMP _0x10C
_0x10E:
; 0000 0407 {
; 0000 0408 doam22 = doam22 - 10;
	CALL SUBOPT_0x67
	SBIW R30,10
	CALL SUBOPT_0x1C
; 0000 0409 if (doam22 < 0)
	LDS  R26,_doam22+1
	TST  R26
	BRPL _0x10F
; 0000 040A doam22 = doam22 + 100;
	CALL SUBOPT_0x67
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	CALL SUBOPT_0x1C
; 0000 040B bit_phim = 0;
_0x10F:
	CLT
	BLD  R2,0
; 0000 040C delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D7
; 0000 040D }
; 0000 040E else
_0x10C:
; 0000 040F {
; 0000 0410 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0411 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D7:
	LDI  R27,0
	CALL _delay_ms
; 0000 0412 }
; 0000 0413 break;
	RJMP _0xEF
; 0000 0414 case 4:
_0x106:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x11C
; 0000 0415 lcd_gotoxy(13, 2);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x3E
; 0000 0416 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 0417 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0418 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x113
	SBRC R2,0
	RJMP _0x114
_0x113:
	RJMP _0x112
_0x114:
; 0000 0419 {
; 0000 041A doam22++;
	LDI  R26,LOW(_doam22)
	LDI  R27,HIGH(_doam22)
	CALL SUBOPT_0x55
; 0000 041B if ((doam22 - 1) % 10 == 9)
	CALL SUBOPT_0x2E
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x115
; 0000 041C doam22 = doam22 - 10;
	CALL SUBOPT_0x67
	SBIW R30,10
	CALL SUBOPT_0x1C
; 0000 041D bit_phim = 0;
_0x115:
	CLT
	BLD  R2,0
; 0000 041E delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D8
; 0000 041F }
; 0000 0420 else
_0x112:
; 0000 0421 {
; 0000 0422 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0423 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D8:
	LDI  R27,0
	CALL _delay_ms
; 0000 0424 }
; 0000 0425 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x118
	SBRC R2,0
	RJMP _0x119
_0x118:
	RJMP _0x117
_0x119:
; 0000 0426 {
; 0000 0427 doam22--;
	LDI  R26,LOW(_doam22)
	LDI  R27,HIGH(_doam22)
	CALL SUBOPT_0x5A
; 0000 0428 if ((doam22 + 1) % 10 == 0)
	CALL SUBOPT_0x2E
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x11A
; 0000 0429 doam22 = doam22 + 10;
	CALL SUBOPT_0x67
	ADIW R30,10
	CALL SUBOPT_0x1C
; 0000 042A bit_phim = 0;
_0x11A:
	CLT
	BLD  R2,0
; 0000 042B delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2D9
; 0000 042C }
; 0000 042D else
_0x117:
; 0000 042E {
; 0000 042F bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0430 delay_ms(25);
	LDI  R26,LOW(25)
_0x2D9:
	LDI  R27,0
	CALL _delay_ms
; 0000 0431 }
; 0000 0432 break;
	RJMP _0xEF
; 0000 0433 
; 0000 0434 default:
_0x11C:
; 0000 0435 cot = 1;
	CALL SUBOPT_0x5C
; 0000 0436 break;
; 0000 0437 }
_0xEF:
; 0000 0438 // luu
; 0000 0439 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x11E
	SBRC R2,0
	RJMP _0x11F
_0x11E:
	RJMP _0x11D
_0x11F:
; 0000 043A {
; 0000 043B if (doam11 < doam22)
	CALL SUBOPT_0x67
	CALL SUBOPT_0x2C
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x120
; 0000 043C {
; 0000 043D EEPROM_write(0, doam11);
	CALL SUBOPT_0x2D
; 0000 043E EEPROM_write(1, doam22);
	CALL SUBOPT_0x2F
; 0000 043F cot = 1;
	CALL SUBOPT_0x5C
; 0000 0440 sprintf(enthernet, "%s,doam_low,%d %c%c%c", IP, doam11, 0, 13, 10);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,445
	CALL SUBOPT_0x69
	CALL SUBOPT_0x66
	CALL SUBOPT_0x38
	CALL SUBOPT_0x6A
	CALL SUBOPT_0x11
; 0000 0441 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0442 delay_ms(100);
	CALL SUBOPT_0x6C
; 0000 0443 sprintf(enthernet, "%s,doam_high,%d %c%c%c", IP, doam22, 0, 13, 10);
	__POINTW1FN _0x0,467
	CALL SUBOPT_0x69
	CALL SUBOPT_0x67
	CALL SUBOPT_0x38
	CALL SUBOPT_0x6A
	CALL SUBOPT_0x11
; 0000 0444 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0445 delay_ms(100);
	CALL SUBOPT_0xC
; 0000 0446 lcd_clear();
; 0000 0447 lcd_gotoxy(2, 1);
	LDI  R30,LOW(2)
	CALL SUBOPT_0x6D
; 0000 0448 lcd_puts("luu thanh cong!");
	__POINTW2MN _0x4F,102
	CALL SUBOPT_0x6E
; 0000 0449 delay_ms(500);
; 0000 044A lcd_clear();
; 0000 044B bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 044C delay_ms(50);
	CALL SUBOPT_0xA
; 0000 044D }
; 0000 044E else
	RJMP _0x121
_0x120:
; 0000 044F {
; 0000 0450 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 0451 lcd_gotoxy(2, 2);
	LDI  R30,LOW(2)
	CALL SUBOPT_0x3E
; 0000 0452 lcd_clear();
	CALL SUBOPT_0x6F
; 0000 0453 sprintf(lcd, "!!nhap lai nguong!!");
	CALL SUBOPT_0x70
; 0000 0454 lcd_puts(lcd);
; 0000 0455 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 0456 lcd_clear();
; 0000 0457 }
_0x121:
; 0000 0458 }
; 0000 0459 else
	RJMP _0x122
_0x11D:
; 0000 045A {
; 0000 045B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 045C delay_ms(25);
	CALL SUBOPT_0x1
; 0000 045D }
_0x122:
; 0000 045E };
_0xEC:
; 0000 045F // hang 4
; 0000 0460 if (hang == 3)
	CALL SUBOPT_0x60
	SBIW R26,3
	BREQ PC+2
	RJMP _0x123
; 0000 0461 {
; 0000 0462 
; 0000 0463 switch (cot)
	CALL SUBOPT_0x53
; 0000 0464 {
; 0000 0465 case 1:
	BREQ PC+2
	RJMP _0x127
; 0000 0466 lcd_gotoxy(6, 3);
	LDI  R30,LOW(6)
	CALL SUBOPT_0x71
; 0000 0467 delay_ms(200);
; 0000 0468 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0469 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x129
	SBRC R2,0
	RJMP _0x12A
_0x129:
	RJMP _0x128
_0x12A:
; 0000 046A {
; 0000 046B nhietdo11 = nhietdo11 + 10;
	CALL SUBOPT_0x72
	ADIW R30,10
	CALL SUBOPT_0x1D
; 0000 046C if (nhietdo11 > 99)
	CALL SUBOPT_0x30
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x12B
; 0000 046D nhietdo11 = nhietdo11 - 100;
	CALL SUBOPT_0x72
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	CALL SUBOPT_0x1D
; 0000 046E bit_phim = 0;
_0x12B:
	CLT
	BLD  R2,0
; 0000 046F delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DA
; 0000 0470 }
; 0000 0471 else
_0x128:
; 0000 0472 {
; 0000 0473 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0474 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DA:
	LDI  R27,0
	CALL _delay_ms
; 0000 0475 }
; 0000 0476 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x12E
	SBRC R2,0
	RJMP _0x12F
_0x12E:
	RJMP _0x12D
_0x12F:
; 0000 0477 {
; 0000 0478 nhietdo11 = nhietdo11 - 10;
	CALL SUBOPT_0x72
	SBIW R30,10
	CALL SUBOPT_0x1D
; 0000 0479 if (nhietdo11 < 0)
	LDS  R26,_nhietdo11+1
	TST  R26
	BRPL _0x130
; 0000 047A nhietdo11 = nhietdo11 + 100;
	CALL SUBOPT_0x72
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	CALL SUBOPT_0x1D
; 0000 047B bit_phim = 0;
_0x130:
	CLT
	BLD  R2,0
; 0000 047C delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DB
; 0000 047D }
; 0000 047E else
_0x12D:
; 0000 047F {
; 0000 0480 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0481 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DB:
	LDI  R27,0
	CALL _delay_ms
; 0000 0482 }
; 0000 0483 
; 0000 0484 break;
	RJMP _0x126
; 0000 0485 case 2:
_0x127:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x132
; 0000 0486 
; 0000 0487 lcd_gotoxy(7, 3);
	LDI  R30,LOW(7)
	CALL SUBOPT_0x71
; 0000 0488 delay_ms(200);
; 0000 0489 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 048A if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x134
	SBRC R2,0
	RJMP _0x135
_0x134:
	RJMP _0x133
_0x135:
; 0000 048B {
; 0000 048C nhietdo11++;
	LDI  R26,LOW(_nhietdo11)
	LDI  R27,HIGH(_nhietdo11)
	CALL SUBOPT_0x55
; 0000 048D if ((nhietdo11 - 1) % 10 == 9)
	CALL SUBOPT_0x30
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x136
; 0000 048E nhietdo11 = nhietdo11 - 10;
	CALL SUBOPT_0x72
	SBIW R30,10
	CALL SUBOPT_0x1D
; 0000 048F bit_phim = 0;
_0x136:
	CLT
	BLD  R2,0
; 0000 0490 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DC
; 0000 0491 }
; 0000 0492 else
_0x133:
; 0000 0493 {
; 0000 0494 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0495 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DC:
	LDI  R27,0
	CALL _delay_ms
; 0000 0496 }
; 0000 0497 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x139
	SBRC R2,0
	RJMP _0x13A
_0x139:
	RJMP _0x138
_0x13A:
; 0000 0498 {
; 0000 0499 nhietdo11--;
	LDI  R26,LOW(_nhietdo11)
	LDI  R27,HIGH(_nhietdo11)
	CALL SUBOPT_0x5A
; 0000 049A if ((nhietdo11 + 1) % 10 == 0)
	CALL SUBOPT_0x30
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x13B
; 0000 049B nhietdo11 = nhietdo11 + 10;
	CALL SUBOPT_0x72
	ADIW R30,10
	CALL SUBOPT_0x1D
; 0000 049C bit_phim = 0;
_0x13B:
	CLT
	BLD  R2,0
; 0000 049D delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DD
; 0000 049E }
; 0000 049F else
_0x138:
; 0000 04A0 {
; 0000 04A1 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 04A2 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DD:
	LDI  R27,0
	CALL _delay_ms
; 0000 04A3 }
; 0000 04A4 break;
	RJMP _0x126
; 0000 04A5 case 3:
_0x132:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x13D
; 0000 04A6 
; 0000 04A7 lcd_gotoxy(12, 3);
	LDI  R30,LOW(12)
	CALL SUBOPT_0x71
; 0000 04A8 delay_ms(200);
; 0000 04A9 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 04AA if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x13F
	SBRC R2,0
	RJMP _0x140
_0x13F:
	RJMP _0x13E
_0x140:
; 0000 04AB {
; 0000 04AC nhietdo22 = nhietdo22 + 10;
	CALL SUBOPT_0x73
	ADIW R30,10
	CALL SUBOPT_0x1E
; 0000 04AD if (nhietdo22 > 99)
	CALL SUBOPT_0x32
	CPI  R26,LOW(0x64)
	LDI  R30,HIGH(0x64)
	CPC  R27,R30
	BRLT _0x141
; 0000 04AE nhietdo22 = nhietdo22 - 100;
	CALL SUBOPT_0x73
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	CALL SUBOPT_0x1E
; 0000 04AF bit_phim = 0;
_0x141:
	CLT
	BLD  R2,0
; 0000 04B0 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DE
; 0000 04B1 }
; 0000 04B2 else
_0x13E:
; 0000 04B3 {
; 0000 04B4 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 04B5 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DE:
	LDI  R27,0
	CALL _delay_ms
; 0000 04B6 }
; 0000 04B7 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x144
	SBRC R2,0
	RJMP _0x145
_0x144:
	RJMP _0x143
_0x145:
; 0000 04B8 {
; 0000 04B9 nhietdo22 = nhietdo22 - 10;
	CALL SUBOPT_0x73
	SBIW R30,10
	CALL SUBOPT_0x1E
; 0000 04BA if (nhietdo22 < 0)
	LDS  R26,_nhietdo22+1
	TST  R26
	BRPL _0x146
; 0000 04BB nhietdo22 = nhietdo22 + 100;
	CALL SUBOPT_0x73
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	CALL SUBOPT_0x1E
; 0000 04BC bit_phim = 0;
_0x146:
	CLT
	BLD  R2,0
; 0000 04BD delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2DF
; 0000 04BE }
; 0000 04BF else
_0x143:
; 0000 04C0 {
; 0000 04C1 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 04C2 delay_ms(25);
	LDI  R26,LOW(25)
_0x2DF:
	LDI  R27,0
	CALL _delay_ms
; 0000 04C3 }
; 0000 04C4 break;
	RJMP _0x126
; 0000 04C5 case 4:
_0x13D:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x153
; 0000 04C6 lcd_gotoxy(13, 3);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x71
; 0000 04C7 delay_ms(200);
; 0000 04C8 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 04C9 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x14A
	SBRC R2,0
	RJMP _0x14B
_0x14A:
	RJMP _0x149
_0x14B:
; 0000 04CA {
; 0000 04CB nhietdo22++;
	LDI  R26,LOW(_nhietdo22)
	LDI  R27,HIGH(_nhietdo22)
	CALL SUBOPT_0x55
; 0000 04CC if ((nhietdo22 - 1) % 10 == 9)
	CALL SUBOPT_0x32
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x14C
; 0000 04CD nhietdo22 = nhietdo22 - 10;
	CALL SUBOPT_0x73
	SBIW R30,10
	CALL SUBOPT_0x1E
; 0000 04CE bit_phim = 0;
_0x14C:
	CLT
	BLD  R2,0
; 0000 04CF delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E0
; 0000 04D0 }
; 0000 04D1 else
_0x149:
; 0000 04D2 {
; 0000 04D3 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 04D4 delay_ms(25);
	LDI  R26,LOW(25)
_0x2E0:
	LDI  R27,0
	CALL _delay_ms
; 0000 04D5 }
; 0000 04D6 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x14F
	SBRC R2,0
	RJMP _0x150
_0x14F:
	RJMP _0x14E
_0x150:
; 0000 04D7 {
; 0000 04D8 nhietdo22--;
	LDI  R26,LOW(_nhietdo22)
	LDI  R27,HIGH(_nhietdo22)
	CALL SUBOPT_0x5A
; 0000 04D9 if ((nhietdo22 + 1) % 10 == 0)
	CALL SUBOPT_0x32
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x151
; 0000 04DA nhietdo22 = nhietdo22 + 10;
	CALL SUBOPT_0x73
	ADIW R30,10
	CALL SUBOPT_0x1E
; 0000 04DB bit_phim = 0;
_0x151:
	CLT
	BLD  R2,0
; 0000 04DC delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E1
; 0000 04DD }
; 0000 04DE else
_0x14E:
; 0000 04DF {
; 0000 04E0 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 04E1 delay_ms(25);
	LDI  R26,LOW(25)
_0x2E1:
	LDI  R27,0
	CALL _delay_ms
; 0000 04E2 }
; 0000 04E3 break;
	RJMP _0x126
; 0000 04E4 default:
_0x153:
; 0000 04E5 cot = 1;
	CALL SUBOPT_0x5C
; 0000 04E6 break;
; 0000 04E7 }
_0x126:
; 0000 04E8 // luu
; 0000 04E9 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x155
	SBRC R2,0
	RJMP _0x156
_0x155:
	RJMP _0x154
_0x156:
; 0000 04EA {
; 0000 04EB if (nhietdo11 < nhietdo22)
	CALL SUBOPT_0x73
	CALL SUBOPT_0x30
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x157
; 0000 04EC {
; 0000 04ED EEPROM_write(2, nhietdo11);
	CALL SUBOPT_0x31
; 0000 04EE EEPROM_write(3, nhietdo22);
	CALL SUBOPT_0x33
; 0000 04EF cot = 1;
	CALL SUBOPT_0x5C
; 0000 04F0 sprintf(enthernet, "%s,nhietdo_lower,%d %c%c%c", IP, nhietdo11, 0, 13, 10);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,510
	CALL SUBOPT_0x69
	CALL SUBOPT_0x72
	CALL SUBOPT_0x38
	CALL SUBOPT_0x6A
	CALL SUBOPT_0x11
; 0000 04F1 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 04F2 delay_ms(100);
	CALL SUBOPT_0x6C
; 0000 04F3 sprintf(enthernet, "%s,nhietdo_high,%d %c%c%c", IP, nhietdo22, 0, 13, 10);
	__POINTW1FN _0x0,537
	CALL SUBOPT_0x69
	CALL SUBOPT_0x73
	CALL SUBOPT_0x38
	CALL SUBOPT_0x6A
	CALL SUBOPT_0x11
; 0000 04F4 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 04F5 delay_ms(100);
	CALL SUBOPT_0xC
; 0000 04F6 lcd_clear();
; 0000 04F7 lcd_gotoxy(2, 1);
	LDI  R30,LOW(2)
	CALL SUBOPT_0x6D
; 0000 04F8 lcd_puts("luu thanh cong!");
	__POINTW2MN _0x4F,118
	CALL SUBOPT_0x6E
; 0000 04F9 delay_ms(500);
; 0000 04FA lcd_clear();
; 0000 04FB bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 04FC delay_ms(50);
	CALL SUBOPT_0xA
; 0000 04FD }
; 0000 04FE else
	RJMP _0x158
_0x157:
; 0000 04FF {
; 0000 0500 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 0501 lcd_gotoxy(2, 2);
	LDI  R30,LOW(2)
	CALL SUBOPT_0x3E
; 0000 0502 lcd_clear();
	CALL SUBOPT_0x6F
; 0000 0503 sprintf(lcd, "!!nhap lai nguong!!");
	CALL SUBOPT_0x70
; 0000 0504 lcd_puts(lcd);
; 0000 0505 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 0506 lcd_clear();
; 0000 0507 }
_0x158:
; 0000 0508 }
; 0000 0509 else
	RJMP _0x159
_0x154:
; 0000 050A {
; 0000 050B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 050C delay_ms(25);
	CALL SUBOPT_0x1
; 0000 050D }
_0x159:
; 0000 050E };
_0x123:
; 0000 050F }
; 0000 0510 if (strcmp(hienthi, "setDC") == 0)
_0x58:
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,134
	CALL _strcmp
	CPI  R30,0
	BREQ PC+2
	RJMP _0x15A
; 0000 0511 {
; 0000 0512 sdt_call1 = EEPROM_read(11);
	CALL SUBOPT_0x74
; 0000 0513 sdt_call2 = EEPROM_read(12);
; 0000 0514 sdt_call3 = EEPROM_read(13);
; 0000 0515 sdt_call4 = EEPROM_read(14);
; 0000 0516 sdt_call5 = EEPROM_read(15);
; 0000 0517 sdt_call6 = EEPROM_read(16);
	CALL SUBOPT_0x75
; 0000 0518 sdt_call7 = EEPROM_read(17);
	CALL SUBOPT_0x76
; 0000 0519 sdt_call8 = EEPROM_read(18);
	CALL SUBOPT_0x77
; 0000 051A sdt_call9 = EEPROM_read(19);
	CALL SUBOPT_0x78
; 0000 051B sdt_sms1 = EEPROM_read(21);
	LDI  R26,LOW(21)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x79
; 0000 051C sdt_sms2 = EEPROM_read(22);
	LDI  R26,LOW(22)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7A
; 0000 051D sdt_sms3 = EEPROM_read(23);
	LDI  R26,LOW(23)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7B
; 0000 051E sdt_sms4 = EEPROM_read(24);
	LDI  R26,LOW(24)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7C
; 0000 051F sdt_sms5 = EEPROM_read(25);
	LDI  R26,LOW(25)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7D
; 0000 0520 sdt_sms6 = EEPROM_read(26);
	LDI  R26,LOW(26)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7E
; 0000 0521 sdt_sms7 = EEPROM_read(27);
	LDI  R26,LOW(27)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7F
; 0000 0522 sdt_sms8 = EEPROM_read(28);
	LDI  R26,LOW(28)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x80
; 0000 0523 sdt_sms9 = EEPROM_read(29);
	LDI  R26,LOW(29)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x81
; 0000 0524 // if ((sdt_sms1 > 9) | (sdt_sms2 > 9) | (sdt_sms3 > 9) | (sdt_sms4 > 9) | (sdt_ ...
; 0000 0525 // {
; 0000 0526 //    sdt_sms1 = sdt_sms2 = sdt_sms3 = sdt_sms4 = sdt_sms5 = sdt_sms6 = sdt_sms7 ...
; 0000 0527 //    EEPROM_write(21, sdt_sms1);
; 0000 0528 //    EEPROM_write(22, sdt_sms2);
; 0000 0529 //    EEPROM_write(23, sdt_sms3);
; 0000 052A //    EEPROM_write(24, sdt_sms4);
; 0000 052B //    EEPROM_write(25, sdt_sms5);
; 0000 052C //    EEPROM_write(26, sdt_sms6);
; 0000 052D //    EEPROM_write(27, sdt_sms7);
; 0000 052E //    EEPROM_write(28, sdt_sms8);
; 0000 052F //    EEPROM_write(29, sdt_sms9);
; 0000 0530 // }
; 0000 0531 // if ((sdt_call1 > 9) | (sdt_call2 > 9) | (sdt_call3 > 9) | (sdt_call4 > 9) | ( ...
; 0000 0532 // {
; 0000 0533 //    sdt_call1 = sdt_call2 = sdt_call3 = sdt_call4 = sdt_call5 = sdt_call6 = sd ...
; 0000 0534 //    EEPROM_write(11, sdt_call1);
; 0000 0535 //    EEPROM_write(12, sdt_call2);
; 0000 0536 //    EEPROM_write(13, sdt_call3);
; 0000 0537 //    EEPROM_write(14, sdt_call4);
; 0000 0538 //    EEPROM_write(15, sdt_call5);
; 0000 0539 //    EEPROM_write(16, sdt_call6);
; 0000 053A //    EEPROM_write(17, sdt_call7);
; 0000 053B //    EEPROM_write(18, sdt_call8);
; 0000 053C //    EEPROM_write(19, sdt_call9);
; 0000 053D // }
; 0000 053E ////////////////////////////////
; 0000 053F for (i = 1; i < 4; i++)
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _i,R30
	STS  _i+1,R31
_0x15C:
	CALL SUBOPT_0x14
	SBIW R26,4
	BRGE _0x15D
; 0000 0540 if (i == hang - 3)
	CALL SUBOPT_0x15
	SBIW R30,3
	CALL SUBOPT_0x16
	BRNE _0x15E
; 0000 0541 {
; 0000 0542 lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 0543 lcd_putchar('<');
	LDI  R26,LOW(60)
	RJMP _0x2E2
; 0000 0544 }
; 0000 0545 else
_0x15E:
; 0000 0546 {
; 0000 0547 lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 0548 lcd_putchar(' ');
	LDI  R26,LOW(32)
_0x2E2:
	CALL _lcd_putchar
; 0000 0549 }
	CALL SUBOPT_0x8
	RJMP _0x15C
_0x15D:
; 0000 054A lcd_gotoxy(3, 0);
	LDI  R30,LOW(3)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _lcd_gotoxy
; 0000 054B sprintf(lcd, "Cai dat muc DC");
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,569
	CALL SUBOPT_0x82
; 0000 054C lcd_puts(lcd);
; 0000 054D lcd_gotoxy(0, 1);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x3A
; 0000 054E sprintf(lcd, "DC_low_1: %1d%1d,%1d", dc_low_1 / 100, (dc_low_1 % 100) / 10, dc_l ...
	__POINTW1FN _0x0,584
	CALL SUBOPT_0x83
	CALL SUBOPT_0x84
	CALL SUBOPT_0x85
	CALL SUBOPT_0x86
	CALL SUBOPT_0x38
	CALL SUBOPT_0x87
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 054F lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 0550 lcd_gotoxy(0, 2);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x3E
; 0000 0551 sprintf(lcd, "DC_low_2: %1d%1d,%1d", dc_low_2 / 100, (dc_low_2 % 100) / 10, dc_l ...
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,605
	CALL SUBOPT_0x88
	CALL SUBOPT_0x84
	CALL SUBOPT_0x89
	CALL SUBOPT_0x86
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0552 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 0553 lcd_gotoxy(0, 3);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x43
; 0000 0554 sprintf(lcd, "DC_high : %1d%1d,%1d", dc_high / 100, (dc_high % 100) / 10, dc_hig ...
	__POINTW1FN _0x0,626
	CALL SUBOPT_0x8B
	CALL SUBOPT_0x84
	CALL SUBOPT_0x8C
	CALL SUBOPT_0x86
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8D
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0555 lcd_puts(lcd);
	CALL SUBOPT_0x3D
; 0000 0556 //
; 0000 0557 // hang1
; 0000 0558 if (hang - 4 == 0)
	CALL SUBOPT_0x15
	SBIW R30,4
	BREQ PC+2
	RJMP _0x160
; 0000 0559 {
; 0000 055A 
; 0000 055B switch (cot)
	CALL SUBOPT_0x53
; 0000 055C {
; 0000 055D case 1:
	BREQ PC+2
	RJMP _0x164
; 0000 055E 
; 0000 055F lcd_gotoxy(10, 1);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x61
; 0000 0560 delay_ms(200);
; 0000 0561 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0562 // phim up
; 0000 0563 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x166
	SBRC R2,0
	RJMP _0x167
_0x166:
	RJMP _0x165
_0x167:
; 0000 0564 {
; 0000 0565 dc_low_1 = dc_low_1 + 100;
	CALL SUBOPT_0x8E
	CALL SUBOPT_0x8F
; 0000 0566 if (dc_low_1 >= 1000)
	CALL SUBOPT_0x85
	CPI  R26,LOW(0x3E8)
	LDI  R30,HIGH(0x3E8)
	CPC  R27,R30
	BRLT _0x168
; 0000 0567 dc_low_1 = dc_low_1 - 1000;
	CALL SUBOPT_0x8E
	SUBI R30,LOW(1000)
	SBCI R31,HIGH(1000)
	CALL SUBOPT_0x90
; 0000 0568 bit_phim = 0;
_0x168:
	CLT
	BLD  R2,0
; 0000 0569 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E3
; 0000 056A }
; 0000 056B else
_0x165:
; 0000 056C {
; 0000 056D bit_phim = 1;
	SET
	BLD  R2,0
; 0000 056E delay_ms(25);
	LDI  R26,LOW(25)
_0x2E3:
	LDI  R27,0
	CALL _delay_ms
; 0000 056F }
; 0000 0570 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x16B
	SBRC R2,0
	RJMP _0x16C
_0x16B:
	RJMP _0x16A
_0x16C:
; 0000 0571 {
; 0000 0572 dc_low_1 = dc_low_1 - 100;
	CALL SUBOPT_0x91
; 0000 0573 if (dc_low_1 < 0)
	LDS  R26,_dc_low_1+1
	TST  R26
	BRPL _0x16D
; 0000 0574 dc_low_1 = dc_low_1 + 1000;
	CALL SUBOPT_0x8E
	SUBI R30,LOW(-1000)
	SBCI R31,HIGH(-1000)
	CALL SUBOPT_0x90
; 0000 0575 bit_phim = 0;
_0x16D:
	CLT
	BLD  R2,0
; 0000 0576 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E4
; 0000 0577 }
; 0000 0578 else
_0x16A:
; 0000 0579 {
; 0000 057A bit_phim = 1;
	SET
	BLD  R2,0
; 0000 057B delay_ms(25);
	LDI  R26,LOW(25)
_0x2E4:
	LDI  R27,0
	CALL _delay_ms
; 0000 057C }
; 0000 057D break;
	RJMP _0x163
; 0000 057E case 2:
_0x164:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x16F
; 0000 057F 
; 0000 0580 lcd_gotoxy(11, 1);
	LDI  R30,LOW(11)
	CALL SUBOPT_0x61
; 0000 0581 delay_ms(200);
; 0000 0582 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0583 
; 0000 0584 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x171
	SBRC R2,0
	RJMP _0x172
_0x171:
	RJMP _0x170
_0x172:
; 0000 0585 {
; 0000 0586 dc_low_1 = dc_low_1 + 10;
	CALL SUBOPT_0x8E
	ADIW R30,10
	CALL SUBOPT_0x90
; 0000 0587 if (((dc_low_1 - 10) / 10) % 10 == 9)
	CALL SUBOPT_0x85
	SBIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x173
; 0000 0588 dc_low_1 = dc_low_1 - 100;
	CALL SUBOPT_0x91
; 0000 0589 bit_phim = 0;
_0x173:
	CLT
	BLD  R2,0
; 0000 058A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E5
; 0000 058B }
; 0000 058C else
_0x170:
; 0000 058D {
; 0000 058E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 058F delay_ms(25);
	LDI  R26,LOW(25)
_0x2E5:
	LDI  R27,0
	CALL _delay_ms
; 0000 0590 }
; 0000 0591 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x176
	SBRC R2,0
	RJMP _0x177
_0x176:
	RJMP _0x175
_0x177:
; 0000 0592 {
; 0000 0593 dc_low_1 = dc_low_1 - 10;
	CALL SUBOPT_0x8E
	SBIW R30,10
	CALL SUBOPT_0x90
; 0000 0594 if (((dc_low_1 + 10) / 10) % 10 == 0)
	CALL SUBOPT_0x85
	ADIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x178
; 0000 0595 dc_low_1 = dc_low_1 + 100;
	CALL SUBOPT_0x8E
	CALL SUBOPT_0x8F
; 0000 0596 bit_phim = 0;
_0x178:
	CLT
	BLD  R2,0
; 0000 0597 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E6
; 0000 0598 }
; 0000 0599 else
_0x175:
; 0000 059A {
; 0000 059B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 059C delay_ms(25);
	LDI  R26,LOW(25)
_0x2E6:
	LDI  R27,0
	CALL _delay_ms
; 0000 059D }
; 0000 059E break;
	RJMP _0x163
; 0000 059F case 3:
_0x16F:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x185
; 0000 05A0 
; 0000 05A1 lcd_gotoxy(13, 1);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x61
; 0000 05A2 delay_ms(200);
; 0000 05A3 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 05A4 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x17C
	SBRC R2,0
	RJMP _0x17D
_0x17C:
	RJMP _0x17B
_0x17D:
; 0000 05A5 {
; 0000 05A6 dc_low_1++;
	LDI  R26,LOW(_dc_low_1)
	LDI  R27,HIGH(_dc_low_1)
	CALL SUBOPT_0x55
; 0000 05A7 if (((dc_low_1 - 1) % 10) == 9)
	CALL SUBOPT_0x85
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x17E
; 0000 05A8 dc_low_1 = dc_low_1 - 10;
	CALL SUBOPT_0x8E
	SBIW R30,10
	CALL SUBOPT_0x90
; 0000 05A9 bit_phim = 0;
_0x17E:
	CLT
	BLD  R2,0
; 0000 05AA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E7
; 0000 05AB }
; 0000 05AC else
_0x17B:
; 0000 05AD {
; 0000 05AE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 05AF delay_ms(25);
	LDI  R26,LOW(25)
_0x2E7:
	LDI  R27,0
	CALL _delay_ms
; 0000 05B0 }
; 0000 05B1 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x181
	SBRC R2,0
	RJMP _0x182
_0x181:
	RJMP _0x180
_0x182:
; 0000 05B2 {
; 0000 05B3 dc_low_1--;
	LDI  R26,LOW(_dc_low_1)
	LDI  R27,HIGH(_dc_low_1)
	CALL SUBOPT_0x5A
; 0000 05B4 if (((dc_low_1 + 1) % 10) == 0)
	CALL SUBOPT_0x85
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x183
; 0000 05B5 dc_low_1 = dc_low_1 + 10;
	CALL SUBOPT_0x8E
	ADIW R30,10
	CALL SUBOPT_0x90
; 0000 05B6 bit_phim = 0;
_0x183:
	CLT
	BLD  R2,0
; 0000 05B7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2E8
; 0000 05B8 }
; 0000 05B9 else
_0x180:
; 0000 05BA {
; 0000 05BB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 05BC delay_ms(25);
	LDI  R26,LOW(25)
_0x2E8:
	LDI  R27,0
	CALL _delay_ms
; 0000 05BD }
; 0000 05BE break;
	RJMP _0x163
; 0000 05BF default:
_0x185:
; 0000 05C0 cot = 1;
	CALL SUBOPT_0x5C
; 0000 05C1 delay_ms(25);
	CALL SUBOPT_0x1
; 0000 05C2 break;
; 0000 05C3 }
_0x163:
; 0000 05C4 // luu
; 0000 05C5 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x187
	SBRC R2,0
	RJMP _0x188
_0x187:
	RJMP _0x186
_0x188:
; 0000 05C6 {
; 0000 05C7 if ((dc_low_1 != 0) & (dc_low_1 < EEPROM_read(33) * 10 + EEPROM_read(34)))
	CALL SUBOPT_0x85
	CALL SUBOPT_0x92
	PUSH R30
	CALL SUBOPT_0x93
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	CALL SUBOPT_0x85
	CALL __LTW12
	POP  R26
	AND  R30,R26
	BREQ _0x189
; 0000 05C8 {
; 0000 05C9 lcd_clear();
	CALL _lcd_clear
; 0000 05CA EEPROM_write(31, dc_low_1 / 10);
	LDI  R30,LOW(31)
	LDI  R31,HIGH(31)
	CALL SUBOPT_0x83
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x4C
; 0000 05CB EEPROM_write(32, dc_low_1 % 10);
	CALL SUBOPT_0x94
; 0000 05CC cot = 1;
; 0000 05CD lcd_gotoxy(3, 1);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x6D
; 0000 05CE sprintf(enthernet, "%s,dienap_low,%d.%d", IP, dc_low_1 / 10, dc_low_1 % 10);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,647
	CALL SUBOPT_0x69
	CALL SUBOPT_0x85
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x87
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 05CF puts1(enthernet);
	CALL SUBOPT_0x95
; 0000 05D0 sprintf(lcd, "Da luu nguong");
	CALL SUBOPT_0x96
; 0000 05D1 lcd_puts(lcd);
; 0000 05D2 lcd_gotoxy(3, 2);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x3E
; 0000 05D3 sprintf(lcd, "DC_low_1:%d,%dV", dc_low_1 / 10, dc_low_1 % 10);
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,681
	CALL SUBOPT_0x83
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x87
	CALL SUBOPT_0x38
	CALL SUBOPT_0x97
; 0000 05D4 lcd_puts(lcd);
	RJMP _0x2E9
; 0000 05D5 delay_ms(500);
; 0000 05D6 lcd_clear();
; 0000 05D7 }
; 0000 05D8 else
_0x189:
; 0000 05D9 {
; 0000 05DA lcd_clear();
	CALL SUBOPT_0x5E
; 0000 05DB lcd_gotoxy(2, 1);
; 0000 05DC lcd_puts("Kiem tra lai muc DC_low_1!");
	__POINTW2MN _0x4F,140
_0x2E9:
	CALL _lcd_puts
; 0000 05DD delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 05DE lcd_clear();
; 0000 05DF }
; 0000 05E0 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 05E1 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2EA
; 0000 05E2 }
; 0000 05E3 else
_0x186:
; 0000 05E4 {
; 0000 05E5 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 05E6 
; 0000 05E7 delay_ms(25);
	LDI  R26,LOW(25)
_0x2EA:
	LDI  R27,0
	CALL _delay_ms
; 0000 05E8 }
; 0000 05E9 };
_0x160:
; 0000 05EA // hang 2
; 0000 05EB if (hang - 4 == 1)
	CALL SUBOPT_0x15
	SBIW R30,4
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x18C
; 0000 05EC {
; 0000 05ED 
; 0000 05EE switch (cot)
	CALL SUBOPT_0x53
; 0000 05EF {
; 0000 05F0 case 1:
	BREQ PC+2
	RJMP _0x190
; 0000 05F1 
; 0000 05F2 lcd_gotoxy(10, 2);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x3E
; 0000 05F3 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 05F4 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 05F5 // phim up
; 0000 05F6 
; 0000 05F7 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x192
	SBRC R2,0
	RJMP _0x193
_0x192:
	RJMP _0x191
_0x193:
; 0000 05F8 {
; 0000 05F9 dc_low_2 = dc_low_2 + 100;
	CALL SUBOPT_0x98
	CALL SUBOPT_0x99
; 0000 05FA if (dc_low_2 >= 1000)
	CALL SUBOPT_0x89
	CPI  R26,LOW(0x3E8)
	LDI  R30,HIGH(0x3E8)
	CPC  R27,R30
	BRLT _0x194
; 0000 05FB dc_low_2 = dc_low_2 - 1000;
	CALL SUBOPT_0x98
	SUBI R30,LOW(1000)
	SBCI R31,HIGH(1000)
	CALL SUBOPT_0x9A
; 0000 05FC bit_phim = 0;
_0x194:
	CLT
	BLD  R2,0
; 0000 05FD delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2EB
; 0000 05FE }
; 0000 05FF else
_0x191:
; 0000 0600 {
; 0000 0601 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0602 delay_ms(25);
	LDI  R26,LOW(25)
_0x2EB:
	LDI  R27,0
	CALL _delay_ms
; 0000 0603 }
; 0000 0604 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x197
	SBRC R2,0
	RJMP _0x198
_0x197:
	RJMP _0x196
_0x198:
; 0000 0605 {
; 0000 0606 dc_low_2 = dc_low_2 - 100;
	CALL SUBOPT_0x9B
; 0000 0607 if (dc_low_2 < 0)
	LDS  R26,_dc_low_2+1
	TST  R26
	BRPL _0x199
; 0000 0608 dc_low_2 = dc_low_2 + 1000;
	CALL SUBOPT_0x98
	SUBI R30,LOW(-1000)
	SBCI R31,HIGH(-1000)
	CALL SUBOPT_0x9A
; 0000 0609 bit_phim = 0;
_0x199:
	CLT
	BLD  R2,0
; 0000 060A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2EC
; 0000 060B }
; 0000 060C else
_0x196:
; 0000 060D {
; 0000 060E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 060F delay_ms(25);
	LDI  R26,LOW(25)
_0x2EC:
	LDI  R27,0
	CALL _delay_ms
; 0000 0610 }
; 0000 0611 break;
	RJMP _0x18F
; 0000 0612 case 2:
_0x190:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x19B
; 0000 0613 
; 0000 0614 lcd_gotoxy(11, 2);
	LDI  R30,LOW(11)
	CALL SUBOPT_0x3E
; 0000 0615 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 0616 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0617 
; 0000 0618 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x19D
	SBRC R2,0
	RJMP _0x19E
_0x19D:
	RJMP _0x19C
_0x19E:
; 0000 0619 {
; 0000 061A dc_low_2 = dc_low_2 + 10;
	CALL SUBOPT_0x98
	ADIW R30,10
	CALL SUBOPT_0x9A
; 0000 061B if (((dc_low_2 - 10) / 10) % 10 == 9)
	CALL SUBOPT_0x89
	SBIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x19F
; 0000 061C dc_low_2 = dc_low_2 - 100;
	CALL SUBOPT_0x9B
; 0000 061D bit_phim = 0;
_0x19F:
	CLT
	BLD  R2,0
; 0000 061E delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2ED
; 0000 061F }
; 0000 0620 else
_0x19C:
; 0000 0621 {
; 0000 0622 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0623 delay_ms(25);
	LDI  R26,LOW(25)
_0x2ED:
	LDI  R27,0
	CALL _delay_ms
; 0000 0624 }
; 0000 0625 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1A2
	SBRC R2,0
	RJMP _0x1A3
_0x1A2:
	RJMP _0x1A1
_0x1A3:
; 0000 0626 {
; 0000 0627 dc_low_2 = dc_low_2 - 10;
	CALL SUBOPT_0x98
	SBIW R30,10
	CALL SUBOPT_0x9A
; 0000 0628 if (((dc_low_2 + 10) / 10) % 10 == 0)
	CALL SUBOPT_0x89
	ADIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x1A4
; 0000 0629 dc_low_2 = dc_low_2 + 100;
	CALL SUBOPT_0x98
	CALL SUBOPT_0x99
; 0000 062A bit_phim = 0;
_0x1A4:
	CLT
	BLD  R2,0
; 0000 062B delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2EE
; 0000 062C }
; 0000 062D else
_0x1A1:
; 0000 062E {
; 0000 062F bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0630 delay_ms(25);
	LDI  R26,LOW(25)
_0x2EE:
	LDI  R27,0
	CALL _delay_ms
; 0000 0631 }
; 0000 0632 break;
	RJMP _0x18F
; 0000 0633 case 3:
_0x19B:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x1B1
; 0000 0634 
; 0000 0635 lcd_gotoxy(13, 2);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x3E
; 0000 0636 delay_ms(200);
	CALL SUBOPT_0x13
; 0000 0637 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0638 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1A8
	SBRC R2,0
	RJMP _0x1A9
_0x1A8:
	RJMP _0x1A7
_0x1A9:
; 0000 0639 {
; 0000 063A dc_low_2++;
	LDI  R26,LOW(_dc_low_2)
	LDI  R27,HIGH(_dc_low_2)
	CALL SUBOPT_0x55
; 0000 063B if (((dc_low_2 - 1) % 10) == 9)
	CALL SUBOPT_0x89
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x1AA
; 0000 063C dc_low_2 = dc_low_2 - 10;
	CALL SUBOPT_0x98
	SBIW R30,10
	CALL SUBOPT_0x9A
; 0000 063D bit_phim = 0;
_0x1AA:
	CLT
	BLD  R2,0
; 0000 063E delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2EF
; 0000 063F }
; 0000 0640 else
_0x1A7:
; 0000 0641 {
; 0000 0642 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0643 delay_ms(25);
	LDI  R26,LOW(25)
_0x2EF:
	LDI  R27,0
	CALL _delay_ms
; 0000 0644 }
; 0000 0645 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1AD
	SBRC R2,0
	RJMP _0x1AE
_0x1AD:
	RJMP _0x1AC
_0x1AE:
; 0000 0646 {
; 0000 0647 dc_low_2--;
	LDI  R26,LOW(_dc_low_2)
	LDI  R27,HIGH(_dc_low_2)
	CALL SUBOPT_0x5A
; 0000 0648 if (((dc_low_2 + 1) % 10) == 0)
	CALL SUBOPT_0x89
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x1AF
; 0000 0649 dc_low_2 = dc_low_2 + 10;
	CALL SUBOPT_0x98
	ADIW R30,10
	CALL SUBOPT_0x9A
; 0000 064A bit_phim = 0;
_0x1AF:
	CLT
	BLD  R2,0
; 0000 064B delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F0
; 0000 064C }
; 0000 064D else
_0x1AC:
; 0000 064E {
; 0000 064F bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0650 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F0:
	LDI  R27,0
	CALL _delay_ms
; 0000 0651 }
; 0000 0652 break;
	RJMP _0x18F
; 0000 0653 default:
_0x1B1:
; 0000 0654 cot = 1;
	CALL SUBOPT_0x5C
; 0000 0655 delay_ms(25);
	CALL SUBOPT_0x1
; 0000 0656 break;
; 0000 0657 }
_0x18F:
; 0000 0658 // luu
; 0000 0659 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x1B3
	SBRC R2,0
	RJMP _0x1B4
_0x1B3:
	RJMP _0x1B2
_0x1B4:
; 0000 065A {
; 0000 065B if ((dc_low_2 != 0) & (dc_low_2 > EEPROM_read(31) * 10 + EEPROM_read(32)) & (dc_ ...
	CALL SUBOPT_0x89
	CALL SUBOPT_0x92
	PUSH R30
	CALL SUBOPT_0x47
	PUSH R31
	PUSH R30
	LDI  R26,LOW(32)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	CALL SUBOPT_0x89
	CALL __GTW12
	POP  R26
	AND  R30,R26
	PUSH R30
	CALL SUBOPT_0x9C
	PUSH R31
	PUSH R30
	LDI  R26,LOW(36)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	CALL SUBOPT_0x89
	CALL __LTW12
	POP  R26
	AND  R30,R26
	BREQ _0x1B5
; 0000 065C {
; 0000 065D lcd_clear();
	CALL _lcd_clear
; 0000 065E EEPROM_write(33, dc_low_2 / 10);
	LDI  R30,LOW(33)
	LDI  R31,HIGH(33)
	CALL SUBOPT_0x88
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x4E
; 0000 065F EEPROM_write(34, dc_low_2 % 10);
	CALL SUBOPT_0x94
; 0000 0660 cot = 1;
; 0000 0661 lcd_gotoxy(3, 1);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x6D
; 0000 0662 sprintf(enthernet, "%s,dienap_low1,%d.%d", IP, dc_low_2 / 10, dc_low_2 % 10);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,724
	CALL SUBOPT_0x69
	CALL SUBOPT_0x89
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0663 puts1(enthernet);
	CALL SUBOPT_0x95
; 0000 0664 sprintf(lcd, "Da luu nguong");
	CALL SUBOPT_0x96
; 0000 0665 lcd_puts(lcd);
; 0000 0666 lcd_gotoxy(3, 2);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x3E
; 0000 0667 sprintf(lcd, "Dc_low_2:%d,%dV", dc_low_2 / 10, dc_low_2 % 10);
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,745
	CALL SUBOPT_0x88
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x97
; 0000 0668 lcd_puts(lcd);
	RJMP _0x2F1
; 0000 0669 delay_ms(500);
; 0000 066A lcd_clear();
; 0000 066B }
; 0000 066C else
_0x1B5:
; 0000 066D {
; 0000 066E lcd_clear();
	CALL SUBOPT_0x5E
; 0000 066F lcd_gotoxy(2, 1);
; 0000 0670 lcd_puts("Kiem tra lai muc Dc_low_2!");
	__POINTW2MN _0x4F,167
_0x2F1:
	CALL _lcd_puts
; 0000 0671 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 0672 lcd_clear();
; 0000 0673 }
; 0000 0674 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 0675 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F2
; 0000 0676 }
; 0000 0677 else
_0x1B2:
; 0000 0678 {
; 0000 0679 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 067A 
; 0000 067B delay_ms(25);
	LDI  R26,LOW(25)
_0x2F2:
	LDI  R27,0
	CALL _delay_ms
; 0000 067C }
; 0000 067D };
_0x18C:
; 0000 067E if (hang - 4 == 2)
	CALL SUBOPT_0x15
	SBIW R30,4
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x1B8
; 0000 067F {
; 0000 0680 
; 0000 0681 switch (cot)
	CALL SUBOPT_0x53
; 0000 0682 {
; 0000 0683 case 1:
	BREQ PC+2
	RJMP _0x1BC
; 0000 0684 
; 0000 0685 lcd_gotoxy(10, 3);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x71
; 0000 0686 delay_ms(200);
; 0000 0687 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0688 // phim up
; 0000 0689 
; 0000 068A if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1BE
	SBRC R2,0
	RJMP _0x1BF
_0x1BE:
	RJMP _0x1BD
_0x1BF:
; 0000 068B {
; 0000 068C dc_high = dc_high + 100;
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9E
; 0000 068D if (dc_high >= 1000)
	CALL SUBOPT_0x8C
	CPI  R26,LOW(0x3E8)
	LDI  R30,HIGH(0x3E8)
	CPC  R27,R30
	BRLT _0x1C0
; 0000 068E dc_high = dc_high - 1000;
	CALL SUBOPT_0x9D
	SUBI R30,LOW(1000)
	SBCI R31,HIGH(1000)
	CALL SUBOPT_0x9F
; 0000 068F bit_phim = 0;
_0x1C0:
	CLT
	BLD  R2,0
; 0000 0690 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F3
; 0000 0691 }
; 0000 0692 else
_0x1BD:
; 0000 0693 {
; 0000 0694 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0695 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F3:
	LDI  R27,0
	CALL _delay_ms
; 0000 0696 }
; 0000 0697 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1C3
	SBRC R2,0
	RJMP _0x1C4
_0x1C3:
	RJMP _0x1C2
_0x1C4:
; 0000 0698 {
; 0000 0699 dc_high = dc_high - 100;
	CALL SUBOPT_0xA0
; 0000 069A if (dc_high < 0)
	LDS  R26,_dc_high+1
	TST  R26
	BRPL _0x1C5
; 0000 069B dc_high = dc_high + 1000;
	CALL SUBOPT_0x9D
	SUBI R30,LOW(-1000)
	SBCI R31,HIGH(-1000)
	CALL SUBOPT_0x9F
; 0000 069C bit_phim = 0;
_0x1C5:
	CLT
	BLD  R2,0
; 0000 069D delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F4
; 0000 069E }
; 0000 069F else
_0x1C2:
; 0000 06A0 {
; 0000 06A1 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 06A2 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F4:
	LDI  R27,0
	CALL _delay_ms
; 0000 06A3 }
; 0000 06A4 break;
	RJMP _0x1BB
; 0000 06A5 case 2:
_0x1BC:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x1C7
; 0000 06A6 
; 0000 06A7 lcd_gotoxy(11, 3);
	LDI  R30,LOW(11)
	CALL SUBOPT_0x71
; 0000 06A8 delay_ms(200);
; 0000 06A9 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 06AA 
; 0000 06AB if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1C9
	SBRC R2,0
	RJMP _0x1CA
_0x1C9:
	RJMP _0x1C8
_0x1CA:
; 0000 06AC {
; 0000 06AD dc_high = dc_high + 10;
	CALL SUBOPT_0x9D
	ADIW R30,10
	CALL SUBOPT_0x9F
; 0000 06AE if (((dc_high - 10) / 10) % 10 == 9)
	CALL SUBOPT_0x8C
	SBIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x1CB
; 0000 06AF dc_high = dc_high - 100;
	CALL SUBOPT_0xA0
; 0000 06B0 bit_phim = 0;
_0x1CB:
	CLT
	BLD  R2,0
; 0000 06B1 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F5
; 0000 06B2 }
; 0000 06B3 else
_0x1C8:
; 0000 06B4 {
; 0000 06B5 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 06B6 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F5:
	LDI  R27,0
	CALL _delay_ms
; 0000 06B7 }
; 0000 06B8 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1CE
	SBRC R2,0
	RJMP _0x1CF
_0x1CE:
	RJMP _0x1CD
_0x1CF:
; 0000 06B9 {
; 0000 06BA dc_high = dc_high - 10;
	CALL SUBOPT_0x9D
	SBIW R30,10
	CALL SUBOPT_0x9F
; 0000 06BB if (((dc_high + 10) / 10) % 10 == 0)
	CALL SUBOPT_0x8C
	ADIW R26,10
	CALL SUBOPT_0x2A
	MOVW R26,R30
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x1D0
; 0000 06BC dc_high = dc_high + 100;
	CALL SUBOPT_0x9D
	CALL SUBOPT_0x9E
; 0000 06BD bit_phim = 0;
_0x1D0:
	CLT
	BLD  R2,0
; 0000 06BE delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F6
; 0000 06BF }
; 0000 06C0 else
_0x1CD:
; 0000 06C1 {
; 0000 06C2 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 06C3 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F6:
	LDI  R27,0
	CALL _delay_ms
; 0000 06C4 }
; 0000 06C5 break;
	RJMP _0x1BB
; 0000 06C6 case 3:
_0x1C7:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x1DD
; 0000 06C7 
; 0000 06C8 lcd_gotoxy(13, 3);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x71
; 0000 06C9 delay_ms(200);
; 0000 06CA lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 06CB if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1D4
	SBRC R2,0
	RJMP _0x1D5
_0x1D4:
	RJMP _0x1D3
_0x1D5:
; 0000 06CC {
; 0000 06CD dc_high++;
	LDI  R26,LOW(_dc_high)
	LDI  R27,HIGH(_dc_high)
	CALL SUBOPT_0x55
; 0000 06CE if (((dc_high - 1) % 10) == 9)
	CALL SUBOPT_0x8C
	SBIW R26,1
	CALL SUBOPT_0x2B
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BRNE _0x1D6
; 0000 06CF dc_high = dc_high - 10;
	CALL SUBOPT_0x9D
	SBIW R30,10
	CALL SUBOPT_0x9F
; 0000 06D0 bit_phim = 0;
_0x1D6:
	CLT
	BLD  R2,0
; 0000 06D1 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F7
; 0000 06D2 }
; 0000 06D3 else
_0x1D3:
; 0000 06D4 {
; 0000 06D5 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 06D6 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F7:
	LDI  R27,0
	CALL _delay_ms
; 0000 06D7 }
; 0000 06D8 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1D9
	SBRC R2,0
	RJMP _0x1DA
_0x1D9:
	RJMP _0x1D8
_0x1DA:
; 0000 06D9 {
; 0000 06DA dc_high--;
	LDI  R26,LOW(_dc_high)
	LDI  R27,HIGH(_dc_high)
	CALL SUBOPT_0x5A
; 0000 06DB if (((dc_high + 1) % 10) == 0)
	CALL SUBOPT_0x8C
	ADIW R26,1
	CALL SUBOPT_0x2B
	SBIW R30,0
	BRNE _0x1DB
; 0000 06DC dc_high = dc_high + 10;
	CALL SUBOPT_0x9D
	ADIW R30,10
	CALL SUBOPT_0x9F
; 0000 06DD bit_phim = 0;
_0x1DB:
	CLT
	BLD  R2,0
; 0000 06DE delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2F8
; 0000 06DF }
; 0000 06E0 else
_0x1D8:
; 0000 06E1 {
; 0000 06E2 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 06E3 delay_ms(25);
	LDI  R26,LOW(25)
_0x2F8:
	LDI  R27,0
	CALL _delay_ms
; 0000 06E4 }
; 0000 06E5 break;
	RJMP _0x1BB
; 0000 06E6 default:
_0x1DD:
; 0000 06E7 cot = 1;
	CALL SUBOPT_0x5C
; 0000 06E8 delay_ms(25);
	CALL SUBOPT_0x1
; 0000 06E9 break;
; 0000 06EA }
_0x1BB:
; 0000 06EB // luu
; 0000 06EC if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x1DF
	SBRC R2,0
	RJMP _0x1E0
_0x1DF:
	RJMP _0x1DE
_0x1E0:
; 0000 06ED {
; 0000 06EE if ((dc_high != 0) & (dc_high > EEPROM_read(33) * 10 + EEPROM_read(34)))
	CALL SUBOPT_0x8C
	CALL SUBOPT_0x92
	PUSH R30
	CALL SUBOPT_0x93
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	CALL SUBOPT_0x8C
	CALL __GTW12
	POP  R26
	AND  R30,R26
	BREQ _0x1E1
; 0000 06EF {
; 0000 06F0 lcd_clear();
	CALL _lcd_clear
; 0000 06F1 EEPROM_write(35, dc_high / 10);
	LDI  R30,LOW(35)
	LDI  R31,HIGH(35)
	CALL SUBOPT_0x8B
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x50
; 0000 06F2 EEPROM_write(36, dc_high % 10);
	CALL SUBOPT_0x94
; 0000 06F3 cot = 1;
; 0000 06F4 lcd_gotoxy(3, 1);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x6D
; 0000 06F5 sprintf(enthernet, "%s,dienap_high,%d.%d", IP, dc_high / 10, dc_high % 10);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,788
	CALL SUBOPT_0x69
	CALL SUBOPT_0x8C
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8D
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 06F6 puts1(enthernet);
	CALL SUBOPT_0x95
; 0000 06F7 sprintf(lcd, "Da luu nguong");
	CALL SUBOPT_0x96
; 0000 06F8 lcd_puts(lcd);
; 0000 06F9 lcd_gotoxy(3, 2);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x3E
; 0000 06FA sprintf(lcd, "Dc_high:%d,%dV", dc_high / 10, dc_high % 10);
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,809
	CALL SUBOPT_0x8B
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0x8D
	CALL SUBOPT_0x38
	CALL SUBOPT_0x97
; 0000 06FB lcd_puts(lcd);
	RJMP _0x2F9
; 0000 06FC delay_ms(500);
; 0000 06FD lcd_clear();
; 0000 06FE }
; 0000 06FF else
_0x1E1:
; 0000 0700 {
; 0000 0701 lcd_clear();
	CALL SUBOPT_0x5E
; 0000 0702 lcd_gotoxy(2, 1);
; 0000 0703 lcd_puts("Kiem tra lai muc Dc_high!");
	__POINTW2MN _0x4F,194
_0x2F9:
	CALL _lcd_puts
; 0000 0704 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 0705 lcd_clear();
; 0000 0706 }
; 0000 0707 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 0708 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2FA
; 0000 0709 }
; 0000 070A else
_0x1DE:
; 0000 070B {
; 0000 070C bit_phim = 1;
	SET
	BLD  R2,0
; 0000 070D 
; 0000 070E delay_ms(25);
	LDI  R26,LOW(25)
_0x2FA:
	LDI  R27,0
	CALL _delay_ms
; 0000 070F }
; 0000 0710 };
_0x1B8:
; 0000 0711 }
; 0000 0712 if (strcmp(hienthi, "sdt") == 0)
_0x15A:
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,220
	CALL _strcmp
	CPI  R30,0
	BREQ PC+2
	RJMP _0x1E4
; 0000 0713 {
; 0000 0714 for (i = 2; i < 4; i++)
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	STS  _i,R30
	STS  _i+1,R31
_0x1E6:
	CALL SUBOPT_0x14
	SBIW R26,4
	BRGE _0x1E7
; 0000 0715 if (i == hang - 5)
	CALL SUBOPT_0x15
	SBIW R30,5
	CALL SUBOPT_0x16
	BRNE _0x1E8
; 0000 0716 {
; 0000 0717 lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 0718 lcd_putchar('<');
	LDI  R26,LOW(60)
	RJMP _0x2FB
; 0000 0719 }
; 0000 071A else
_0x1E8:
; 0000 071B {
; 0000 071C lcd_gotoxy(19, i);
	CALL SUBOPT_0x17
; 0000 071D lcd_putchar(' ');
	LDI  R26,LOW(32)
_0x2FB:
	CALL _lcd_putchar
; 0000 071E }
	CALL SUBOPT_0x8
	RJMP _0x1E6
_0x1E7:
; 0000 071F lcd_gotoxy(0, 0);
	CALL SUBOPT_0x9
; 0000 0720 sprintf(lcd, "Cai dat SDT canh bao");
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,854
	CALL SUBOPT_0x82
; 0000 0721 lcd_puts(lcd);
; 0000 0722 lcd_gotoxy(2, 1);
	LDI  R30,LOW(2)
	CALL SUBOPT_0x3A
; 0000 0723 sprintf(lcd, "%s", tram);
	__POINTW1FN _0x0,875
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xA2
; 0000 0724 lcd_puts(lcd);
; 0000 0725 // lcd_gotoxy(0, 2);
; 0000 0726 // sprintf(lcd, "Call: 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_ ...
; 0000 0727 // // sprintf(lcd, "Sms : 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, s ...
; 0000 0728 // lcd_puts(lcd);
; 0000 0729 lcd_gotoxy(0, 3);
	LDI  R30,LOW(0)
	CALL SUBOPT_0x43
; 0000 072A sprintf(lcd, "Sms : 0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, ...
	__POINTW1FN _0x0,878
	CALL SUBOPT_0xA3
	CALL SUBOPT_0xA4
	CALL SUBOPT_0xA5
	CALL SUBOPT_0xA6
	CALL SUBOPT_0xA7
	CALL SUBOPT_0xA8
	CALL SUBOPT_0xA9
	CALL SUBOPT_0xAA
	CALL SUBOPT_0xAB
	CALL SUBOPT_0x39
; 0000 072B lcd_puts(lcd);
; 0000 072C // hang 1
; 0000 072D // if (hang - 7 == 0)
; 0000 072E // {
; 0000 072F 
; 0000 0730 //    switch (cot)
; 0000 0731 //    {
; 0000 0732 //    case 1:
; 0000 0733 
; 0000 0734 //       lcd_gotoxy(7, 2);
; 0000 0735 //       delay_ms(200);
; 0000 0736 //       lcd_putchar('_');
; 0000 0737 //       // phim up
; 0000 0738 
; 0000 0739 //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 073A //       {
; 0000 073B //          sdt_call1++;
; 0000 073C //          if (sdt_call1 > 9)
; 0000 073D //             sdt_call1 = 0;
; 0000 073E //          bit_phim = 0;
; 0000 073F //          delay_ms(50);
; 0000 0740 //       }
; 0000 0741 //       else
; 0000 0742 //       {
; 0000 0743 //          bit_phim = 1;
; 0000 0744 //          delay_ms(25);
; 0000 0745 //       }
; 0000 0746 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0747 //       {
; 0000 0748 //          sdt_call1--;
; 0000 0749 //          if (sdt_call1 == -1)
; 0000 074A //             sdt_call1 = 9;
; 0000 074B //          bit_phim = 0;
; 0000 074C //          delay_ms(50);
; 0000 074D //       }
; 0000 074E //       else
; 0000 074F //       {
; 0000 0750 //          bit_phim = 1;
; 0000 0751 //          delay_ms(25);
; 0000 0752 //       }
; 0000 0753 //       break;
; 0000 0754 //    case 2:
; 0000 0755 
; 0000 0756 //       lcd_gotoxy(8, 2);
; 0000 0757 //       delay_ms(200);
; 0000 0758 //       lcd_putchar('_');
; 0000 0759 
; 0000 075A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 075B //       {
; 0000 075C //          sdt_call2++;
; 0000 075D //          if (sdt_call2 > 9)
; 0000 075E //             sdt_call2 = 0;
; 0000 075F //          bit_phim = 0;
; 0000 0760 //          delay_ms(50);
; 0000 0761 //       }
; 0000 0762 //       else
; 0000 0763 //       {
; 0000 0764 //          bit_phim = 1;
; 0000 0765 //          delay_ms(25);
; 0000 0766 //       }
; 0000 0767 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0768 //       {
; 0000 0769 //          sdt_call2--;
; 0000 076A //          if (sdt_call2 == -1)
; 0000 076B //             sdt_call2 = 9;
; 0000 076C //          bit_phim = 0;
; 0000 076D //          delay_ms(50);
; 0000 076E //       }
; 0000 076F //       else
; 0000 0770 //       {
; 0000 0771 //          bit_phim = 1;
; 0000 0772 //          delay_ms(25);
; 0000 0773 //       }
; 0000 0774 //       break;
; 0000 0775 //    case 3:
; 0000 0776 
; 0000 0777 //       lcd_gotoxy(9, 2);
; 0000 0778 //       delay_ms(200);
; 0000 0779 //       lcd_putchar('_');
; 0000 077A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 077B //       {
; 0000 077C //          sdt_call3++;
; 0000 077D //          if (sdt_call3 > 9)
; 0000 077E //             sdt_call3 = 0;
; 0000 077F //          bit_phim = 0;
; 0000 0780 //          delay_ms(50);
; 0000 0781 //       }
; 0000 0782 //       else
; 0000 0783 //       {
; 0000 0784 //          bit_phim = 1;
; 0000 0785 //          delay_ms(25);
; 0000 0786 //       }
; 0000 0787 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0788 //       {
; 0000 0789 //          sdt_call3--;
; 0000 078A //          if (sdt_call3 == -1)
; 0000 078B //             sdt_call3 = 9;
; 0000 078C //          bit_phim = 0;
; 0000 078D //          delay_ms(50);
; 0000 078E //       }
; 0000 078F //       else
; 0000 0790 //       {
; 0000 0791 //          bit_phim = 1;
; 0000 0792 //          delay_ms(25);
; 0000 0793 //       }
; 0000 0794 //       break;
; 0000 0795 //    case 4:
; 0000 0796 
; 0000 0797 //       lcd_gotoxy(10, 2);
; 0000 0798 //       delay_ms(200);
; 0000 0799 //       lcd_putchar('_');
; 0000 079A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 079B //       {
; 0000 079C //          sdt_call4++;
; 0000 079D //          if (sdt_call4 > 9)
; 0000 079E //             sdt_call4 = 0;
; 0000 079F //          bit_phim = 0;
; 0000 07A0 //          delay_ms(50);
; 0000 07A1 //       }
; 0000 07A2 //       else
; 0000 07A3 //       {
; 0000 07A4 //          bit_phim = 1;
; 0000 07A5 //          delay_ms(25);
; 0000 07A6 //       }
; 0000 07A7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07A8 //       {
; 0000 07A9 //          sdt_call4--;
; 0000 07AA //          if (sdt_call4 == -1)
; 0000 07AB //             sdt_call4 = 9;
; 0000 07AC //          bit_phim = 0;
; 0000 07AD //          delay_ms(50);
; 0000 07AE //       }
; 0000 07AF //       else
; 0000 07B0 //       {
; 0000 07B1 //          bit_phim = 1;
; 0000 07B2 //          delay_ms(25);
; 0000 07B3 //       }
; 0000 07B4 //       break;
; 0000 07B5 //    case 5:
; 0000 07B6 
; 0000 07B7 //       lcd_gotoxy(11, 2);
; 0000 07B8 //       delay_ms(200);
; 0000 07B9 //       lcd_putchar('_');
; 0000 07BA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07BB //       {
; 0000 07BC //          sdt_call5++;
; 0000 07BD //          if (sdt_call5 > 9)
; 0000 07BE //             sdt_call5 = 0;
; 0000 07BF //          bit_phim = 0;
; 0000 07C0 //          delay_ms(50);
; 0000 07C1 //       }
; 0000 07C2 //       else
; 0000 07C3 //       {
; 0000 07C4 //          bit_phim = 1;
; 0000 07C5 //          delay_ms(25);
; 0000 07C6 //       }
; 0000 07C7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07C8 //       {
; 0000 07C9 //          sdt_call5--;
; 0000 07CA //          if (sdt_call5 == -1)
; 0000 07CB //             sdt_call5 = 9;
; 0000 07CC //          bit_phim = 0;
; 0000 07CD //          delay_ms(50);
; 0000 07CE //       }
; 0000 07CF //       else
; 0000 07D0 //       {
; 0000 07D1 //          bit_phim = 1;
; 0000 07D2 //          delay_ms(25);
; 0000 07D3 //       }
; 0000 07D4 //       break;
; 0000 07D5 //    case 6:
; 0000 07D6 
; 0000 07D7 //       lcd_gotoxy(12, 2);
; 0000 07D8 //       delay_ms(200);
; 0000 07D9 //       lcd_putchar('_');
; 0000 07DA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07DB //       {
; 0000 07DC //          sdt_call6++;
; 0000 07DD //          if (sdt_call6 > 9)
; 0000 07DE //             sdt_call6 = 0;
; 0000 07DF //          bit_phim = 0;
; 0000 07E0 //          delay_ms(50);
; 0000 07E1 //       }
; 0000 07E2 //       else
; 0000 07E3 //       {
; 0000 07E4 //          bit_phim = 1;
; 0000 07E5 //          delay_ms(25);
; 0000 07E6 //       }
; 0000 07E7 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 07E8 //       {
; 0000 07E9 //          sdt_call6--;
; 0000 07EA //          if (sdt_call6 == -1)
; 0000 07EB //             sdt_call6 = 9;
; 0000 07EC //          bit_phim = 0;
; 0000 07ED //          delay_ms(50);
; 0000 07EE //       }
; 0000 07EF //       else
; 0000 07F0 //       {
; 0000 07F1 //          bit_phim = 1;
; 0000 07F2 //          delay_ms(25);
; 0000 07F3 //       }
; 0000 07F4 //       break;
; 0000 07F5 //    case 7:
; 0000 07F6 
; 0000 07F7 //       lcd_gotoxy(13, 2);
; 0000 07F8 //       delay_ms(200);
; 0000 07F9 //       lcd_putchar('_');
; 0000 07FA //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 07FB //       {
; 0000 07FC //          sdt_call7++;
; 0000 07FD //          if (sdt_call7 > 9)
; 0000 07FE //             sdt_call7 = 0;
; 0000 07FF //          bit_phim = 0;
; 0000 0800 //          delay_ms(50);
; 0000 0801 //       }
; 0000 0802 //       else
; 0000 0803 //       {
; 0000 0804 //          bit_phim = 1;
; 0000 0805 //          delay_ms(25);
; 0000 0806 //       }
; 0000 0807 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0808 //       {
; 0000 0809 //          sdt_call7--;
; 0000 080A //          if (sdt_call7 == -1)
; 0000 080B //             sdt_call7 = 9;
; 0000 080C //          bit_phim = 0;
; 0000 080D //          delay_ms(50);
; 0000 080E //       }
; 0000 080F //       else
; 0000 0810 //       {
; 0000 0811 //          bit_phim = 1;
; 0000 0812 //          delay_ms(25);
; 0000 0813 //       }
; 0000 0814 //       break;
; 0000 0815 //    case 8:
; 0000 0816 
; 0000 0817 //       lcd_gotoxy(14, 2);
; 0000 0818 //       delay_ms(200);
; 0000 0819 //       lcd_putchar('_');
; 0000 081A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 081B //       {
; 0000 081C //          sdt_call8++;
; 0000 081D //          if (sdt_call8 > 9)
; 0000 081E //             sdt_call8 = 0;
; 0000 081F //          bit_phim = 0;
; 0000 0820 //          delay_ms(50);
; 0000 0821 //       }
; 0000 0822 //       else
; 0000 0823 //       {
; 0000 0824 //          bit_phim = 1;
; 0000 0825 //          delay_ms(25);
; 0000 0826 //       }
; 0000 0827 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0828 //       {
; 0000 0829 //          sdt_call8--;
; 0000 082A //          if (sdt_call8 == -1)
; 0000 082B //             sdt_call8 = 9;
; 0000 082C //          bit_phim = 0;
; 0000 082D //          delay_ms(50);
; 0000 082E //       }
; 0000 082F //       else
; 0000 0830 //       {
; 0000 0831 //          bit_phim = 1;
; 0000 0832 //          delay_ms(25);
; 0000 0833 //       }
; 0000 0834 //       break;
; 0000 0835 //    case 9:
; 0000 0836 
; 0000 0837 //       lcd_gotoxy(15, 2);
; 0000 0838 //       delay_ms(200);
; 0000 0839 //       lcd_putchar('_');
; 0000 083A //       if ((Up_pin == 0) && (bit_phim == 1))
; 0000 083B //       {
; 0000 083C //          sdt_call9++;
; 0000 083D //          if (sdt_call9 > 9)
; 0000 083E //             sdt_call9 = 0;
; 0000 083F //          bit_phim = 0;
; 0000 0840 //          delay_ms(50);
; 0000 0841 //       }
; 0000 0842 //       else
; 0000 0843 //       {
; 0000 0844 //          bit_phim = 1;
; 0000 0845 //          delay_ms(25);
; 0000 0846 //       }
; 0000 0847 //       if ((Down_pin == 0) && (bit_phim == 1))
; 0000 0848 //       {
; 0000 0849 //          sdt_call9--;
; 0000 084A //          if (sdt_call9 == -1)
; 0000 084B //             sdt_call9 = 9;
; 0000 084C //          bit_phim = 0;
; 0000 084D //          delay_ms(50);
; 0000 084E //       }
; 0000 084F //       else
; 0000 0850 //       {
; 0000 0851 //          bit_phim = 1;
; 0000 0852 //          delay_ms(25);
; 0000 0853 //       }
; 0000 0854 //       break;
; 0000 0855 //    default:
; 0000 0856 //       cot = 1;
; 0000 0857 //       delay_ms(25);
; 0000 0858 //       break;
; 0000 0859 //    }
; 0000 085A //    // luu
; 0000 085B //    if ((Ent_pin == 0) && (bit_phim == 1))
; 0000 085C //    {
; 0000 085D //       bit_phim = 0;
; 0000 085E //       delay_ms(50);
; 0000 085F //       if (sdt_call1 != 0)
; 0000 0860 //       {
; 0000 0861 //          lcd_clear();
; 0000 0862 //          EEPROM_write(11, sdt_call1);
; 0000 0863 //          EEPROM_write(12, sdt_call2);
; 0000 0864 //          EEPROM_write(13, sdt_call3);
; 0000 0865 //          EEPROM_write(14, sdt_call4);
; 0000 0866 //          EEPROM_write(15, sdt_call5);
; 0000 0867 //          EEPROM_write(16, sdt_call6);
; 0000 0868 //          EEPROM_write(17, sdt_call7);
; 0000 0869 //          EEPROM_write(18, sdt_call8);
; 0000 086A //          EEPROM_write(19, sdt_call9);
; 0000 086B //          cot = 1;
; 0000 086C //          lcd_gotoxy(3, 1);
; 0000 086D //          sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_cal ...
; 0000 086E //          sprintf(lcd, "da luu sdt sms:");
; 0000 086F //          lcd_puts(lcd);
; 0000 0870 //          lcd_gotoxy(5, 2);
; 0000 0871 //          sprintf(lcd, "%s", sdt_call);
; 0000 0872 //          lcd_puts(lcd);
; 0000 0873 //          delay_ms(500);
; 0000 0874 //          lcd_clear();
; 0000 0875 //       }
; 0000 0876 //       else
; 0000 0877 //       {
; 0000 0878 //          lcd_clear();
; 0000 0879 //          lcd_gotoxy(2, 1);
; 0000 087A //          lcd_puts("Kiem tra lai SDT!");
; 0000 087B //          delay_ms(500);
; 0000 087C //          lcd_clear();
; 0000 087D //       }
; 0000 087E //    }
; 0000 087F //    else
; 0000 0880 //    {
; 0000 0881 //       bit_phim = 1;
; 0000 0882 
; 0000 0883 //       delay_ms(25);
; 0000 0884 //    }
; 0000 0885 // };
; 0000 0886 // // hang 2
; 0000 0887 if (hang - 7 == 0)
	CALL SUBOPT_0x15
	SBIW R30,7
	BREQ PC+2
	RJMP _0x1EA
; 0000 0888 {
; 0000 0889 
; 0000 088A switch (cot)
	CALL SUBOPT_0x53
; 0000 088B {
; 0000 088C case 1:
	BREQ PC+2
	RJMP _0x1EE
; 0000 088D 
; 0000 088E lcd_gotoxy(7, 3);
	LDI  R30,LOW(7)
	CALL SUBOPT_0x71
; 0000 088F delay_ms(200);
; 0000 0890 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0891 // phim up
; 0000 0892 
; 0000 0893 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1F0
	SBRC R2,0
	RJMP _0x1F1
_0x1F0:
	RJMP _0x1EF
_0x1F1:
; 0000 0894 {
; 0000 0895 sdt_sms1++;
	LDI  R26,LOW(_sdt_sms1)
	LDI  R27,HIGH(_sdt_sms1)
	CALL SUBOPT_0x55
; 0000 0896 if (sdt_sms1 > 9)
	CALL SUBOPT_0xAC
	SBIW R26,10
	BRLT _0x1F2
; 0000 0897 sdt_sms1 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms1,R30
	STS  _sdt_sms1+1,R30
; 0000 0898 bit_phim = 0;
_0x1F2:
	CLT
	BLD  R2,0
; 0000 0899 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2FC
; 0000 089A }
; 0000 089B else
_0x1EF:
; 0000 089C {
; 0000 089D bit_phim = 1;
	SET
	BLD  R2,0
; 0000 089E delay_ms(25);
	LDI  R26,LOW(25)
_0x2FC:
	LDI  R27,0
	CALL _delay_ms
; 0000 089F }
; 0000 08A0 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x1F5
	SBRC R2,0
	RJMP _0x1F6
_0x1F5:
	RJMP _0x1F4
_0x1F6:
; 0000 08A1 {
; 0000 08A2 sdt_sms1--;
	LDI  R26,LOW(_sdt_sms1)
	LDI  R27,HIGH(_sdt_sms1)
	CALL SUBOPT_0x5A
; 0000 08A3 if (sdt_sms1 == -1)
	CALL SUBOPT_0xAC
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x1F7
; 0000 08A4 sdt_sms1 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x79
; 0000 08A5 bit_phim = 0;
_0x1F7:
	CLT
	BLD  R2,0
; 0000 08A6 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2FD
; 0000 08A7 }
; 0000 08A8 else
_0x1F4:
; 0000 08A9 {
; 0000 08AA bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08AB delay_ms(25);
	LDI  R26,LOW(25)
_0x2FD:
	LDI  R27,0
	CALL _delay_ms
; 0000 08AC }
; 0000 08AD break;
	RJMP _0x1ED
; 0000 08AE case 2:
_0x1EE:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x1F9
; 0000 08AF 
; 0000 08B0 lcd_gotoxy(8, 3);
	LDI  R30,LOW(8)
	CALL SUBOPT_0x71
; 0000 08B1 delay_ms(200);
; 0000 08B2 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 08B3 
; 0000 08B4 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x1FB
	SBRC R2,0
	RJMP _0x1FC
_0x1FB:
	RJMP _0x1FA
_0x1FC:
; 0000 08B5 {
; 0000 08B6 sdt_sms2++;
	LDI  R26,LOW(_sdt_sms2)
	LDI  R27,HIGH(_sdt_sms2)
	CALL SUBOPT_0x55
; 0000 08B7 if (sdt_sms2 > 9)
	CALL SUBOPT_0xAD
	SBIW R26,10
	BRLT _0x1FD
; 0000 08B8 sdt_sms2 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms2,R30
	STS  _sdt_sms2+1,R30
; 0000 08B9 bit_phim = 0;
_0x1FD:
	CLT
	BLD  R2,0
; 0000 08BA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2FE
; 0000 08BB }
; 0000 08BC else
_0x1FA:
; 0000 08BD {
; 0000 08BE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08BF delay_ms(25);
	LDI  R26,LOW(25)
_0x2FE:
	LDI  R27,0
	CALL _delay_ms
; 0000 08C0 }
; 0000 08C1 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x200
	SBRC R2,0
	RJMP _0x201
_0x200:
	RJMP _0x1FF
_0x201:
; 0000 08C2 {
; 0000 08C3 sdt_sms2--;
	LDI  R26,LOW(_sdt_sms2)
	LDI  R27,HIGH(_sdt_sms2)
	CALL SUBOPT_0x5A
; 0000 08C4 if (sdt_sms2 == -1)
	CALL SUBOPT_0xAD
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x202
; 0000 08C5 sdt_sms2 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7A
; 0000 08C6 bit_phim = 0;
_0x202:
	CLT
	BLD  R2,0
; 0000 08C7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x2FF
; 0000 08C8 }
; 0000 08C9 else
_0x1FF:
; 0000 08CA {
; 0000 08CB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08CC delay_ms(25);
	LDI  R26,LOW(25)
_0x2FF:
	LDI  R27,0
	CALL _delay_ms
; 0000 08CD }
; 0000 08CE break;
	RJMP _0x1ED
; 0000 08CF case 3:
_0x1F9:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x204
; 0000 08D0 
; 0000 08D1 lcd_gotoxy(9, 3);
	LDI  R30,LOW(9)
	CALL SUBOPT_0x71
; 0000 08D2 delay_ms(200);
; 0000 08D3 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 08D4 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x206
	SBRC R2,0
	RJMP _0x207
_0x206:
	RJMP _0x205
_0x207:
; 0000 08D5 {
; 0000 08D6 sdt_sms3++;
	LDI  R26,LOW(_sdt_sms3)
	LDI  R27,HIGH(_sdt_sms3)
	CALL SUBOPT_0x55
; 0000 08D7 if (sdt_sms3 > 9)
	CALL SUBOPT_0xAE
	SBIW R26,10
	BRLT _0x208
; 0000 08D8 sdt_sms3 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms3,R30
	STS  _sdt_sms3+1,R30
; 0000 08D9 bit_phim = 0;
_0x208:
	CLT
	BLD  R2,0
; 0000 08DA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x300
; 0000 08DB }
; 0000 08DC else
_0x205:
; 0000 08DD {
; 0000 08DE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08DF delay_ms(25);
	LDI  R26,LOW(25)
_0x300:
	LDI  R27,0
	CALL _delay_ms
; 0000 08E0 }
; 0000 08E1 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x20B
	SBRC R2,0
	RJMP _0x20C
_0x20B:
	RJMP _0x20A
_0x20C:
; 0000 08E2 {
; 0000 08E3 sdt_sms3--;
	LDI  R26,LOW(_sdt_sms3)
	LDI  R27,HIGH(_sdt_sms3)
	CALL SUBOPT_0x5A
; 0000 08E4 if (sdt_sms3 == -1)
	CALL SUBOPT_0xAE
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x20D
; 0000 08E5 sdt_sms3 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7B
; 0000 08E6 bit_phim = 0;
_0x20D:
	CLT
	BLD  R2,0
; 0000 08E7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x301
; 0000 08E8 }
; 0000 08E9 else
_0x20A:
; 0000 08EA {
; 0000 08EB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08EC delay_ms(25);
	LDI  R26,LOW(25)
_0x301:
	LDI  R27,0
	CALL _delay_ms
; 0000 08ED }
; 0000 08EE break;
	RJMP _0x1ED
; 0000 08EF case 4:
_0x204:
	CPI  R30,LOW(0x4)
	LDI  R26,HIGH(0x4)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x20F
; 0000 08F0 
; 0000 08F1 lcd_gotoxy(10, 3);
	LDI  R30,LOW(10)
	CALL SUBOPT_0x71
; 0000 08F2 delay_ms(200);
; 0000 08F3 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 08F4 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x211
	SBRC R2,0
	RJMP _0x212
_0x211:
	RJMP _0x210
_0x212:
; 0000 08F5 {
; 0000 08F6 sdt_sms4++;
	LDI  R26,LOW(_sdt_sms4)
	LDI  R27,HIGH(_sdt_sms4)
	CALL SUBOPT_0x55
; 0000 08F7 if (sdt_sms4 > 9)
	CALL SUBOPT_0xAF
	SBIW R26,10
	BRLT _0x213
; 0000 08F8 sdt_sms4 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms4,R30
	STS  _sdt_sms4+1,R30
; 0000 08F9 bit_phim = 0;
_0x213:
	CLT
	BLD  R2,0
; 0000 08FA delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x302
; 0000 08FB }
; 0000 08FC else
_0x210:
; 0000 08FD {
; 0000 08FE bit_phim = 1;
	SET
	BLD  R2,0
; 0000 08FF delay_ms(25);
	LDI  R26,LOW(25)
_0x302:
	LDI  R27,0
	CALL _delay_ms
; 0000 0900 }
; 0000 0901 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x216
	SBRC R2,0
	RJMP _0x217
_0x216:
	RJMP _0x215
_0x217:
; 0000 0902 {
; 0000 0903 sdt_sms4--;
	LDI  R26,LOW(_sdt_sms4)
	LDI  R27,HIGH(_sdt_sms4)
	CALL SUBOPT_0x5A
; 0000 0904 if (sdt_sms4 == -1)
	CALL SUBOPT_0xAF
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x218
; 0000 0905 sdt_sms4 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7C
; 0000 0906 bit_phim = 0;
_0x218:
	CLT
	BLD  R2,0
; 0000 0907 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x303
; 0000 0908 }
; 0000 0909 else
_0x215:
; 0000 090A {
; 0000 090B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 090C delay_ms(25);
	LDI  R26,LOW(25)
_0x303:
	LDI  R27,0
	CALL _delay_ms
; 0000 090D }
; 0000 090E break;
	RJMP _0x1ED
; 0000 090F case 5:
_0x20F:
	CPI  R30,LOW(0x5)
	LDI  R26,HIGH(0x5)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x21A
; 0000 0910 
; 0000 0911 lcd_gotoxy(11, 3);
	LDI  R30,LOW(11)
	CALL SUBOPT_0x71
; 0000 0912 delay_ms(200);
; 0000 0913 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0914 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x21C
	SBRC R2,0
	RJMP _0x21D
_0x21C:
	RJMP _0x21B
_0x21D:
; 0000 0915 {
; 0000 0916 sdt_sms5++;
	LDI  R26,LOW(_sdt_sms5)
	LDI  R27,HIGH(_sdt_sms5)
	CALL SUBOPT_0x55
; 0000 0917 if (sdt_sms5 > 9)
	CALL SUBOPT_0xB0
	SBIW R26,10
	BRLT _0x21E
; 0000 0918 sdt_sms5 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms5,R30
	STS  _sdt_sms5+1,R30
; 0000 0919 bit_phim = 0;
_0x21E:
	CLT
	BLD  R2,0
; 0000 091A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x304
; 0000 091B }
; 0000 091C else
_0x21B:
; 0000 091D {
; 0000 091E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 091F delay_ms(25);
	LDI  R26,LOW(25)
_0x304:
	LDI  R27,0
	CALL _delay_ms
; 0000 0920 }
; 0000 0921 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x221
	SBRC R2,0
	RJMP _0x222
_0x221:
	RJMP _0x220
_0x222:
; 0000 0922 {
; 0000 0923 sdt_sms5--;
	LDI  R26,LOW(_sdt_sms5)
	LDI  R27,HIGH(_sdt_sms5)
	CALL SUBOPT_0x5A
; 0000 0924 if (sdt_sms5 == -1)
	CALL SUBOPT_0xB0
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x223
; 0000 0925 sdt_sms5 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7D
; 0000 0926 bit_phim = 0;
_0x223:
	CLT
	BLD  R2,0
; 0000 0927 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x305
; 0000 0928 }
; 0000 0929 else
_0x220:
; 0000 092A {
; 0000 092B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 092C delay_ms(25);
	LDI  R26,LOW(25)
_0x305:
	LDI  R27,0
	CALL _delay_ms
; 0000 092D }
; 0000 092E break;
	RJMP _0x1ED
; 0000 092F case 6:
_0x21A:
	CPI  R30,LOW(0x6)
	LDI  R26,HIGH(0x6)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x225
; 0000 0930 
; 0000 0931 lcd_gotoxy(12, 3);
	LDI  R30,LOW(12)
	CALL SUBOPT_0x71
; 0000 0932 delay_ms(200);
; 0000 0933 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0934 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x227
	SBRC R2,0
	RJMP _0x228
_0x227:
	RJMP _0x226
_0x228:
; 0000 0935 {
; 0000 0936 sdt_sms6++;
	LDI  R26,LOW(_sdt_sms6)
	LDI  R27,HIGH(_sdt_sms6)
	CALL SUBOPT_0x55
; 0000 0937 if (sdt_sms6 > 9)
	CALL SUBOPT_0xB1
	SBIW R26,10
	BRLT _0x229
; 0000 0938 sdt_sms6 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms6,R30
	STS  _sdt_sms6+1,R30
; 0000 0939 bit_phim = 0;
_0x229:
	CLT
	BLD  R2,0
; 0000 093A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x306
; 0000 093B }
; 0000 093C else
_0x226:
; 0000 093D {
; 0000 093E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 093F delay_ms(25);
	LDI  R26,LOW(25)
_0x306:
	LDI  R27,0
	CALL _delay_ms
; 0000 0940 }
; 0000 0941 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x22C
	SBRC R2,0
	RJMP _0x22D
_0x22C:
	RJMP _0x22B
_0x22D:
; 0000 0942 {
; 0000 0943 sdt_sms6--;
	LDI  R26,LOW(_sdt_sms6)
	LDI  R27,HIGH(_sdt_sms6)
	CALL SUBOPT_0x5A
; 0000 0944 if (sdt_sms6 == -1)
	CALL SUBOPT_0xB1
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x22E
; 0000 0945 sdt_sms6 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7E
; 0000 0946 bit_phim = 0;
_0x22E:
	CLT
	BLD  R2,0
; 0000 0947 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x307
; 0000 0948 }
; 0000 0949 else
_0x22B:
; 0000 094A {
; 0000 094B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 094C delay_ms(25);
	LDI  R26,LOW(25)
_0x307:
	LDI  R27,0
	CALL _delay_ms
; 0000 094D }
; 0000 094E break;
	RJMP _0x1ED
; 0000 094F case 7:
_0x225:
	CPI  R30,LOW(0x7)
	LDI  R26,HIGH(0x7)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x230
; 0000 0950 
; 0000 0951 lcd_gotoxy(13, 3);
	LDI  R30,LOW(13)
	CALL SUBOPT_0x71
; 0000 0952 delay_ms(200);
; 0000 0953 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0954 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x232
	SBRC R2,0
	RJMP _0x233
_0x232:
	RJMP _0x231
_0x233:
; 0000 0955 {
; 0000 0956 sdt_sms7++;
	LDI  R26,LOW(_sdt_sms7)
	LDI  R27,HIGH(_sdt_sms7)
	CALL SUBOPT_0x55
; 0000 0957 if (sdt_sms7 > 9)
	CALL SUBOPT_0xB2
	SBIW R26,10
	BRLT _0x234
; 0000 0958 sdt_sms7 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms7,R30
	STS  _sdt_sms7+1,R30
; 0000 0959 bit_phim = 0;
_0x234:
	CLT
	BLD  R2,0
; 0000 095A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x308
; 0000 095B }
; 0000 095C else
_0x231:
; 0000 095D {
; 0000 095E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 095F delay_ms(25);
	LDI  R26,LOW(25)
_0x308:
	LDI  R27,0
	CALL _delay_ms
; 0000 0960 }
; 0000 0961 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x237
	SBRC R2,0
	RJMP _0x238
_0x237:
	RJMP _0x236
_0x238:
; 0000 0962 {
; 0000 0963 sdt_sms7--;
	LDI  R26,LOW(_sdt_sms7)
	LDI  R27,HIGH(_sdt_sms7)
	CALL SUBOPT_0x5A
; 0000 0964 if (sdt_sms7 == -1)
	CALL SUBOPT_0xB2
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x239
; 0000 0965 sdt_sms7 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x7F
; 0000 0966 bit_phim = 0;
_0x239:
	CLT
	BLD  R2,0
; 0000 0967 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x309
; 0000 0968 }
; 0000 0969 else
_0x236:
; 0000 096A {
; 0000 096B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 096C delay_ms(25);
	LDI  R26,LOW(25)
_0x309:
	LDI  R27,0
	CALL _delay_ms
; 0000 096D }
; 0000 096E break;
	RJMP _0x1ED
; 0000 096F case 8:
_0x230:
	CPI  R30,LOW(0x8)
	LDI  R26,HIGH(0x8)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x23B
; 0000 0970 
; 0000 0971 lcd_gotoxy(14, 3);
	LDI  R30,LOW(14)
	CALL SUBOPT_0x71
; 0000 0972 delay_ms(200);
; 0000 0973 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0974 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x23D
	SBRC R2,0
	RJMP _0x23E
_0x23D:
	RJMP _0x23C
_0x23E:
; 0000 0975 {
; 0000 0976 sdt_sms8++;
	LDI  R26,LOW(_sdt_sms8)
	LDI  R27,HIGH(_sdt_sms8)
	CALL SUBOPT_0x55
; 0000 0977 if (sdt_sms8 > 9)
	CALL SUBOPT_0xB3
	SBIW R26,10
	BRLT _0x23F
; 0000 0978 sdt_sms8 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms8,R30
	STS  _sdt_sms8+1,R30
; 0000 0979 bit_phim = 0;
_0x23F:
	CLT
	BLD  R2,0
; 0000 097A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30A
; 0000 097B }
; 0000 097C else
_0x23C:
; 0000 097D {
; 0000 097E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 097F delay_ms(25);
	LDI  R26,LOW(25)
_0x30A:
	LDI  R27,0
	CALL _delay_ms
; 0000 0980 }
; 0000 0981 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x242
	SBRC R2,0
	RJMP _0x243
_0x242:
	RJMP _0x241
_0x243:
; 0000 0982 {
; 0000 0983 sdt_sms8--;
	LDI  R26,LOW(_sdt_sms8)
	LDI  R27,HIGH(_sdt_sms8)
	CALL SUBOPT_0x5A
; 0000 0984 if (sdt_sms8 == -1)
	CALL SUBOPT_0xB3
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x244
; 0000 0985 sdt_sms8 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x80
; 0000 0986 bit_phim = 0;
_0x244:
	CLT
	BLD  R2,0
; 0000 0987 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30B
; 0000 0988 }
; 0000 0989 else
_0x241:
; 0000 098A {
; 0000 098B bit_phim = 1;
	SET
	BLD  R2,0
; 0000 098C delay_ms(25);
	LDI  R26,LOW(25)
_0x30B:
	LDI  R27,0
	CALL _delay_ms
; 0000 098D }
; 0000 098E break;
	RJMP _0x1ED
; 0000 098F case 9:
_0x23B:
	CPI  R30,LOW(0x9)
	LDI  R26,HIGH(0x9)
	CPC  R31,R26
	BREQ PC+2
	RJMP _0x251
; 0000 0990 
; 0000 0991 lcd_gotoxy(15, 3);
	LDI  R30,LOW(15)
	CALL SUBOPT_0x71
; 0000 0992 delay_ms(200);
; 0000 0993 lcd_putchar('_');
	LDI  R26,LOW(95)
	CALL _lcd_putchar
; 0000 0994 if ((Up_pin == 0) && (bit_phim == 1))
	SBIC 0x1,5
	RJMP _0x248
	SBRC R2,0
	RJMP _0x249
_0x248:
	RJMP _0x247
_0x249:
; 0000 0995 {
; 0000 0996 sdt_sms9++;
	LDI  R26,LOW(_sdt_sms9)
	LDI  R27,HIGH(_sdt_sms9)
	CALL SUBOPT_0x55
; 0000 0997 if (sdt_sms9 > 9)
	CALL SUBOPT_0xB4
	SBIW R26,10
	BRLT _0x24A
; 0000 0998 sdt_sms9 = 0;
	LDI  R30,LOW(0)
	STS  _sdt_sms9,R30
	STS  _sdt_sms9+1,R30
; 0000 0999 bit_phim = 0;
_0x24A:
	CLT
	BLD  R2,0
; 0000 099A delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30C
; 0000 099B }
; 0000 099C else
_0x247:
; 0000 099D {
; 0000 099E bit_phim = 1;
	SET
	BLD  R2,0
; 0000 099F delay_ms(25);
	LDI  R26,LOW(25)
_0x30C:
	LDI  R27,0
	CALL _delay_ms
; 0000 09A0 }
; 0000 09A1 if ((Down_pin == 0) && (bit_phim == 1))
	SBIC 0x1,6
	RJMP _0x24D
	SBRC R2,0
	RJMP _0x24E
_0x24D:
	RJMP _0x24C
_0x24E:
; 0000 09A2 {
; 0000 09A3 sdt_sms9--;
	LDI  R26,LOW(_sdt_sms9)
	LDI  R27,HIGH(_sdt_sms9)
	CALL SUBOPT_0x5A
; 0000 09A4 if (sdt_sms9 == -1)
	CALL SUBOPT_0xB4
	CPI  R26,LOW(0xFFFF)
	LDI  R30,HIGH(0xFFFF)
	CPC  R27,R30
	BRNE _0x24F
; 0000 09A5 sdt_sms9 = 9;
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL SUBOPT_0x81
; 0000 09A6 bit_phim = 0;
_0x24F:
	CLT
	BLD  R2,0
; 0000 09A7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30D
; 0000 09A8 }
; 0000 09A9 else
_0x24C:
; 0000 09AA {
; 0000 09AB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 09AC delay_ms(25);
	LDI  R26,LOW(25)
_0x30D:
	LDI  R27,0
	CALL _delay_ms
; 0000 09AD }
; 0000 09AE break;
	RJMP _0x1ED
; 0000 09AF default:
_0x251:
; 0000 09B0 cot = 1;
	CALL SUBOPT_0x5C
; 0000 09B1 delay_ms(25);
	CALL SUBOPT_0x1
; 0000 09B2 break;
; 0000 09B3 }
_0x1ED:
; 0000 09B4 // luu
; 0000 09B5 if ((Ent_pin == 0) && (bit_phim == 1))
	SBIC 0x1,7
	RJMP _0x253
	SBRC R2,0
	RJMP _0x254
_0x253:
	RJMP _0x252
_0x254:
; 0000 09B6 {
; 0000 09B7 if (sdt_sms1 != 0)
	LDS  R30,_sdt_sms1
	LDS  R31,_sdt_sms1+1
	SBIW R30,0
	BREQ _0x255
; 0000 09B8 {
; 0000 09B9 lcd_clear();
	CALL SUBOPT_0xB5
; 0000 09BA cot = 1;
; 0000 09BB lcd_gotoxy(3, 1);
	LDI  R30,LOW(3)
	CALL SUBOPT_0x6D
; 0000 09BC sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
	CALL SUBOPT_0xB6
	__POINTW1FN _0x0,884
	CALL SUBOPT_0xA3
	CALL SUBOPT_0xA4
	CALL SUBOPT_0xA5
	CALL SUBOPT_0xA6
	CALL SUBOPT_0xA7
	CALL SUBOPT_0xA8
	CALL SUBOPT_0xA9
	CALL SUBOPT_0xAA
	CALL SUBOPT_0xAB
	CALL SUBOPT_0xB7
; 0000 09BD sprintf(lcd, "da luu sdt sms:");
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,913
	CALL SUBOPT_0x82
; 0000 09BE lcd_puts(lcd);
; 0000 09BF lcd_gotoxy(5, 2);
	LDI  R30,LOW(5)
	CALL SUBOPT_0x3E
; 0000 09C0 sprintf(lcd, "%s", sdt_sms);
	CALL SUBOPT_0x34
	__POINTW1FN _0x0,875
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_sdt_sms)
	LDI  R31,HIGH(_sdt_sms)
	CALL SUBOPT_0xF
	CALL SUBOPT_0xA2
; 0000 09C1 lcd_puts(lcd);
; 0000 09C2 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 09C3 lcd_clear();
; 0000 09C4 EEPROM_write(21, sdt_sms1);
	CALL SUBOPT_0xB8
; 0000 09C5 EEPROM_write(22, sdt_sms2);
; 0000 09C6 EEPROM_write(23, sdt_sms3);
; 0000 09C7 EEPROM_write(24, sdt_sms4);
; 0000 09C8 EEPROM_write(25, sdt_sms5);
; 0000 09C9 EEPROM_write(26, sdt_sms6);
; 0000 09CA EEPROM_write(27, sdt_sms7);
; 0000 09CB EEPROM_write(28, sdt_sms8);
; 0000 09CC EEPROM_write(29, sdt_sms9);
; 0000 09CD }
; 0000 09CE else
	RJMP _0x256
_0x255:
; 0000 09CF {
; 0000 09D0 lcd_clear();
	CALL SUBOPT_0x5E
; 0000 09D1 lcd_gotoxy(2, 1);
; 0000 09D2 lcd_puts("kiem tra lai SDT!");
	__POINTW2MN _0x4F,224
	CALL SUBOPT_0x6E
; 0000 09D3 delay_ms(500);
; 0000 09D4 lcd_clear();
; 0000 09D5 }
_0x256:
; 0000 09D6 bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 09D7 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30E
; 0000 09D8 }
; 0000 09D9 else
_0x252:
; 0000 09DA {
; 0000 09DB bit_phim = 1;
	SET
	BLD  R2,0
; 0000 09DC delay_ms(25);
	LDI  R26,LOW(25)
_0x30E:
	LDI  R27,0
	CALL _delay_ms
; 0000 09DD }
; 0000 09DE };
_0x1EA:
; 0000 09DF }
; 0000 09E0 
; 0000 09E1 ////////////////////////////////////////////////////////////////
; 0000 09E2 if ((Mode_pin == 0) && (bit_phim == 1))
_0x1E4:
	SBIC 0x1,4
	RJMP _0x259
	SBRC R2,0
	RJMP _0x25A
_0x259:
	RJMP _0x258
_0x25A:
; 0000 09E3 {
; 0000 09E4 hang++;
	LDI  R26,LOW(_hang)
	LDI  R27,HIGH(_hang)
	CALL SUBOPT_0x55
; 0000 09E5 
; 0000 09E6 if (hang == 0)
	CALL SUBOPT_0x15
	SBIW R30,0
	BRNE _0x25B
; 0000 09E7 {
; 0000 09E8 lcd_clear();
	CALL SUBOPT_0xB5
; 0000 09E9 cot = 1;
; 0000 09EA strcpy(hienthi, "Mode");
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,242
	CALL _strcpy
; 0000 09EB }
; 0000 09EC if (hang == 4)
_0x25B:
	CALL SUBOPT_0x60
	SBIW R26,4
	BRNE _0x25C
; 0000 09ED {
; 0000 09EE lcd_clear();
	CALL SUBOPT_0xB5
; 0000 09EF cot = 1;
; 0000 09F0 strcpy(hienthi, "setDC");
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,247
	CALL _strcpy
; 0000 09F1 }
; 0000 09F2 if (hang == 7)
_0x25C:
	CALL SUBOPT_0x60
	SBIW R26,7
	BRNE _0x25D
; 0000 09F3 {
; 0000 09F4 lcd_clear();
	CALL SUBOPT_0xB5
; 0000 09F5 cot = 1;
; 0000 09F6 strcpy(hienthi, "sdt");
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,253
	CALL _strcpy
; 0000 09F7 }
; 0000 09F8 if (hang == 8)
_0x25D:
	CALL SUBOPT_0x60
	SBIW R26,8
	BRNE _0x25E
; 0000 09F9 {
; 0000 09FA hang = -1;
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	STS  _hang,R30
	STS  _hang+1,R31
; 0000 09FB lcd_clear();
	CALL _lcd_clear
; 0000 09FC strcpy(hienthi, "chung");
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,257
	CALL _strcpy
; 0000 09FD delay_ms(200);
	CALL SUBOPT_0x13
; 0000 09FE cot = 0;
	LDI  R30,LOW(0)
	STS  _cot,R30
	STS  _cot+1,R30
; 0000 09FF }
; 0000 0A00 bit_phim = 0;
_0x25E:
	CLT
	BLD  R2,0
; 0000 0A01 delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x30F
; 0000 0A02 }
; 0000 0A03 else
_0x258:
; 0000 0A04 {
; 0000 0A05 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0A06 delay_ms(25);
	LDI  R26,LOW(25)
_0x30F:
	LDI  R27,0
	CALL _delay_ms
; 0000 0A07 }
; 0000 0A08 // phim shift
; 0000 0A09 if ((Shift_pin == 0) && (bit_phim == 1) && ((strcmp(hienthi, "sdt") == 0) | (str ...
	SBIC 0x1,3
	RJMP _0x261
	SBRS R2,0
	RJMP _0x261
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,263
	CALL SUBOPT_0xB9
	PUSH R30
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,267
	CALL SUBOPT_0xB9
	POP  R26
	OR   R30,R26
	PUSH R30
	CALL SUBOPT_0x19
	__POINTW2MN _0x4F,272
	CALL SUBOPT_0xB9
	POP  R26
	OR   R30,R26
	BRNE _0x262
_0x261:
	RJMP _0x260
_0x262:
; 0000 0A0A {
; 0000 0A0B cot++;
	LDI  R26,LOW(_cot)
	LDI  R27,HIGH(_cot)
	CALL SUBOPT_0x55
; 0000 0A0C bit_phim = 0;
	CLT
	BLD  R2,0
; 0000 0A0D delay_ms(50);
	LDI  R26,LOW(50)
	RJMP _0x310
; 0000 0A0E }
; 0000 0A0F else
_0x260:
; 0000 0A10 {
; 0000 0A11 bit_phim = 1;
	SET
	BLD  R2,0
; 0000 0A12 delay_ms(25);
	LDI  R26,LOW(25)
_0x310:
	LDI  R27,0
	CALL _delay_ms
; 0000 0A13 }
; 0000 0A14 }
	RET
; .FEND

	.DSEG
_0x4F:
	.BYTE 0x116
;interrupt[TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0A18 {

	.CSEG
_timer0_ovf_isr:
; .FSTART _timer0_ovf_isr
	ST   -Y,R30
; 0000 0A19 // Reinitialize Timer 0 value
; 0000 0A1A TCNT0 = 0xF0;
	LDI  R30,LOW(240)
	OUT  0x32,R30
; 0000 0A1B // Place your code here
; 0000 0A1C }
	LD   R30,Y+
	RETI
; .FEND
;interrupt[TIM0_COMP] void timer0_comp_isr(void)
; 0000 0A20 {
_timer0_comp_isr:
; .FSTART _timer0_comp_isr
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 0A21 // Place your code here
; 0000 0A22 dht++;
	LDI  R26,LOW(_dht)
	LDI  R27,HIGH(_dht)
	CALL SUBOPT_0x55
; 0000 0A23 }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	RETI
; .FEND
;interrupt[TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0A27 {
_timer1_ovf_isr:
; .FSTART _timer1_ovf_isr
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 0A28 // Place your code here
; 0000 0A29 DHT22_getdata(&dht_nhiet_do, &dht_do_am);
	LDI  R30,LOW(_dht_nhiet_do)
	LDI  R31,HIGH(_dht_nhiet_do)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(_dht_do_am)
	LDI  R27,HIGH(_dht_do_am)
	CALL _DHT22_getdata
; 0000 0A2A }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
; .FEND
;void main(void)
; 0000 0A2C {
_main:
; .FSTART _main
; 0000 0A2D // Declare your local variables here
; 0000 0A2E 
; 0000 0A2F // Input/Output Ports initialization
; 0000 0A30 // Port A initialization
; 0000 0A31 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A32 DDRA = (0 << DDA7) | (0 << DDA6) | (0 << DDA5) | (0 << DDA4) | (0 << DDA3) | (0  ...
	LDI  R30,LOW(0)
	OUT  0x1A,R30
; 0000 0A33 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A34 PORTA = (0 << PORTA7) | (0 << PORTA6) | (0 << PORTA5) | (0 << PORTA4) | (0 << PO ...
	OUT  0x1B,R30
; 0000 0A35 
; 0000 0A36 // Port B initialization
; 0000 0A37 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A38 DDRB = (0 << DDB7) | (0 << DDB6) | (0 << DDB5) | (0 << DDB4) | (0 << DDB3) | (0  ...
	OUT  0x17,R30
; 0000 0A39 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=T Bit0=T
; 0000 0A3A PORTB = (0 << PORTB7) | (0 << PORTB6) | (0 << PORTB5) | (1 << PORTB4) | (1 << PO ...
	LDI  R30,LOW(28)
	OUT  0x18,R30
; 0000 0A3B 
; 0000 0A3C // Port C initialization
; 0000 0A3D // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A3E DDRC = (0 << DDC7) | (0 << DDC6) | (0 << DDC5) | (1 << DDC4) | (0 << DDC3) | (0  ...
	LDI  R30,LOW(16)
	OUT  0x14,R30
; 0000 0A3F // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A40 PORTC = (0 << PORTC7) | (0 << PORTC6) | (0 << PORTC5) | (0 << PORTC4) | (0 << PO ...
	LDI  R30,LOW(0)
	OUT  0x15,R30
; 0000 0A41 
; 0000 0A42 // Port D initialization
; 0000 0A43 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A44 DDRD = (1 << DDD7) | (1 << DDD6) | (1 << DDD5) | (0 << DDD4) | (0 << DDD3) | (0  ...
	LDI  R30,LOW(224)
	OUT  0x11,R30
; 0000 0A45 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A46 PORTD = (0 << PORTD7) | (0 << PORTD6) | (0 << PORTD5) | (0 << PORTD4) | (0 << PO ...
	LDI  R30,LOW(0)
	OUT  0x12,R30
; 0000 0A47 
; 0000 0A48 // Port E initialization
; 0000 0A49 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A4A DDRE = (0 << DDE7) | (0 << DDE6) | (0 << DDE5) | (0 << DDE4) | (0 << DDE3) | (0  ...
	OUT  0x2,R30
; 0000 0A4B // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=T Bit1=T Bit0=T
; 0000 0A4C PORTE = (1 << PORTE7) | (1 << PORTE6) | (1 << PORTE5) | (1 << PORTE4) | (1 << PO ...
	LDI  R30,LOW(248)
	OUT  0x3,R30
; 0000 0A4D 
; 0000 0A4E // Port F initialization
; 0000 0A4F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A50 DDRF = (0 << DDF7) | (0 << DDF6) | (0 << DDF5) | (0 << DDF4) | (0 << DDF3) | (0  ...
	LDI  R30,LOW(0)
	STS  97,R30
; 0000 0A51 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A52 PORTF = (0 << PORTF7) | (0 << PORTF6) | (0 << PORTF5) | (0 << PORTF4) | (1 << PO ...
	LDI  R30,LOW(8)
	STS  98,R30
; 0000 0A53 
; 0000 0A54 // Port G initialization
; 0000 0A55 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0A56 DDRG = (0 << DDG4) | (0 << DDG3) | (0 << DDG2) | (0 << DDG1) | (0 << DDG0);
	LDI  R30,LOW(0)
	STS  100,R30
; 0000 0A57 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0A58 PORTG = (0 << PORTG4) | (0 << PORTG3) | (0 << PORTG2) | (0 << PORTG1) | (0 << PO ...
	STS  101,R30
; 0000 0A59 
; 0000 0A5A // Timer/Counter 0 initialization
; 0000 0A5B // Clock source: System Clock
; 0000 0A5C // Clock value: 8000,000 kHz
; 0000 0A5D // Mode: Normal top=0xFF
; 0000 0A5E // OC0 output: Disconnected
; 0000 0A5F // Timer Period: 2 us
; 0000 0A60 ASSR = 0 << AS0;
	OUT  0x30,R30
; 0000 0A61 TCCR0 = (0 << WGM00) | (0 << COM01) | (0 << COM00) | (0 << WGM01) | (0 << CS02)  ...
	LDI  R30,LOW(1)
	OUT  0x33,R30
; 0000 0A62 TCNT0 = 0xF0;
	LDI  R30,LOW(240)
	OUT  0x32,R30
; 0000 0A63 OCR0 = 0x00;
	LDI  R30,LOW(0)
	OUT  0x31,R30
; 0000 0A64 
; 0000 0A65 // Timer/Counter 1 initialization
; 0000 0A66 // Clock source: System Clock
; 0000 0A67 // Clock value: 31,250 kHz
; 0000 0A68 // Mode: Normal top=0xFFFF
; 0000 0A69 // OC1A output: Disconnected
; 0000 0A6A // OC1B output: Disconnected
; 0000 0A6B // OC1C output: Disconnected
; 0000 0A6C // Noise Canceler: Off
; 0000 0A6D // Input Capture on Rising Edge
; 0000 0A6E // Timer Period: 2,0972 s
; 0000 0A6F // Timer1 Overflow Interrupt: On
; 0000 0A70 // Input Capture Interrupt: Off
; 0000 0A71 // Compare A Match Interrupt: Off
; 0000 0A72 // Compare B Match Interrupt: Off
; 0000 0A73 // Compare C Match Interrupt: Off
; 0000 0A74 TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << C ...
	OUT  0x2F,R30
; 0000 0A75 TCCR1B = (0 << ICNC1) | (1 << ICES1) | (0 << WGM13) | (0 << WGM12) | (1 << CS12) ...
	LDI  R30,LOW(68)
	OUT  0x2E,R30
; 0000 0A76 TCNT1H = 0xFF;
	LDI  R30,LOW(255)
	OUT  0x2D,R30
; 0000 0A77 TCNT1L = 0xFE;
	LDI  R30,LOW(254)
	OUT  0x2C,R30
; 0000 0A78 ICR1H = 0x00;
	LDI  R30,LOW(0)
	OUT  0x27,R30
; 0000 0A79 ICR1L = 0x00;
	OUT  0x26,R30
; 0000 0A7A OCR1AH = 0x00;
	OUT  0x2B,R30
; 0000 0A7B OCR1AL = 0x00;
	OUT  0x2A,R30
; 0000 0A7C OCR1BH = 0x00;
	OUT  0x29,R30
; 0000 0A7D OCR1BL = 0x00;
	OUT  0x28,R30
; 0000 0A7E OCR1CH = 0x00;
	STS  121,R30
; 0000 0A7F OCR1CL = 0x00;
	STS  120,R30
; 0000 0A80 
; 0000 0A81 // Timer/Counter 2 initialization
; 0000 0A82 // Clock source: System Clock
; 0000 0A83 // Clock value: Timer2 Stopped
; 0000 0A84 // Mode: Normal top=0xFF
; 0000 0A85 // OC2 output: Disconnected
; 0000 0A86 TCCR2 = (0 << WGM20) | (0 << COM21) | (0 << COM20) | (0 << WGM21) | (0 << CS22)  ...
	OUT  0x25,R30
; 0000 0A87 TCNT2 = 0x00;
	OUT  0x24,R30
; 0000 0A88 OCR2 = 0x00;
	OUT  0x23,R30
; 0000 0A89 
; 0000 0A8A // Timer/Counter 3 initialization
; 0000 0A8B // Clock source: System Clock
; 0000 0A8C // Clock value: Timer3 Stopped
; 0000 0A8D // Mode: Normal top=0xFFFF
; 0000 0A8E // OC3A output: Disconnected
; 0000 0A8F // OC3B output: Disconnected
; 0000 0A90 // OC3C output: Disconnected
; 0000 0A91 // Noise Canceler: Off
; 0000 0A92 // Input Capture on Falling Edge
; 0000 0A93 // Timer3 Overflow Interrupt: Off
; 0000 0A94 // Input Capture Interrupt: Off
; 0000 0A95 // Compare A Match Interrupt: Off
; 0000 0A96 // Compare B Match Interrupt: Off
; 0000 0A97 // Compare C Match Interrupt: Off
; 0000 0A98 TCCR3A = (0 << COM3A1) | (0 << COM3A0) | (0 << COM3B1) | (0 << COM3B0) | (0 << C ...
	STS  139,R30
; 0000 0A99 TCCR3B = (0 << ICNC3) | (0 << ICES3) | (0 << WGM33) | (0 << WGM32) | (0 << CS32) ...
	STS  138,R30
; 0000 0A9A TCNT3H = 0x00;
	STS  137,R30
; 0000 0A9B TCNT3L = 0x00;
	STS  136,R30
; 0000 0A9C ICR3H = 0x00;
	STS  129,R30
; 0000 0A9D ICR3L = 0x00;
	STS  128,R30
; 0000 0A9E OCR3AH = 0x00;
	STS  135,R30
; 0000 0A9F OCR3AL = 0x00;
	STS  134,R30
; 0000 0AA0 OCR3BH = 0x00;
	STS  133,R30
; 0000 0AA1 OCR3BL = 0x00;
	STS  132,R30
; 0000 0AA2 OCR3CH = 0x00;
	STS  131,R30
; 0000 0AA3 OCR3CL = 0x00;
	STS  130,R30
; 0000 0AA4 
; 0000 0AA5 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0AA6 TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE ...
	LDI  R30,LOW(4)
	OUT  0x37,R30
; 0000 0AA7 ETIMSK = (0 << TICIE3) | (0 << OCIE3A) | (0 << OCIE3B) | (0 << TOIE3) | (0 << OC ...
	LDI  R30,LOW(0)
	STS  125,R30
; 0000 0AA8 
; 0000 0AA9 // External Interrupt(s) initialization
; 0000 0AAA // INT0: Off
; 0000 0AAB // INT1: Off
; 0000 0AAC // INT2: Off
; 0000 0AAD // INT3: Off
; 0000 0AAE // INT4: Off
; 0000 0AAF // INT5: Off
; 0000 0AB0 // INT6: Off
; 0000 0AB1 // INT7: On
; 0000 0AB2 // INT7 Mode: Falling Edge
; 0000 0AB3 EICRA = (0 << ISC31) | (0 << ISC30) | (0 << ISC21) | (0 << ISC20) | (0 << ISC11) ...
	STS  106,R30
; 0000 0AB4 EICRB = (1 << ISC71) | (0 << ISC70) | (0 << ISC61) | (0 << ISC60) | (0 << ISC51) ...
	LDI  R30,LOW(128)
	OUT  0x3A,R30
; 0000 0AB5 EIMSK = (1 << INT7) | (0 << INT6) | (0 << INT5) | (0 << INT4) | (0 << INT3) | (0 ...
	OUT  0x39,R30
; 0000 0AB6 EIFR = (1 << INTF7) | (0 << INTF6) | (0 << INTF5) | (0 << INTF4) | (0 << INTF3)  ...
	OUT  0x38,R30
; 0000 0AB7 
; 0000 0AB8 // USART0 initialization
; 0000 0AB9 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0ABA // USART0 Receiver: On
; 0000 0ABB // USART0 Transmitter: On
; 0000 0ABC // USART0 Mode: Asynchronous
; 0000 0ABD // USART0 Baud Rate: 9600
; 0000 0ABE UCSR0A = (0 << RXC0) | (0 << TXC0) | (0 << UDRE0) | (0 << FE0) | (0 << DOR0) | ( ...
	LDI  R30,LOW(0)
	OUT  0xB,R30
; 0000 0ABF UCSR0B = (0 << RXCIE0) | (0 << TXCIE0) | (0 << UDRIE0) | (1 << RXEN0) | (1 << TX ...
	LDI  R30,LOW(24)
	OUT  0xA,R30
; 0000 0AC0 UCSR0C = (0 << UMSEL0) | (0 << UPM01) | (0 << UPM00) | (0 << USBS0) | (1 << UCSZ ...
	LDI  R30,LOW(6)
	STS  149,R30
; 0000 0AC1 UBRR0H = 0x00;
	LDI  R30,LOW(0)
	STS  144,R30
; 0000 0AC2 UBRR0L = 0x33;
	LDI  R30,LOW(51)
	OUT  0x9,R30
; 0000 0AC3 
; 0000 0AC4 // USART1 initialization
; 0000 0AC5 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0AC6 // USART1 Receiver: On
; 0000 0AC7 // USART1 Transmitter: On
; 0000 0AC8 // USART1 Mode: Asynchronous
; 0000 0AC9 // USART1 Baud Rate: 9600
; 0000 0ACA UCSR1A = (0 << RXC1) | (0 << TXC1) | (0 << UDRE1) | (0 << FE1) | (0 << DOR1) | ( ...
	LDI  R30,LOW(0)
	STS  155,R30
; 0000 0ACB UCSR1B = (0 << RXCIE1) | (0 << TXCIE1) | (0 << UDRIE1) | (1 << RXEN1) | (1 << TX ...
	LDI  R30,LOW(24)
	STS  154,R30
; 0000 0ACC UCSR1C = (0 << UMSEL1) | (0 << UPM11) | (0 << UPM10) | (0 << USBS1) | (1 << UCSZ ...
	LDI  R30,LOW(6)
	STS  157,R30
; 0000 0ACD UBRR1H = 0x00;
	LDI  R30,LOW(0)
	STS  152,R30
; 0000 0ACE UBRR1L = 0x33;
	LDI  R30,LOW(51)
	STS  153,R30
; 0000 0ACF 
; 0000 0AD0 // Analog Comparator initialization
; 0000 0AD1 // Analog Comparator: Off
; 0000 0AD2 // The Analog Comparator's positive input is
; 0000 0AD3 // connected to the AIN0 pin
; 0000 0AD4 // The Analog Comparator's negative input is
; 0000 0AD5 // connected to the AIN1 pin
; 0000 0AD6 ACSR = (1 << ACD) | (0 << ACBG) | (0 << ACO) | (0 << ACI) | (0 << ACIE) | (0 <<  ...
	LDI  R30,LOW(128)
	OUT  0x8,R30
; 0000 0AD7 
; 0000 0AD8 // ADC initialization
; 0000 0AD9 // ADC Clock frequency: 1000,000 kHz
; 0000 0ADA // ADC Voltage Reference: AREF pin
; 0000 0ADB ADMUX = ADC_VREF_TYPE;
	LDI  R30,LOW(0)
	OUT  0x7,R30
; 0000 0ADC ADCSRA = (1 << ADEN) | (0 << ADSC) | (0 << ADFR) | (0 << ADIF) | (0 << ADIE) | ( ...
	LDI  R30,LOW(131)
	OUT  0x6,R30
; 0000 0ADD SFIOR = (0 << ACME);
	LDI  R30,LOW(0)
	OUT  0x20,R30
; 0000 0ADE 
; 0000 0ADF // SPI initialization
; 0000 0AE0 // SPI disabled
; 0000 0AE1 SPCR = (0 << SPIE) | (0 << SPE) | (0 << DORD) | (0 << MSTR) | (0 << CPOL) | (0 < ...
	OUT  0xD,R30
; 0000 0AE2 
; 0000 0AE3 // TWI initialization
; 0000 0AE4 // TWI disabled
; 0000 0AE5 TWCR = (0 << TWEA) | (0 << TWSTA) | (0 << TWSTO) | (0 << TWEN) | (0 << TWIE);
	STS  116,R30
; 0000 0AE6 
; 0000 0AE7 // Bit-Banged I2C Bus initialization
; 0000 0AE8 // I2C Port: PORTD
; 0000 0AE9 // I2C SDA bit: 1
; 0000 0AEA // I2C SCL bit: 0
; 0000 0AEB // Bit Rate: 100 kHz
; 0000 0AEC // Note: I2C settings are specified in the
; 0000 0AED // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 0AEE i2c_init();
	CALL _i2c_init
; 0000 0AEF 
; 0000 0AF0 // DS1307 Real Time Clock initialization
; 0000 0AF1 // Square wave output on pin SQW/OUT: Off
; 0000 0AF2 // SQW/OUT pin state: 0
; 0000 0AF3 rtc_init(0, 0, 0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _rtc_init
; 0000 0AF4 
; 0000 0AF5 // Alphanumeric LCD initialization
; 0000 0AF6 // Connections are specified in the
; 0000 0AF7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0AF8 // RS - PORTA Bit 0
; 0000 0AF9 // RD - PORTA Bit 1
; 0000 0AFA // EN - PORTA Bit 2
; 0000 0AFB // D4 - PORTA Bit 4
; 0000 0AFC // D5 - PORTA Bit 5
; 0000 0AFD // D6 - PORTA Bit 6
; 0000 0AFE // D7 - PORTA Bit 7
; 0000 0AFF // Characters/line: 20
; 0000 0B00 lcd_init(20);
	LDI  R26,LOW(20)
	CALL _lcd_init
; 0000 0B01 
; 0000 0B02 // Global enable interrupts
; 0000 0B03 #asm("sei")
	SEI
; 0000 0B04 coi = 0;
	CBI  0x15,4
; 0000 0B05 delay_ms(10000);
	LDI  R26,LOW(10000)
	LDI  R27,HIGH(10000)
	CALL _delay_ms
; 0000 0B06 khoitaosim();
	CALL _khoitaosim
; 0000 0B07 lcd_clear();
	CALL _lcd_clear
; 0000 0B08 // "0334271185"
; 0000 0B09 sdt_sms1 = EEPROM_read(21);
	LDI  R26,LOW(21)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x79
; 0000 0B0A sdt_sms2 = EEPROM_read(22);
	LDI  R26,LOW(22)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7A
; 0000 0B0B sdt_sms3 = EEPROM_read(23);
	LDI  R26,LOW(23)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7B
; 0000 0B0C sdt_sms4 = EEPROM_read(24);
	LDI  R26,LOW(24)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7C
; 0000 0B0D sdt_sms5 = EEPROM_read(25);
	LDI  R26,LOW(25)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7D
; 0000 0B0E sdt_sms6 = EEPROM_read(26);
	LDI  R26,LOW(26)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7E
; 0000 0B0F sdt_sms7 = EEPROM_read(27);
	LDI  R26,LOW(27)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x7F
; 0000 0B10 sdt_sms8 = EEPROM_read(28);
	LDI  R26,LOW(28)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x80
; 0000 0B11 sdt_sms9 = EEPROM_read(29);
	LDI  R26,LOW(29)
	CALL SUBOPT_0x1A
	CALL SUBOPT_0x81
; 0000 0B12 if (!((sdt_sms1 >= 0) & (sdt_sms2 >= 0) & (sdt_sms3 >= 0) & (sdt_sms4 >= 0) & (s ...
	CALL SUBOPT_0xAC
	CALL SUBOPT_0xBA
	MOV  R0,R30
	CALL SUBOPT_0xAD
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xAE
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xAF
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xB0
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xB1
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xB2
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xB3
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xB4
	CALL SUBOPT_0xBA
	AND  R0,R30
	CALL SUBOPT_0xAC
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xAD
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xAE
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xAF
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xB0
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xB1
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xB2
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xB3
	CALL SUBOPT_0xBB
	CALL SUBOPT_0xB4
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL __LEW12
	AND  R30,R0
	BRNE _0x266
; 0000 0B13 {
; 0000 0B14 // sdt_sms1 = sdt_sms2 = sdt_sms3 = sdt_sms4 = sdt_sms5 = sdt_sms6 = sdt_sms7 =  ...
; 0000 0B15 sdt_sms1 = 0; // 5
	LDI  R30,LOW(0)
	STS  _sdt_sms1,R30
	STS  _sdt_sms1+1,R30
; 0000 0B16 sdt_sms2 = 3; // 5
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	CALL SUBOPT_0x7A
; 0000 0B17 sdt_sms3 = 4; // 9
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	CALL SUBOPT_0x7B
; 0000 0B18 sdt_sms4 = 2; // 6
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL SUBOPT_0x7C
; 0000 0B19 sdt_sms5 = 7; // 9
	LDI  R30,LOW(7)
	LDI  R31,HIGH(7)
	CALL SUBOPT_0x7D
; 0000 0B1A sdt_sms6 = 1; // 6
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	CALL SUBOPT_0x7E
; 0000 0B1B sdt_sms7 = 1; // 9
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	CALL SUBOPT_0x7F
; 0000 0B1C sdt_sms8 = 8; // 1
	LDI  R30,LOW(8)
	LDI  R31,HIGH(8)
	CALL SUBOPT_0x80
; 0000 0B1D sdt_sms9 = 5; // 5
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	CALL SUBOPT_0x81
; 0000 0B1E EEPROM_write(21, sdt_sms1);
	CALL SUBOPT_0xB8
; 0000 0B1F EEPROM_write(22, sdt_sms2);
; 0000 0B20 EEPROM_write(23, sdt_sms3);
; 0000 0B21 EEPROM_write(24, sdt_sms4);
; 0000 0B22 EEPROM_write(25, sdt_sms5);
; 0000 0B23 EEPROM_write(26, sdt_sms6);
; 0000 0B24 EEPROM_write(27, sdt_sms7);
; 0000 0B25 EEPROM_write(28, sdt_sms8);
; 0000 0B26 EEPROM_write(29, sdt_sms9);
; 0000 0B27 sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
; 0000 0B28 }
; 0000 0B29 else
_0x266:
; 0000 0B2A sprintf(sdt_sms, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_sms1, sdt_sms2, sdt_sms3, s ...
_0x311:
	LDI  R30,LOW(_sdt_sms)
	LDI  R31,HIGH(_sdt_sms)
	ST   -Y,R31
	ST   -Y,R30
	__POINTW1FN _0x0,884
	CALL SUBOPT_0xA3
	CALL SUBOPT_0xA4
	CALL SUBOPT_0xA5
	CALL SUBOPT_0xA6
	CALL SUBOPT_0xA7
	CALL SUBOPT_0xA8
	CALL SUBOPT_0xA9
	CALL SUBOPT_0xAA
	CALL SUBOPT_0xAB
	CALL SUBOPT_0xB7
; 0000 0B2B sdt_call1 = EEPROM_read(11);
	CALL SUBOPT_0x74
; 0000 0B2C sdt_call2 = EEPROM_read(12);
; 0000 0B2D sdt_call3 = EEPROM_read(13);
; 0000 0B2E sdt_call4 = EEPROM_read(14);
; 0000 0B2F sdt_call5 = EEPROM_read(15);
; 0000 0B30 sdt_call6 = EEPROM_read(16);
	CALL SUBOPT_0x75
; 0000 0B31 sdt_call7 = EEPROM_read(17);
	CALL SUBOPT_0x76
; 0000 0B32 sdt_call8 = EEPROM_read(18);
	CALL SUBOPT_0x77
; 0000 0B33 sdt_call9 = EEPROM_read(19);
	CALL SUBOPT_0x78
; 0000 0B34 if (!((sdt_call1 >= 0) & (sdt_call2 >= 0) & (sdt_call3 >= 0) & (sdt_call4 >= 0)  ...
	MOVW R26,R4
	CALL SUBOPT_0xBA
	MOV  R0,R30
	MOVW R26,R6
	CALL SUBOPT_0xBA
	AND  R0,R30
	MOVW R26,R8
	CALL SUBOPT_0xBA
	AND  R0,R30
	MOVW R26,R10
	CALL SUBOPT_0xBA
	AND  R0,R30
	MOVW R26,R12
	CALL SUBOPT_0xBA
	AND  R0,R30
	LDS  R26,_sdt_call6
	LDS  R27,_sdt_call6+1
	CALL SUBOPT_0xBA
	AND  R0,R30
	LDS  R26,_sdt_call7
	LDS  R27,_sdt_call7+1
	CALL SUBOPT_0xBA
	AND  R0,R30
	LDS  R26,_sdt_call8
	LDS  R27,_sdt_call8+1
	CALL SUBOPT_0xBA
	AND  R0,R30
	LDS  R26,_sdt_call9
	LDS  R27,_sdt_call9+1
	CALL SUBOPT_0xBA
	AND  R0,R30
	MOVW R26,R4
	CALL SUBOPT_0xBB
	MOVW R26,R6
	CALL SUBOPT_0xBB
	MOVW R26,R8
	CALL SUBOPT_0xBB
	MOVW R26,R10
	CALL SUBOPT_0xBB
	MOVW R26,R12
	CALL SUBOPT_0xBB
	LDS  R26,_sdt_call6
	LDS  R27,_sdt_call6+1
	CALL SUBOPT_0xBB
	LDS  R26,_sdt_call7
	LDS  R27,_sdt_call7+1
	CALL SUBOPT_0xBB
	LDS  R26,_sdt_call8
	LDS  R27,_sdt_call8+1
	CALL SUBOPT_0xBB
	LDS  R26,_sdt_call9
	LDS  R27,_sdt_call9+1
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL __LEW12
	AND  R30,R0
	BREQ PC+2
	RJMP _0x268
; 0000 0B35 {
; 0000 0B36 // sdt_call1 = sdt_call2 = sdt_call3 = sdt_call4 = sdt_call5 = sdt_call6 = sdt_c ...
; 0000 0B37 sdt_call1 = 0; // 5 0
	CLR  R4
	CLR  R5
; 0000 0B38 sdt_call2 = 3; // 5 3
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	MOVW R6,R30
; 0000 0B39 sdt_call3 = 4; // 9 4
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	MOVW R8,R30
; 0000 0B3A sdt_call4 = 2; // 6 2
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	MOVW R10,R30
; 0000 0B3B sdt_call5 = 7; // 9 7
	LDI  R30,LOW(7)
	LDI  R31,HIGH(7)
	MOVW R12,R30
; 0000 0B3C sdt_call6 = 1; // 6 1
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _sdt_call6,R30
	STS  _sdt_call6+1,R31
; 0000 0B3D sdt_call7 = 1; // 9 1
	STS  _sdt_call7,R30
	STS  _sdt_call7+1,R31
; 0000 0B3E sdt_call8 = 8; // 1 8
	LDI  R30,LOW(8)
	LDI  R31,HIGH(8)
	STS  _sdt_call8,R30
	STS  _sdt_call8+1,R31
; 0000 0B3F sdt_call9 = 5; // 5 5
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	CALL SUBOPT_0x78
; 0000 0B40 EEPROM_write(11, sdt_call1);
	LDI  R30,LOW(11)
	LDI  R31,HIGH(11)
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R4
	CALL _EEPROM_write
; 0000 0B41 EEPROM_write(12, sdt_call2);
	LDI  R30,LOW(12)
	LDI  R31,HIGH(12)
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R6
	CALL _EEPROM_write
; 0000 0B42 EEPROM_write(13, sdt_call3);
	LDI  R30,LOW(13)
	LDI  R31,HIGH(13)
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R8
	CALL _EEPROM_write
; 0000 0B43 EEPROM_write(14, sdt_call4);
	LDI  R30,LOW(14)
	LDI  R31,HIGH(14)
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R10
	CALL _EEPROM_write
; 0000 0B44 EEPROM_write(15, sdt_call5);
	LDI  R30,LOW(15)
	LDI  R31,HIGH(15)
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R12
	CALL _EEPROM_write
; 0000 0B45 EEPROM_write(16, sdt_call6);
	LDI  R30,LOW(16)
	LDI  R31,HIGH(16)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_call6
	CALL _EEPROM_write
; 0000 0B46 EEPROM_write(17, sdt_call7);
	LDI  R30,LOW(17)
	LDI  R31,HIGH(17)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_call7
	CALL _EEPROM_write
; 0000 0B47 EEPROM_write(18, sdt_call8);
	LDI  R30,LOW(18)
	LDI  R31,HIGH(18)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_call8
	CALL _EEPROM_write
; 0000 0B48 EEPROM_write(19, sdt_call9);
	LDI  R30,LOW(19)
	LDI  R31,HIGH(19)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_call9
	CALL _EEPROM_write
; 0000 0B49 sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_call ...
; 0000 0B4A }
; 0000 0B4B else
_0x268:
; 0000 0B4C sprintf(sdt_call, "0%1d%1d%1d%1d%1d%1d%1d%1d%1d", sdt_call1, sdt_call2, sdt_call ...
_0x312:
	LDI  R30,LOW(_sdt_call)
	LDI  R31,HIGH(_sdt_call)
	ST   -Y,R31
	ST   -Y,R30
	__POINTW1FN _0x0,884
	ST   -Y,R31
	ST   -Y,R30
	MOVW R30,R4
	CALL SUBOPT_0x38
	MOVW R30,R6
	CALL SUBOPT_0x38
	MOVW R30,R8
	CALL SUBOPT_0x38
	MOVW R30,R10
	CALL SUBOPT_0x38
	MOVW R30,R12
	CALL SUBOPT_0x38
	LDS  R30,_sdt_call6
	LDS  R31,_sdt_call6+1
	CALL SUBOPT_0x38
	LDS  R30,_sdt_call7
	LDS  R31,_sdt_call7+1
	CALL SUBOPT_0x38
	LDS  R30,_sdt_call8
	LDS  R31,_sdt_call8+1
	CALL SUBOPT_0x38
	LDS  R30,_sdt_call9
	LDS  R31,_sdt_call9+1
	CALL SUBOPT_0x38
	CALL SUBOPT_0xB7
; 0000 0B4D dc_low_1 = EEPROM_read(31) * 10 + EEPROM_read(32);
	CALL SUBOPT_0x47
	PUSH R31
	PUSH R30
	LDI  R26,LOW(32)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x48
; 0000 0B4E dc_low_2 = EEPROM_read(33) * 10 + EEPROM_read(34);
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x49
; 0000 0B4F dc_high = EEPROM_read(35) * 10 + EEPROM_read(36);
	PUSH R31
	PUSH R30
	LDI  R26,LOW(36)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0x4A
; 0000 0B50 if ((dc_low_1 > 999) | (dc_low_2 > 999) | (dc_high > 999))
	BREQ _0x26A
; 0000 0B51 {
; 0000 0B52 dc_low_1 = 470;
	CALL SUBOPT_0x4B
; 0000 0B53 dc_low_2 = 480;
; 0000 0B54 dc_high = 585;
; 0000 0B55 EEPROM_write(31, dc_low_1 / 10);
	CALL SUBOPT_0x4C
; 0000 0B56 EEPROM_write(32, dc_low_1 % 10);
	CALL SUBOPT_0x4D
; 0000 0B57 EEPROM_write(33, dc_low_2 / 10);
	CALL SUBOPT_0x4E
; 0000 0B58 EEPROM_write(34, dc_low_2 % 10);
	CALL SUBOPT_0x4F
; 0000 0B59 EEPROM_write(35, dc_high / 10);
	CALL SUBOPT_0x50
; 0000 0B5A EEPROM_write(36, dc_high % 10);
	MOV  R26,R30
	CALL _EEPROM_write
; 0000 0B5B }
; 0000 0B5C if (KTAC1 == 0)
_0x26A:
	SBIC 0x16,2
	RJMP _0x26B
; 0000 0B5D bit_ac1 == 0;
	LDI  R26,0
	SBRC R2,5
	LDI  R26,1
	LDI  R30,LOW(0)
	RJMP _0x313
; 0000 0B5E else
_0x26B:
; 0000 0B5F bit_ac1 == 1;
	LDI  R26,0
	SBRC R2,5
	LDI  R26,1
	LDI  R30,LOW(1)
_0x313:
	CALL __EQB12
; 0000 0B60 if (KTAC2 == 0)
	SBIC 0x16,3
	RJMP _0x26D
; 0000 0B61 bit_ac2 == 0;
	LDI  R26,0
	SBRC R2,6
	LDI  R26,1
	LDI  R30,LOW(0)
	RJMP _0x314
; 0000 0B62 else
_0x26D:
; 0000 0B63 bit_ac2 == 1;
	LDI  R26,0
	SBRC R2,6
	LDI  R26,1
	LDI  R30,LOW(1)
_0x314:
	CALL __EQB12
; 0000 0B64 bit_temp = bit_humi = 0;
	CLT
	BLD  R2,2
	BLD  R2,1
; 0000 0B65 if (AS == 0)
	SBIC 0x16,4
	RJMP _0x26F
; 0000 0B66 bit_as = 0;
	RJMP _0x315
; 0000 0B67 else
_0x26F:
; 0000 0B68 bit_as = 1;
	SET
_0x315:
	BLD  R2,7
; 0000 0B69 
; 0000 0B6A while (1)
_0x271:
; 0000 0B6B {
; 0000 0B6C ct_hienthichung();
	CALL _ct_hienthichung
; 0000 0B6D //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0B6E DC1 = (read_adc(1) * 5 * 10 ^ 1 / 1023);
	LDI  R26,LOW(1)
	CALL SUBOPT_0xBC
	STS  _DC1,R30
	STS  _DC1+1,R31
; 0000 0B6F dc11 = DC1 / 610;
	CALL SUBOPT_0xBD
	CALL __DIVW21U
	STS  _dc11,R30
	STS  _dc11+1,R31
; 0000 0B70 dc12 = DC1 % 610 / 100;
	CALL SUBOPT_0xBD
	CALL SUBOPT_0xBE
	STS  _dc12,R30
	STS  _dc12+1,R31
; 0000 0B71 // dc 2
; 0000 0B72 DC2 = (read_adc(0) * 5 * 10 ^ 1 / 1023);
	LDI  R26,LOW(0)
	CALL SUBOPT_0xBC
	STS  _DC2,R30
	STS  _DC2+1,R31
; 0000 0B73 dc21 = DC2 / 615;
	CALL SUBOPT_0xBF
	CALL __DIVW21U
	STS  _dc21,R30
	STS  _dc21+1,R31
; 0000 0B74 dc22 = DC2 % 615 / 100;
	CALL SUBOPT_0xBF
	CALL SUBOPT_0xBE
	STS  _dc22,R30
	STS  _dc22+1,R31
; 0000 0B75 // // ////////////////////////////////////////////////////////////////////////// ...
; 0000 0B76 doam1 = EEPROM_read(0);
	LDI  R26,LOW(0)
	CALL SUBOPT_0x1A
	STS  _doam1,R30
	STS  _doam1+1,R31
; 0000 0B77 doam2 = EEPROM_read(1);
	LDI  R26,LOW(1)
	CALL SUBOPT_0x1A
	STS  _doam2,R30
	STS  _doam2+1,R31
; 0000 0B78 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0B79 if ((dht_do_am >= doam1 * 10) & (dht_do_am <= doam2 * 10) & (bit_humi == 1))
	CALL SUBOPT_0xC0
	CALL __GEW12
	MOV  R22,R30
	CALL SUBOPT_0xC1
	CALL SUBOPT_0xC2
	LDI  R26,0
	SBRC R2,2
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x274
; 0000 0B7A {
; 0000 0B7B bit_humi = 0;
	CLT
	BLD  R2,2
; 0000 0B7C sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xC3
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B7D puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0B7E delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0B7F sprintf(sms, "do am tram %s hien tai la %d,%d da ve nguong binh thuong  ", tram, ...
	__POINTW1FN _0x0,965
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B80 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0B81 delay_ms(1000);
	CALL SUBOPT_0xC
; 0000 0B82 // sprintf(sms, "do am tram %s hien tai la %d,%d da ve nguong binh thuong  ", tr ...
; 0000 0B83 // send_sms(sdt_sms, sms);
; 0000 0B84 // delay_ms(1000);
; 0000 0B85 lcd_clear();
; 0000 0B86 }
; 0000 0B87 if ((dht_do_am < doam1 * 10) & (bit_humi == 0))
_0x274:
	CALL SUBOPT_0xC0
	CALL __LTW12
	CALL SUBOPT_0xC7
	BREQ _0x275
; 0000 0B88 {
; 0000 0B89 bit_humi = 1;
	SET
	BLD  R2,2
; 0000 0B8A bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0B8B sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
	CALL SUBOPT_0xC3
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B8C puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0B8D delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0B8E sprintf(sms, "do am tram %s hien tai la %d,%d o duoi nguong  ", tram, dht_do_am  ...
	__POINTW1FN _0x0,1024
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B8F send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0B90 delay_ms(1000);
	CALL _delay_ms
; 0000 0B91 // sprintf(sms, "do am tram %s hien tai la %d,%d o duoi nguong  ", tram, dht_do_ ...
; 0000 0B92 // send_sms(sdt_sms, sms);
; 0000 0B93 // delay_ms(1000);
; 0000 0B94 }
; 0000 0B95 if ((dht_do_am > doam2 * 10) & (bit_humi == 0))
_0x275:
	CALL SUBOPT_0xC1
	CALL __GTW12
	CALL SUBOPT_0xC7
	BREQ _0x276
; 0000 0B96 {
; 0000 0B97 bit_coi = 1;
	SET
	BLD  R2,4
; 0000 0B98 bit_humi = 1;
	BLD  R2,2
; 0000 0B99 sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xC3
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B9A puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0B9B delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0B9C sprintf(sms, "do am tram %s hien tai la %d,%d o tren nguong  ", tram, dht_do_am  ...
	__POINTW1FN _0x0,1072
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0B9D send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0B9E delay_ms(1000);
	CALL _delay_ms
; 0000 0B9F // sprintf(sms, "do am tram %s hien tai la %d,%d o tren nguong  ", tram, dht_do_ ...
; 0000 0BA0 // send_sms(sdt_sms, sms);
; 0000 0BA1 // delay_ms(1000);
; 0000 0BA2 }
; 0000 0BA3 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0BA4 nhietdo1 = EEPROM_read(2);
_0x276:
	LDI  R26,LOW(2)
	CALL SUBOPT_0x1A
	STS  _nhietdo1,R30
	STS  _nhietdo1+1,R31
; 0000 0BA5 nhietdo2 = EEPROM_read(3);
	LDI  R26,LOW(3)
	CALL SUBOPT_0x1A
	STS  _nhietdo2,R30
	STS  _nhietdo2+1,R31
; 0000 0BA6 // DHT22_getdata(&dht_nhiet_do, &dht_do_am);
; 0000 0BA7 if ((dht_nhiet_do >= nhietdo1 * 10) & (dht_nhiet_do <= nhietdo2 * 10) & (bit_tem ...
	CALL SUBOPT_0xC9
	CALL __GEW12
	MOV  R22,R30
	CALL SUBOPT_0xCA
	CALL SUBOPT_0xC2
	LDI  R26,0
	SBRC R2,1
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x277
; 0000 0BA8 {
; 0000 0BA9 bit_temp = 0;
	CLT
	BLD  R2,1
; 0000 0BAA sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
	CALL SUBOPT_0x68
	CALL SUBOPT_0xCB
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BAB puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0BAC delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0BAD sprintf(sms, "nhiet do tram %s hien tai la %d,%d da tro ve nguong binh thuong  " ...
	__POINTW1FN _0x0,1141
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BAE send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0BAF delay_ms(1000);
	CALL _delay_ms
; 0000 0BB0 // sprintf(sms, "nhiet do tram %s hien tai la %d,%d da tro ve nguong binh thuong ...
; 0000 0BB1 // send_sms(sdt_sms, sms);
; 0000 0BB2 // delay_ms(1000);
; 0000 0BB3 }
; 0000 0BB4 if ((dht_nhiet_do < nhietdo1 * 10) & (bit_temp == 0))
_0x277:
	CALL SUBOPT_0xC9
	CALL __LTW12
	CALL SUBOPT_0xCD
	BREQ _0x278
; 0000 0BB5 {
; 0000 0BB6 bit_temp = 1;
	SET
	BLD  R2,1
; 0000 0BB7 bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0BB8 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
	CALL SUBOPT_0xCB
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BB9 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0BBA delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0BBB sprintf(sms, "nhiet do tram %s hien tai la %d,%d o duoi  nguong  ", tram, dht_nh ...
	__POINTW1FN _0x0,1207
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BBC send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0BBD delay_ms(1000);
	CALL _delay_ms
; 0000 0BBE // sprintf(sms, "nhiet do tram %s hien tai la %d,%d o duoi  nguong  ", tram, dht ...
; 0000 0BBF // send_sms(sdt_sms, sms);
; 0000 0BC0 // delay_ms(1000);
; 0000 0BC1 }
; 0000 0BC2 if ((dht_nhiet_do > nhietdo2 * 10) & (bit_temp == 0))
_0x278:
	CALL SUBOPT_0xCA
	CALL __GTW12
	CALL SUBOPT_0xCD
	BREQ _0x279
; 0000 0BC3 {
; 0000 0BC4 bit_coi = 1;
	SET
	BLD  R2,4
; 0000 0BC5 bit_temp = 1;
	BLD  R2,1
; 0000 0BC6 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
	CALL SUBOPT_0x68
	CALL SUBOPT_0xCB
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BC7 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0BC8 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0BC9 sprintf(sms, "nhiet do tram %s hien tai la %d,%d o tren  nguong  ", tram, dht_nh ...
	__POINTW1FN _0x0,1259
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0BCA send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0BCB delay_ms(1000);
	CALL _delay_ms
; 0000 0BCC // sprintf(sms, "nhiet do tram %s hien tai la %d,%d o tren  nguong  ", tram, dht ...
; 0000 0BCD // send_sms(sdt_sms, sms);
; 0000 0BCE // delay_ms(1000);
; 0000 0BCF }
; 0000 0BD0 ////////////////////////////////
; 0000 0BD1 if ((AS == 0) & (bit_as == 0))
_0x279:
	LDI  R26,0
	SBIC 0x16,4
	LDI  R26,1
	CALL SUBOPT_0xCE
	LDI  R26,0
	SBRC R2,7
	LDI  R26,1
	CALL SUBOPT_0xCF
	BREQ _0x27A
; 0000 0BD2 {
; 0000 0BD3 bit_as = 1;
	SET
	BLD  R2,7
; 0000 0BD4 sprintf(enthernet, "%s,light,2", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1311
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0BD5 puts1(enthernet);
; 0000 0BD6 delay_ms(100);
	CALL _delay_ms
; 0000 0BD7 lcd_gotoxy(0, 0);
	CALL SUBOPT_0x9
; 0000 0BD8 lcd_clear();
	CALL SUBOPT_0x6F
; 0000 0BD9 sprintf(lcd, "mat anh sang ");
	__POINTW1FN _0x0,1322
	CALL SUBOPT_0x82
; 0000 0BDA lcd_puts(lcd);
; 0000 0BDB delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL SUBOPT_0xC
; 0000 0BDC lcd_clear();
; 0000 0BDD }
; 0000 0BDE if ((AS == 1) & (bit_as == 1))
_0x27A:
	LDI  R26,0
	SBIC 0x16,4
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R2,7
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x27B
; 0000 0BDF {
; 0000 0BE0 bit_as = 0;
	CLT
	BLD  R2,7
; 0000 0BE1 sprintf(enthernet, "%s,light,1", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1336
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0BE2 puts1(enthernet);
; 0000 0BE3 delay_ms(100);
	CALL _delay_ms
; 0000 0BE4 lcd_gotoxy(0, 0);
	CALL SUBOPT_0x9
; 0000 0BE5 lcd_clear();
	CALL SUBOPT_0x6F
; 0000 0BE6 sprintf(lcd, "co anh sang ");
	__POINTW1FN _0x0,1347
	CALL SUBOPT_0x82
; 0000 0BE7 lcd_puts(lcd);
; 0000 0BE8 delay_ms(500);
	CALL SUBOPT_0x5F
; 0000 0BE9 lcd_clear();
; 0000 0BEA }
; 0000 0BEB //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0BEC if ((KTAC1 == 0) & (bit_ac1 == 0))
_0x27B:
	LDI  R26,0
	SBIC 0x16,2
	LDI  R26,1
	CALL SUBOPT_0xCE
	LDI  R26,0
	SBRC R2,5
	LDI  R26,1
	CALL SUBOPT_0xCF
	BREQ _0x27C
; 0000 0BED {
; 0000 0BEE bit_ac1 = 1;
	SET
	BLD  R2,5
; 0000 0BEF bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0BF0 sprintf(enthernet, "%s,voltage_ac,1", IP);
	__POINTW1FN _0x0,1360
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0BF1 puts1(enthernet);
; 0000 0BF2 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0BF3 sprintf(sms, "canh bao mat dien ap AC1 tai tram %s", tram);
	__POINTW1FN _0x0,1376
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xD1
; 0000 0BF4 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0BF5 delay_ms(1000);
	CALL _delay_ms
; 0000 0BF6 // sprintf(sms, "canh bao mat dien ap AC1 tai tram %s", tram);
; 0000 0BF7 // send_sms(sdt_sms, sms);
; 0000 0BF8 // delay_ms(1000);
; 0000 0BF9 }
; 0000 0BFA if ((KTAC1 == 1) & (bit_ac1 == 1))
_0x27C:
	LDI  R26,0
	SBIC 0x16,2
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R2,5
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x27D
; 0000 0BFB {
; 0000 0BFC bit_ac1 = 0;
	CLT
	BLD  R2,5
; 0000 0BFD sprintf(enthernet, "%s,voltage_ac,220", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1413
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0BFE puts1(enthernet);
; 0000 0BFF delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C00 sprintf(sms, "da co dien ap AC1 tai tram %s", tram);
	__POINTW1FN _0x0,1431
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xD1
; 0000 0C01 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0C02 delay_ms(1000);
	CALL _delay_ms
; 0000 0C03 // sprintf(sms, "da co dien ap AC1 tai tram %s", tram);
; 0000 0C04 // send_sms(sdt_sms, sms);
; 0000 0C05 // delay_ms(1000);
; 0000 0C06 }
; 0000 0C07 ////////////////////////////////////////////////////////////////
; 0000 0C08 if ((KTAC2 == 0) & (bit_ac2 == 0))
_0x27D:
	LDI  R26,0
	SBIC 0x16,3
	LDI  R26,1
	CALL SUBOPT_0xCE
	LDI  R26,0
	SBRC R2,6
	LDI  R26,1
	CALL SUBOPT_0xCF
	BREQ _0x27E
; 0000 0C09 {
; 0000 0C0A bit_ac2 = 1;
	SET
	BLD  R2,6
; 0000 0C0B bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0C0C sprintf(enthernet, "%s,voltage_ac2,1", IP);
	__POINTW1FN _0x0,1461
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0C0D puts1(enthernet);
; 0000 0C0E delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C0F sprintf(sms, "Canh bao mat dien ap AC2 tai tram %s", tram);
	__POINTW1FN _0x0,1478
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xD1
; 0000 0C10 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0C11 delay_ms(1000);
	CALL _delay_ms
; 0000 0C12 // sprintf(sms, "Canh bao mat dien ap AC2 tai tram %s", tram);
; 0000 0C13 // send_sms(sdt_sms, sms);
; 0000 0C14 // delay_ms(1000);
; 0000 0C15 }
; 0000 0C16 if ((KTAC2 == 1) & (bit_ac2 == 1))
_0x27E:
	LDI  R26,0
	SBIC 0x16,3
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R2,6
	LDI  R26,1
	CALL SUBOPT_0x6
	BREQ _0x27F
; 0000 0C17 {
; 0000 0C18 bit_ac2 = 0;
	CLT
	BLD  R2,6
; 0000 0C19 sprintf(enthernet, "%s,voltage_ac2,220", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1515
	CALL SUBOPT_0x69
	CALL SUBOPT_0xD0
; 0000 0C1A puts1(enthernet);
; 0000 0C1B delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C1C sprintf(sms, "Da co dien ap AC2 tai tram %s", tram);
	__POINTW1FN _0x0,1534
	CALL SUBOPT_0xA1
	CALL SUBOPT_0xD1
; 0000 0C1D send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0C1E delay_ms(1000);
	CALL _delay_ms
; 0000 0C1F // sprintf(sms, "Da co dien ap AC2 tai tram %s", tram);
; 0000 0C20 // send_sms(sdt_sms, sms);
; 0000 0C21 // delay_ms(1000);
; 0000 0C22 }
; 0000 0C23 if ((min % 5 == 0) & (sec == 0) & (bit_enthernet == 1))
_0x27F:
	LDS  R26,_min
	CLR  R27
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	CALL __MODW21
	LDI  R26,LOW(0)
	LDI  R27,HIGH(0)
	CALL __EQW12
	MOV  R0,R30
	LDS  R26,_sec
	LDI  R30,LOW(0)
	CALL __EQB12
	AND  R0,R30
	LDI  R26,0
	SBRC R3,4
	LDI  R26,1
	CALL SUBOPT_0x6
	BRNE PC+2
	RJMP _0x280
; 0000 0C24 {
; 0000 0C25 bit_enthernet = 0;
	CLT
	BLD  R3,4
; 0000 0C26 lcd_clear();
	CALL _lcd_clear
; 0000 0C27 lcd_puts("truyen enthernet");
	__POINTW2MN _0x281,0
	CALL _lcd_puts
; 0000 0C28 sprintf(enthernet, "%s,temperature,%d.%d", IP, dht_nhiet_do / 10, dht_nhiet_do % ...
	CALL SUBOPT_0x68
	CALL SUBOPT_0xCB
	CALL SUBOPT_0xCC
	CALL SUBOPT_0x38
	CALL SUBOPT_0x45
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0C29 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C2A delay_ms(100);
	CALL SUBOPT_0x6C
; 0000 0C2B sprintf(enthernet, "%s,humidity,%d.%d", IP, dht_do_am / 10, dht_do_am % 10);
	CALL SUBOPT_0xC3
	CALL SUBOPT_0xC4
	CALL SUBOPT_0x38
	CALL SUBOPT_0x41
	CALL SUBOPT_0x38
	CALL SUBOPT_0x12
; 0000 0C2C puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C2D delay_ms(100);
	CALL SUBOPT_0x6C
; 0000 0C2E sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
	CALL SUBOPT_0xD2
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0x12
; 0000 0C2F puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C30 delay_ms(100);
	CALL SUBOPT_0x6C
; 0000 0C31 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
	CALL SUBOPT_0xD3
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x12
; 0000 0C32 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C33 delay_ms(100);
	CALL _delay_ms
; 0000 0C34 if (KTAC1 == 1)
	SBIS 0x16,2
	RJMP _0x282
; 0000 0C35 {
; 0000 0C36 sprintf(enthernet, "%s,voltage_ac,220", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1413
	RJMP _0x316
; 0000 0C37 puts1(enthernet);
; 0000 0C38 delay_ms(100);
; 0000 0C39 }
; 0000 0C3A else
_0x282:
; 0000 0C3B {
; 0000 0C3C sprintf(enthernet, "%s,voltage_ac,1", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1360
_0x316:
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0xD4
	CALL SUBOPT_0xD0
; 0000 0C3D puts1(enthernet);
; 0000 0C3E delay_ms(100);
	CALL _delay_ms
; 0000 0C3F }
; 0000 0C40 if (KTAC2 == 1)
	SBIS 0x16,3
	RJMP _0x284
; 0000 0C41 {
; 0000 0C42 sprintf(enthernet, "%s,voltage_ac2,220", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1515
	RJMP _0x317
; 0000 0C43 puts1(enthernet);
; 0000 0C44 delay_ms(100);
; 0000 0C45 }
; 0000 0C46 else
_0x284:
; 0000 0C47 {
; 0000 0C48 sprintf(enthernet, "%s,voltage_ac2,1", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1461
_0x317:
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0xD4
	CALL SUBOPT_0xD0
; 0000 0C49 puts1(enthernet);
; 0000 0C4A delay_ms(100);
	CALL _delay_ms
; 0000 0C4B }
; 0000 0C4C if (AS == 1)
	SBIS 0x16,4
	RJMP _0x286
; 0000 0C4D {
; 0000 0C4E sprintf(enthernet, "%s,light,1", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1336
	RJMP _0x318
; 0000 0C4F puts1(enthernet);
; 0000 0C50 delay_ms(100);
; 0000 0C51 }
; 0000 0C52 else
_0x286:
; 0000 0C53 {
; 0000 0C54 sprintf(enthernet, "%s,light,2", IP);
	CALL SUBOPT_0x68
	__POINTW1FN _0x0,1311
_0x318:
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0xD4
	CALL SUBOPT_0xD0
; 0000 0C55 puts1(enthernet);
; 0000 0C56 delay_ms(100);
	CALL _delay_ms
; 0000 0C57 }
; 0000 0C58 lcd_puts("truyen xong");
	__POINTW2MN _0x281,17
	CALL _lcd_puts
; 0000 0C59 lcd_clear();
	CALL _lcd_clear
; 0000 0C5A }
; 0000 0C5B else
	RJMP _0x288
_0x280:
; 0000 0C5C {
; 0000 0C5D bit_enthernet = 1;
	SET
	BLD  R3,4
; 0000 0C5E delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0C5F }
_0x288:
; 0000 0C60 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0C61 //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0C62 dc_low_11 = EEPROM_read(31) * 10 + EEPROM_read(32);
	CALL SUBOPT_0x47
	PUSH R31
	PUSH R30
	LDI  R26,LOW(32)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_low_11,R30
	STS  _dc_low_11+1,R31
; 0000 0C63 dc_low_21 = EEPROM_read(33) * 10 + EEPROM_read(34);
	CALL SUBOPT_0x93
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0xD5
; 0000 0C64 dc_high1 = EEPROM_read(35) * 10 + EEPROM_read(36);
	CALL SUBOPT_0x9C
	PUSH R31
	PUSH R30
	LDI  R26,LOW(36)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_high1,R30
	STS  _dc_high1+1,R31
; 0000 0C65 if ((dc11 * 10 + dc22 < dc_low_11) & (bit_dc1_cb2 == 0))
	CALL SUBOPT_0xD6
	CALL SUBOPT_0xD7
	CALL __LTW12
	CALL SUBOPT_0xD8
	BREQ _0x289
; 0000 0C66 {
; 0000 0C67 bit_coi = 1;
	SET
	BLD  R2,4
; 0000 0C68 bit_dc1_cb2 = 1;
	BLD  R3,1
; 0000 0C69 bit_dc1_cb1 = 0;
	CLT
	BLD  R3,0
; 0000 0C6A led_vang = 0;
	CBI  0x12,6
; 0000 0C6B sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xD2
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0x12
; 0000 0C6C puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C6D delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C6E sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV thap hon muc %d,%dV", tra ...
	__POINTW1FN _0x0,1635
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0xD9
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDA
	CALL SUBOPT_0x38
	CALL SUBOPT_0x11
; 0000 0C6F send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0C70 delay_ms(1000);
	CALL _delay_ms
; 0000 0C71 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV thap hon muc %d,%dV",  ...
; 0000 0C72 // send_sms(sdt_sms, sms);
; 0000 0C73 // delay_ms(1000);
; 0000 0C74 
; 0000 0C75 // nho hon nguong
; 0000 0C76 }
; 0000 0C77 dc_low_21 = EEPROM_read(33) * 10 + EEPROM_read(34);
_0x289:
	CALL SUBOPT_0x93
	PUSH R31
	PUSH R30
	LDI  R26,LOW(34)
	CALL SUBOPT_0x1A
	POP  R26
	POP  R27
	CALL SUBOPT_0xD5
; 0000 0C78 if ((dc11 * 10 + dc22 >= dc_low_11) & (dc11 * 10 + dc22 <= dc_low_21) & (bit_dc1 ...
	CALL SUBOPT_0xD6
	MOVW R0,R30
	CALL SUBOPT_0xD7
	CALL SUBOPT_0xDB
	LDI  R26,0
	SBRC R3,0
	LDI  R26,1
	CALL SUBOPT_0xCF
	BREQ _0x28C
; 0000 0C79 {
; 0000 0C7A bit_dc1_cb2 = 0;
	CLT
	BLD  R3,1
; 0000 0C7B bit_dc1_cb1 = 1;
	SET
	BLD  R3,0
; 0000 0C7C bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0C7D sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
	CALL SUBOPT_0xD2
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0x12
; 0000 0C7E puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C7F delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C80 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV nam trong canh bao muc 1  ...
	__POINTW1FN _0x0,1696
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0xDC
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDA
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDD
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDE
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDF
; 0000 0C81 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0C82 delay_ms(1000);
	CALL _delay_ms
; 0000 0C83 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV nam trong canh bao muc ...
; 0000 0C84 // send_sms(sdt_sms, sms);
; 0000 0C85 // delay_ms(1000);
; 0000 0C86 // canh bao 1
; 0000 0C87 }
; 0000 0C88 if ((dc11 * 10 + dc22 > dc_low_21) & (dc11 * 10 + dc22 < dc_high1) & ((bit_dc1_c ...
_0x28C:
	CALL SUBOPT_0xD6
	CALL SUBOPT_0xE0
	LDI  R26,0
	SBRC R3,0
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R3,1
	LDI  R26,1
	LDI  R30,LOW(1)
	CALL __EQB12
	OR   R30,R0
	AND  R30,R1
	BREQ _0x28D
; 0000 0C89 {
; 0000 0C8A led_vang = 0;
	CBI  0x12,6
; 0000 0C8B bit_dc1_cb2 = 0;
	CLT
	BLD  R3,1
; 0000 0C8C bit_dc1_cb1 = 0;
	BLD  R3,0
; 0000 0C8D sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xD2
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0x12
; 0000 0C8E puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0C8F delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0C90 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV da ve muc binh thuong tu  ...
	__POINTW1FN _0x0,1784
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0xE1
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDE
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE2
	CALL SUBOPT_0x2A
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE3
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDF
; 0000 0C91 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0C92 delay_ms(1000);
	CALL _delay_ms
; 0000 0C93 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV da ve muc binh thuong  ...
; 0000 0C94 // send_sms(sdt_sms, sms);
; 0000 0C95 // delay_ms(1000);
; 0000 0C96 // an toan
; 0000 0C97 }
; 0000 0C98 if ((dc11 * 10 + dc22 > dc_high1) & (bit_dc1_cb2 == 0))
_0x28D:
	CALL SUBOPT_0xD6
	CALL SUBOPT_0xE4
	CALL SUBOPT_0xD8
	BREQ _0x290
; 0000 0C99 {
; 0000 0C9A bit_dc1_cb2 = 1;
	SET
	BLD  R3,1
; 0000 0C9B bit_dc1_cb1 = 0;
	CLT
	BLD  R3,0
; 0000 0C9C led_vang = 0;
	CBI  0x12,6
; 0000 0C9D bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0C9E sprintf(enthernet, "%s,voltage_dc1,%d.%d", IP, dc11, dc12);
	CALL SUBOPT_0xD2
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0x12
; 0000 0C9F puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0CA0 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0CA1 sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", tram ...
	__POINTW1FN _0x0,1869
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x35
	CALL SUBOPT_0x37
	CALL SUBOPT_0xE5
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE3
	CALL SUBOPT_0x38
	CALL SUBOPT_0x11
; 0000 0CA2 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0CA3 delay_ms(1000);
	CALL _delay_ms
; 0000 0CA4 // sprintf(sms, "Dien ap DC1 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", t ...
; 0000 0CA5 // send_sms(sdt_sms, sms);
; 0000 0CA6 // delay_ms(1000);
; 0000 0CA7 // cao hon nguong
; 0000 0CA8 }
; 0000 0CA9 //////////////
; 0000 0CAA if ((dc21 * 10 + dc22 < dc_low_11) & (bit_dc2_cb2 == 0))
_0x290:
	CALL SUBOPT_0xE6
	CALL SUBOPT_0xD7
	CALL __LTW12
	CALL SUBOPT_0xE7
	BREQ _0x293
; 0000 0CAB {
; 0000 0CAC bit_coi = 1;
	SET
	BLD  R2,4
; 0000 0CAD bit_dc2_cb2 = 1;
	BLD  R3,3
; 0000 0CAE bit_dc2_cb1 = 0;
	CLT
	BLD  R3,2
; 0000 0CAF led_vang = 0;
	CBI  0x12,6
; 0000 0CB0 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xD3
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x12
; 0000 0CB1 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0CB2 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0CB3 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV thap hon muc %d,%dV", tra ...
	__POINTW1FN _0x0,1929
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0xDC
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDA
	CALL SUBOPT_0x38
	CALL SUBOPT_0x11
; 0000 0CB4 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0CB5 delay_ms(1000);
	CALL _delay_ms
; 0000 0CB6 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV thap hon muc %d,%dV",  ...
; 0000 0CB7 // send_sms(sdt_sms, sms);
; 0000 0CB8 // delay_ms(1000);
; 0000 0CB9 // nho hon nguong
; 0000 0CBA }
; 0000 0CBB if ((dc21 * 10 + dc22 >= dc_low_11) & (dc21 * 10 + dc22 <= dc_low_21) & (bit_dc2 ...
_0x293:
	CALL SUBOPT_0xE6
	MOVW R0,R30
	CALL SUBOPT_0xD7
	CALL SUBOPT_0xDB
	LDI  R26,0
	SBRC R3,2
	LDI  R26,1
	CALL SUBOPT_0xCF
	BREQ _0x296
; 0000 0CBC {
; 0000 0CBD bit_dc2_cb2 = 0;
	CLT
	BLD  R3,3
; 0000 0CBE bit_dc2_cb1 = 1;
	SET
	BLD  R3,2
; 0000 0CBF led_vang = 1;
	SBI  0x12,6
; 0000 0CC0 bit_coi = 1;
	CALL SUBOPT_0xC8
; 0000 0CC1 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
	CALL SUBOPT_0xD3
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x12
; 0000 0CC2 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0CC3 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0CC4 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV nam trong canh bao muc 1  ...
	__POINTW1FN _0x0,1990
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0xDC
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDA
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE1
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDE
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDF
; 0000 0CC5 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0CC6 delay_ms(1000);
	CALL _delay_ms
; 0000 0CC7 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV nam trong canh bao muc ...
; 0000 0CC8 // send_sms(sdt_sms, sms);
; 0000 0CC9 // delay_ms(1000);
; 0000 0CCA // canh bao 1
; 0000 0CCB }
; 0000 0CCC if ((dc21 * 10 + dc22 > dc_low_21) & (dc21 * 10 + dc22 < dc_high1) & ((bit_dc2_c ...
_0x296:
	CALL SUBOPT_0xE6
	CALL SUBOPT_0xE0
	LDI  R26,0
	SBRC R3,2
	LDI  R26,1
	CALL SUBOPT_0x5
	LDI  R26,0
	SBRC R3,3
	LDI  R26,1
	LDI  R30,LOW(1)
	CALL __EQB12
	OR   R30,R0
	AND  R30,R1
	BREQ _0x299
; 0000 0CCD {
; 0000 0CCE led_vang = 0;
	CBI  0x12,6
; 0000 0CCF bit_dc2_cb2 = 0;
	CLT
	BLD  R3,3
; 0000 0CD0 bit_dc2_cb1 = 0;
	BLD  R3,2
; 0000 0CD1 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xD3
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x12
; 0000 0CD2 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0CD3 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0CD4 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV da ve muc binh thuong tu  ...
	__POINTW1FN _0x0,2078
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x37
	CALL SUBOPT_0xE1
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDE
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE5
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE3
	CALL SUBOPT_0x38
	CALL SUBOPT_0xDF
; 0000 0CD5 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xC6
; 0000 0CD6 delay_ms(1000);
	CALL _delay_ms
; 0000 0CD7 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV da ve muc binh thuong  ...
; 0000 0CD8 // send_sms(sdt_sms, sms);
; 0000 0CD9 // delay_ms(1000);
; 0000 0CDA // an toan
; 0000 0CDB }
; 0000 0CDC if ((dc21 * 10 + dc22 > dc_high1) & (bit_dc2_cb2 == 0))
_0x299:
	CALL SUBOPT_0xE6
	CALL SUBOPT_0xE4
	CALL SUBOPT_0xE7
	BREQ _0x29C
; 0000 0CDD {
; 0000 0CDE bit_dc2_cb2 = 1;
	SET
	BLD  R3,3
; 0000 0CDF bit_dc2_cb1 = 0;
	CLT
	BLD  R3,2
; 0000 0CE0 bit_coi = 1;
	SET
	BLD  R2,4
; 0000 0CE1 led_vang = 0;
	CBI  0x12,6
; 0000 0CE2 sprintf(enthernet, "%s,voltage_dc2,%d.%d", IP, dc21, dc22);
	CALL SUBOPT_0x68
	CALL SUBOPT_0xD3
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0x12
; 0000 0CE3 puts1(enthernet);
	CALL SUBOPT_0x6B
; 0000 0CE4 delay_ms(100);
	CALL SUBOPT_0xC5
; 0000 0CE5 sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", tram ...
	__POINTW1FN _0x0,2163
	CALL SUBOPT_0xA1
	CALL SUBOPT_0x3B
	CALL SUBOPT_0x3C
	CALL SUBOPT_0xE5
	CALL SUBOPT_0x38
	CALL SUBOPT_0xE3
	CALL SUBOPT_0x38
	CALL SUBOPT_0x11
; 0000 0CE6 send_sms(sdt_sms, sms);
	CALL SUBOPT_0xB6
	CALL SUBOPT_0xC6
; 0000 0CE7 delay_ms(1000);
	CALL _delay_ms
; 0000 0CE8 // sprintf(sms, "Dien ap DC2 hien tai o tram %s la %d,%dV cao hon muc %d,%dV", t ...
; 0000 0CE9 // send_sms(sdt_sms, sms);
; 0000 0CEA // delay_ms(1000);
; 0000 0CEB // cao hon nguong
; 0000 0CEC }
; 0000 0CED 
; 0000 0CEE //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0CEF //////////////////////////////////////////////////////////////////////////////// ...
; 0000 0CF0 bit_canh_bao = bit_temp || bit_humi || bit_ac1 || bit_ac2 || bit_dc1_cb1 || bit_ ...
_0x29C:
	SBRC R2,1
	RJMP _0x29F
	SBRC R2,2
	RJMP _0x29F
	SBRC R2,5
	RJMP _0x29F
	SBRC R2,6
	RJMP _0x29F
	SBRC R3,0
	RJMP _0x29F
	SBRC R3,1
	RJMP _0x29F
	SBRC R3,2
	RJMP _0x29F
	SBRC R3,3
	RJMP _0x29F
	LDI  R30,0
	RJMP _0x2A0
_0x29F:
	LDI  R30,1
_0x2A0:
	CALL __BSTB1
	BLD  R2,3
; 0000 0CF1 if ((bit_canh_bao == 1) && (bit_coi == 1))
	SBRS R2,3
	RJMP _0x2A2
	SBRC R2,4
	RJMP _0x2A3
_0x2A2:
	RJMP _0x2A1
_0x2A3:
; 0000 0CF2 {
; 0000 0CF3 coi = 1;
	SBI  0x15,4
; 0000 0CF4 // led_vang = 1;
; 0000 0CF5 }
; 0000 0CF6 else
	RJMP _0x2A6
_0x2A1:
; 0000 0CF7 {
; 0000 0CF8 coi = 0;
	CBI  0x15,4
; 0000 0CF9 // led_vang = 0;
; 0000 0CFA }
_0x2A6:
; 0000 0CFB if (bit_temp | bit_humi | bit_ac1 | bit_ac2 | bit_dc1_cb2 | bit_dc2_cb2)
	LDI  R26,0
	SBRC R2,1
	LDI  R26,1
	LDI  R30,0
	SBRC R2,2
	LDI  R30,1
	OR   R30,R26
	MOV  R26,R30
	LDI  R30,0
	SBRC R2,5
	LDI  R30,1
	OR   R30,R26
	MOV  R26,R30
	LDI  R30,0
	SBRC R2,6
	LDI  R30,1
	OR   R30,R26
	MOV  R26,R30
	LDI  R30,0
	SBRC R3,1
	LDI  R30,1
	OR   R30,R26
	MOV  R26,R30
	LDI  R30,0
	SBRC R3,3
	LDI  R30,1
	OR   R30,R26
	BREQ _0x2A9
; 0000 0CFC {
; 0000 0CFD led_do = 1;
	SBI  0x12,5
; 0000 0CFE }
; 0000 0CFF else
	RJMP _0x2AC
_0x2A9:
; 0000 0D00 {
; 0000 0D01 led_do = 0;
	CBI  0x12,5
; 0000 0D02 }
_0x2AC:
; 0000 0D03 ////////////////////////////////////////////////////////////////
; 0000 0D04 if (bit_canh_bao == 1)
	SBRS R2,3
	RJMP _0x2AF
; 0000 0D05 {
; 0000 0D06 led_xanh = 0;
	CBI  0x12,7
; 0000 0D07 }
; 0000 0D08 else
	RJMP _0x2B2
_0x2AF:
; 0000 0D09 {
; 0000 0D0A led_xanh = 1;
	SBI  0x12,7
; 0000 0D0B }
_0x2B2:
; 0000 0D0C }
	RJMP _0x271
; 0000 0D0D }
_0x2B5:
	RJMP _0x2B5
; .FEND

	.DSEG
_0x281:
	.BYTE 0x1D

	.CSEG
_strcmp:
; .FSTART _strcmp
	ST   -Y,R27
	ST   -Y,R26
    ld   r30,y+
    ld   r31,y+
    ld   r26,y+
    ld   r27,y+
strcmp0:
    ld   r22,x+
    ld   r23,z+
    cp   r22,r23
    brne strcmp1
    tst  r22
    brne strcmp0
strcmp3:
    clr  r30
    ret
strcmp1:
    sub  r22,r23
    breq strcmp3
    ldi  r30,1
    brcc strcmp2
    subi r30,2
strcmp2:
    ret
; .FEND
_strcpy:
; .FSTART _strcpy
	ST   -Y,R27
	ST   -Y,R26
    ld   r30,y+
    ld   r31,y+
    ld   r26,y+
    ld   r27,y+
    movw r24,r26
strcpy0:
    ld   r22,z+
    st   x+,r22
    tst  r22
    brne strcpy0
    movw r30,r24
    ret
; .FEND
_strlen:
; .FSTART _strlen
	ST   -Y,R27
	ST   -Y,R26
    ld   r26,y+
    ld   r27,y+
    clr  r30
    clr  r31
strlen0:
    ld   r22,x+
    tst  r22
    breq strlen1
    adiw r30,1
    rjmp strlen0
strlen1:
    ret
; .FEND
_strlenf:
; .FSTART _strlenf
	ST   -Y,R27
	ST   -Y,R26
    clr  r26
    clr  r27
    ld   r30,y+
    ld   r31,y+
strlenf0:
	lpm  r0,z+
    tst  r0
    breq strlenf1
    adiw r26,1
    rjmp strlenf0
strlenf1:
    movw r30,r26
    ret
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_putchar:
; .FSTART _putchar
	ST   -Y,R26
putchar0:
     sbis usr,udre
     rjmp putchar0
     ld   r30,y
     out  udr,r30
	JMP  _0x20C0001
; .FEND
_puts:
; .FSTART _puts
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
_0x2020003:
	CALL SUBOPT_0xE8
	BREQ _0x2020005
	MOV  R26,R17
	RCALL _putchar
	RJMP _0x2020003
_0x2020005:
	LDI  R26,LOW(10)
	RCALL _putchar
	JMP  _0x20C0003
; .FEND
_put_buff_G101:
; .FSTART _put_buff_G101
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,2
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x2020010
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,4
	CALL __GETW1P
	MOVW R16,R30
	SBIW R30,0
	BREQ _0x2020012
	__CPWRN 16,17,2
	BRLO _0x2020013
	MOVW R30,R16
	SBIW R30,1
	MOVW R16,R30
	__PUTW1SNS 2,4
_0x2020012:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,2
	CALL SUBOPT_0x55
	SBIW R30,1
	LDD  R26,Y+4
	STD  Z+0,R26
_0x2020013:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	CALL __GETW1P
	TST  R31
	BRMI _0x2020014
	CALL SUBOPT_0x55
_0x2020014:
	RJMP _0x2020015
_0x2020010:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	ST   X+,R30
	ST   X,R31
_0x2020015:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,5
	RET
; .FEND
__print_G101:
; .FSTART __print_G101
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,6
	CALL __SAVELOCR6
	LDI  R17,0
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   X+,R30
	ST   X,R31
_0x2020016:
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	ADIW R30,1
	STD  Y+18,R30
	STD  Y+18+1,R31
	SBIW R30,1
	LPM  R30,Z
	MOV  R18,R30
	CPI  R30,0
	BRNE PC+2
	RJMP _0x2020018
	MOV  R30,R17
	CPI  R30,0
	BRNE _0x202001C
	CPI  R18,37
	BRNE _0x202001D
	LDI  R17,LOW(1)
	RJMP _0x202001E
_0x202001D:
	CALL SUBOPT_0xE9
_0x202001E:
	RJMP _0x202001B
_0x202001C:
	CPI  R30,LOW(0x1)
	BRNE _0x202001F
	CPI  R18,37
	BRNE _0x2020020
	CALL SUBOPT_0xE9
	RJMP _0x20200CC
_0x2020020:
	LDI  R17,LOW(2)
	LDI  R20,LOW(0)
	LDI  R16,LOW(0)
	CPI  R18,45
	BRNE _0x2020021
	LDI  R16,LOW(1)
	RJMP _0x202001B
_0x2020021:
	CPI  R18,43
	BRNE _0x2020022
	LDI  R20,LOW(43)
	RJMP _0x202001B
_0x2020022:
	CPI  R18,32
	BRNE _0x2020023
	LDI  R20,LOW(32)
	RJMP _0x202001B
_0x2020023:
	RJMP _0x2020024
_0x202001F:
	CPI  R30,LOW(0x2)
	BRNE _0x2020025
_0x2020024:
	LDI  R21,LOW(0)
	LDI  R17,LOW(3)
	CPI  R18,48
	BRNE _0x2020026
	ORI  R16,LOW(128)
	RJMP _0x202001B
_0x2020026:
	RJMP _0x2020027
_0x2020025:
	CPI  R30,LOW(0x3)
	BREQ PC+2
	RJMP _0x202001B
_0x2020027:
	CPI  R18,48
	BRLO _0x202002A
	CPI  R18,58
	BRLO _0x202002B
_0x202002A:
	RJMP _0x2020029
_0x202002B:
	LDI  R26,LOW(10)
	MUL  R21,R26
	MOV  R21,R0
	MOV  R30,R18
	SUBI R30,LOW(48)
	ADD  R21,R30
	RJMP _0x202001B
_0x2020029:
	MOV  R30,R18
	CPI  R30,LOW(0x63)
	BRNE _0x202002F
	CALL SUBOPT_0xEA
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	LDD  R26,Z+4
	ST   -Y,R26
	CALL SUBOPT_0xEB
	RJMP _0x2020030
_0x202002F:
	CPI  R30,LOW(0x73)
	BRNE _0x2020032
	CALL SUBOPT_0xEA
	CALL SUBOPT_0xEC
	CALL _strlen
	MOV  R17,R30
	RJMP _0x2020033
_0x2020032:
	CPI  R30,LOW(0x70)
	BRNE _0x2020035
	CALL SUBOPT_0xEA
	CALL SUBOPT_0xEC
	CALL _strlenf
	MOV  R17,R30
	ORI  R16,LOW(8)
_0x2020033:
	ORI  R16,LOW(2)
	ANDI R16,LOW(127)
	LDI  R19,LOW(0)
	RJMP _0x2020036
_0x2020035:
	CPI  R30,LOW(0x64)
	BREQ _0x2020039
	CPI  R30,LOW(0x69)
	BRNE _0x202003A
_0x2020039:
	ORI  R16,LOW(4)
	RJMP _0x202003B
_0x202003A:
	CPI  R30,LOW(0x75)
	BRNE _0x202003C
_0x202003B:
	LDI  R30,LOW(_tbl10_G101*2)
	LDI  R31,HIGH(_tbl10_G101*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R17,LOW(5)
	RJMP _0x202003D
_0x202003C:
	CPI  R30,LOW(0x58)
	BRNE _0x202003F
	ORI  R16,LOW(8)
	RJMP _0x2020040
_0x202003F:
	CPI  R30,LOW(0x78)
	BREQ PC+2
	RJMP _0x2020071
_0x2020040:
	LDI  R30,LOW(_tbl16_G101*2)
	LDI  R31,HIGH(_tbl16_G101*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R17,LOW(4)
_0x202003D:
	SBRS R16,2
	RJMP _0x2020042
	CALL SUBOPT_0xEA
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	LD   R30,X+
	LD   R31,X+
	STD  Y+10,R30
	STD  Y+10+1,R31
	LDD  R26,Y+11
	TST  R26
	BRPL _0x2020043
	CALL __ANEGW1
	STD  Y+10,R30
	STD  Y+10+1,R31
	LDI  R20,LOW(45)
_0x2020043:
	CPI  R20,0
	BREQ _0x2020044
	SUBI R17,-LOW(1)
	RJMP _0x2020045
_0x2020044:
	ANDI R16,LOW(251)
_0x2020045:
	RJMP _0x2020046
_0x2020042:
	CALL SUBOPT_0xEA
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+10,R30
	STD  Y+10+1,R31
_0x2020046:
_0x2020036:
	SBRC R16,0
	RJMP _0x2020047
_0x2020048:
	CP   R17,R21
	BRSH _0x202004A
	SBRS R16,7
	RJMP _0x202004B
	SBRS R16,2
	RJMP _0x202004C
	ANDI R16,LOW(251)
	MOV  R18,R20
	SUBI R17,LOW(1)
	RJMP _0x202004D
_0x202004C:
	LDI  R18,LOW(48)
_0x202004D:
	RJMP _0x202004E
_0x202004B:
	LDI  R18,LOW(32)
_0x202004E:
	CALL SUBOPT_0xE9
	SUBI R21,LOW(1)
	RJMP _0x2020048
_0x202004A:
_0x2020047:
	MOV  R19,R17
	SBRS R16,1
	RJMP _0x202004F
_0x2020050:
	CPI  R19,0
	BREQ _0x2020052
	SBRS R16,3
	RJMP _0x2020053
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	LPM  R18,Z+
	STD  Y+6,R30
	STD  Y+6+1,R31
	RJMP _0x2020054
_0x2020053:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LD   R18,X+
	STD  Y+6,R26
	STD  Y+6+1,R27
_0x2020054:
	CALL SUBOPT_0xE9
	CPI  R21,0
	BREQ _0x2020055
	SUBI R21,LOW(1)
_0x2020055:
	SUBI R19,LOW(1)
	RJMP _0x2020050
_0x2020052:
	RJMP _0x2020056
_0x202004F:
_0x2020058:
	LDI  R18,LOW(48)
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	CALL __GETW1PF
	STD  Y+8,R30
	STD  Y+8+1,R31
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ADIW R30,2
	STD  Y+6,R30
	STD  Y+6+1,R31
_0x202005A:
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	CP   R26,R30
	CPC  R27,R31
	BRLO _0x202005C
	SUBI R18,-LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+10,R30
	STD  Y+10+1,R31
	RJMP _0x202005A
_0x202005C:
	CPI  R18,58
	BRLO _0x202005D
	SBRS R16,3
	RJMP _0x202005E
	SUBI R18,-LOW(7)
	RJMP _0x202005F
_0x202005E:
	SUBI R18,-LOW(39)
_0x202005F:
_0x202005D:
	SBRC R16,4
	RJMP _0x2020061
	CPI  R18,49
	BRSH _0x2020063
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,1
	BRNE _0x2020062
_0x2020063:
	RJMP _0x20200CD
_0x2020062:
	CP   R21,R19
	BRLO _0x2020067
	SBRS R16,0
	RJMP _0x2020068
_0x2020067:
	RJMP _0x2020066
_0x2020068:
	LDI  R18,LOW(32)
	SBRS R16,7
	RJMP _0x2020069
	LDI  R18,LOW(48)
_0x20200CD:
	ORI  R16,LOW(16)
	SBRS R16,2
	RJMP _0x202006A
	ANDI R16,LOW(251)
	ST   -Y,R20
	CALL SUBOPT_0xEB
	CPI  R21,0
	BREQ _0x202006B
	SUBI R21,LOW(1)
_0x202006B:
_0x202006A:
_0x2020069:
_0x2020061:
	CALL SUBOPT_0xE9
	CPI  R21,0
	BREQ _0x202006C
	SUBI R21,LOW(1)
_0x202006C:
_0x2020066:
	SUBI R19,LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,2
	BRLO _0x2020059
	RJMP _0x2020058
_0x2020059:
_0x2020056:
	SBRS R16,0
	RJMP _0x202006D
_0x202006E:
	CPI  R21,0
	BREQ _0x2020070
	SUBI R21,LOW(1)
	LDI  R30,LOW(32)
	ST   -Y,R30
	CALL SUBOPT_0xEB
	RJMP _0x202006E
_0x2020070:
_0x202006D:
_0x2020071:
_0x2020030:
_0x20200CC:
	LDI  R17,LOW(0)
_0x202001B:
	RJMP _0x2020016
_0x2020018:
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	LD   R30,X+
	LD   R31,X+
	CALL __LOADLOCR6
	ADIW R28,20
	RET
; .FEND
_sprintf:
; .FSTART _sprintf
	PUSH R15
	MOV  R15,R24
	SBIW R28,6
	CALL __SAVELOCR4
	MOVW R26,R28
	ADIW R26,12
	CALL __ADDW2R15
	CALL __GETW1P
	SBIW R30,0
	BRNE _0x2020072
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	RJMP _0x20C0004
_0x2020072:
	MOVW R26,R28
	ADIW R26,6
	CALL __ADDW2R15
	MOVW R16,R26
	MOVW R26,R28
	ADIW R26,12
	CALL __ADDW2R15
	LD   R30,X+
	LD   R31,X+
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R30,LOW(0)
	STD  Y+8,R30
	STD  Y+8+1,R30
	MOVW R26,R28
	ADIW R26,10
	CALL __ADDW2R15
	LD   R30,X+
	LD   R31,X+
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R17
	ST   -Y,R16
	LDI  R30,LOW(_put_buff_G101)
	LDI  R31,HIGH(_put_buff_G101)
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,10
	RCALL __print_G101
	MOVW R18,R30
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDI  R30,LOW(0)
	ST   X,R30
	MOVW R30,R18
_0x20C0004:
	CALL __LOADLOCR4
	ADIW R28,10
	POP  R15
	RET
; .FEND

	.CSEG
_rtc_init:
; .FSTART _rtc_init
	ST   -Y,R26
	LDD  R30,Y+2
	ANDI R30,LOW(0x3)
	STD  Y+2,R30
	LDD  R30,Y+1
	CPI  R30,0
	BREQ _0x2040003
	LDD  R30,Y+2
	ORI  R30,0x10
	STD  Y+2,R30
_0x2040003:
	LD   R30,Y
	CPI  R30,0
	BREQ _0x2040004
	LDD  R30,Y+2
	ORI  R30,0x80
	STD  Y+2,R30
_0x2040004:
	CALL SUBOPT_0xED
	LDI  R26,LOW(7)
	CALL _i2c_write
	LDD  R26,Y+2
	CALL SUBOPT_0xEE
	RJMP _0x20C0002
; .FEND
_rtc_get_time:
; .FSTART _rtc_get_time
	ST   -Y,R27
	ST   -Y,R26
	CALL SUBOPT_0xED
	LDI  R26,LOW(0)
	CALL SUBOPT_0xEE
	CALL SUBOPT_0xEF
	CALL SUBOPT_0xF0
	CALL SUBOPT_0xF1
	CALL SUBOPT_0xF2
	MOV  R26,R30
	CALL _bcd2bin
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	ST   X,R30
	CALL _i2c_stop
	ADIW R28,6
	RET
; .FEND
_rtc_set_time:
; .FSTART _rtc_set_time
	ST   -Y,R26
	CALL SUBOPT_0xED
	LDI  R26,LOW(0)
	CALL SUBOPT_0xF3
	CALL SUBOPT_0xF4
	CALL SUBOPT_0xF5
	CALL SUBOPT_0xEE
	RJMP _0x20C0002
; .FEND
_rtc_get_date:
; .FSTART _rtc_get_date
	ST   -Y,R27
	ST   -Y,R26
	CALL SUBOPT_0xED
	LDI  R26,LOW(3)
	CALL SUBOPT_0xEE
	CALL SUBOPT_0xEF
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	ST   X,R30
	CALL SUBOPT_0xF1
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	ST   X,R30
	CALL SUBOPT_0xF1
	CALL SUBOPT_0xF2
	CALL SUBOPT_0xF0
	CALL _i2c_stop
	ADIW R28,8
	RET
; .FEND
_rtc_set_date:
; .FSTART _rtc_set_date
	ST   -Y,R26
	CALL SUBOPT_0xED
	LDI  R26,LOW(3)
	CALL _i2c_write
	LDD  R26,Y+3
	CALL SUBOPT_0xF5
	CALL SUBOPT_0xF4
	CALL SUBOPT_0xF3
	CALL SUBOPT_0xEE
	ADIW R28,4
	RET
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.DSEG

	.CSEG
__lcd_write_nibble_G103:
; .FSTART __lcd_write_nibble_G103
	ST   -Y,R26
	IN   R30,0x1B
	ANDI R30,LOW(0xF)
	MOV  R26,R30
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	OR   R30,R26
	OUT  0x1B,R30
	__DELAY_USB 13
	SBI  0x1B,2
	__DELAY_USB 13
	CBI  0x1B,2
	__DELAY_USB 13
	RJMP _0x20C0001
; .FEND
__lcd_write_data:
; .FSTART __lcd_write_data
	ST   -Y,R26
	LD   R26,Y
	RCALL __lcd_write_nibble_G103
    ld    r30,y
    swap  r30
    st    y,r30
	LD   R26,Y
	RCALL __lcd_write_nibble_G103
	__DELAY_USB 133
	RJMP _0x20C0001
; .FEND
_lcd_gotoxy:
; .FSTART _lcd_gotoxy
	ST   -Y,R26
	LD   R30,Y
	LDI  R31,0
	SUBI R30,LOW(-__base_y_G103)
	SBCI R31,HIGH(-__base_y_G103)
	LD   R30,Z
	LDD  R26,Y+1
	ADD  R26,R30
	RCALL __lcd_write_data
	LDD  R30,Y+1
	STS  __lcd_x,R30
	LD   R30,Y
	STS  __lcd_y,R30
	ADIW R28,2
	RET
; .FEND
_lcd_clear:
; .FSTART _lcd_clear
	LDI  R26,LOW(2)
	CALL SUBOPT_0xF6
	LDI  R26,LOW(12)
	RCALL __lcd_write_data
	LDI  R26,LOW(1)
	CALL SUBOPT_0xF6
	LDI  R30,LOW(0)
	STS  __lcd_y,R30
	STS  __lcd_x,R30
	RET
; .FEND
_lcd_putchar:
; .FSTART _lcd_putchar
	ST   -Y,R26
	LD   R26,Y
	CPI  R26,LOW(0xA)
	BREQ _0x2060005
	LDS  R30,__lcd_maxx
	LDS  R26,__lcd_x
	CP   R26,R30
	BRLO _0x2060004
_0x2060005:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDS  R26,__lcd_y
	SUBI R26,-LOW(1)
	STS  __lcd_y,R26
	RCALL _lcd_gotoxy
	LD   R26,Y
	CPI  R26,LOW(0xA)
	BRNE _0x2060007
	RJMP _0x20C0001
_0x2060007:
_0x2060004:
	LDS  R30,__lcd_x
	SUBI R30,-LOW(1)
	STS  __lcd_x,R30
	SBI  0x1B,0
	LD   R26,Y
	RCALL __lcd_write_data
	CBI  0x1B,0
	RJMP _0x20C0001
; .FEND
_lcd_puts:
; .FSTART _lcd_puts
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
_0x2060008:
	CALL SUBOPT_0xE8
	BREQ _0x206000A
	MOV  R26,R17
	RCALL _lcd_putchar
	RJMP _0x2060008
_0x206000A:
_0x20C0003:
	LDD  R17,Y+0
_0x20C0002:
	ADIW R28,3
	RET
; .FEND
_lcd_init:
; .FSTART _lcd_init
	ST   -Y,R26
	IN   R30,0x1A
	ORI  R30,LOW(0xF0)
	OUT  0x1A,R30
	SBI  0x1A,2
	SBI  0x1A,0
	SBI  0x1A,1
	CBI  0x1B,2
	CBI  0x1B,0
	CBI  0x1B,1
	LD   R30,Y
	STS  __lcd_maxx,R30
	SUBI R30,-LOW(128)
	__PUTB1MN __base_y_G103,2
	LD   R30,Y
	SUBI R30,-LOW(192)
	__PUTB1MN __base_y_G103,3
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _delay_ms
	CALL SUBOPT_0xF7
	CALL SUBOPT_0xF7
	CALL SUBOPT_0xF7
	LDI  R26,LOW(32)
	RCALL __lcd_write_nibble_G103
	__DELAY_USW 200
	LDI  R26,LOW(40)
	RCALL __lcd_write_data
	LDI  R26,LOW(4)
	RCALL __lcd_write_data
	LDI  R26,LOW(133)
	RCALL __lcd_write_data
	LDI  R26,LOW(6)
	RCALL __lcd_write_data
	RCALL _lcd_clear
_0x20C0001:
	ADIW R28,1
	RET
; .FEND

	.CSEG

	.CSEG
_bcd2bin:
; .FSTART _bcd2bin
	ST   -Y,R26
    ld   r30,y
    swap r30
    andi r30,0xf
    mov  r26,r30
    lsl  r26
    lsl  r26
    add  r30,r26
    lsl  r30
    ld   r26,y+
    andi r26,0xf
    add  r30,r26
    ret
; .FEND
_bin2bcd:
; .FSTART _bin2bcd
	ST   -Y,R26
    ld   r26,y+
    clr  r30
bin2bcd0:
    subi r26,10
    brmi bin2bcd1
    subi r30,-16
    rjmp bin2bcd0
bin2bcd1:
    subi r26,-10
    add  r30,r26
    ret
; .FEND

	.DSEG
_hienthi:
	.BYTE 0x6
_lcd:
	.BYTE 0x14
_enthernet:
	.BYTE 0x64
_AC1:
	.BYTE 0x4
_IP:
	.BYTE 0x14
_sdt_sms:
	.BYTE 0xB
_sdt_call:
	.BYTE 0xB
_sdt_call6:
	.BYTE 0x2
_sdt_call7:
	.BYTE 0x2
_sdt_call8:
	.BYTE 0x2
_sdt_call9:
	.BYTE 0x2
_sdt_sms1:
	.BYTE 0x2
_sdt_sms2:
	.BYTE 0x2
_sdt_sms3:
	.BYTE 0x2
_sdt_sms4:
	.BYTE 0x2
_sdt_sms5:
	.BYTE 0x2
_sdt_sms6:
	.BYTE 0x2
_sdt_sms7:
	.BYTE 0x2
_sdt_sms8:
	.BYTE 0x2
_sdt_sms9:
	.BYTE 0x2
_tram:
	.BYTE 0xF
_sim:
	.BYTE 0x64
_sms:
	.BYTE 0x64
_i:
	.BYTE 0x2
_hang:
	.BYTE 0x2
_cot:
	.BYTE 0x2
_DC1:
	.BYTE 0x2
_DC2:
	.BYTE 0x2
_dc11:
	.BYTE 0x2
_dc12:
	.BYTE 0x2
_dht:
	.BYTE 0x2
_dc21:
	.BYTE 0x2
_dc22:
	.BYTE 0x2
_dc_low_1:
	.BYTE 0x2
_dc_low_2:
	.BYTE 0x2
_dc_high:
	.BYTE 0x2
_dc_low_11:
	.BYTE 0x2
_dc_low_21:
	.BYTE 0x2
_dc_high1:
	.BYTE 0x2
_hour:
	.BYTE 0x1
_min:
	.BYTE 0x1
_sec:
	.BYTE 0x1
_day:
	.BYTE 0x1
_month:
	.BYTE 0x1
_year:
	.BYTE 0x1
_week_day:
	.BYTE 0x1
_h11:
	.BYTE 0x2
_h12:
	.BYTE 0x2
_hour1:
	.BYTE 0x2
_m11:
	.BYTE 0x2
_m12:
	.BYTE 0x2
_min1:
	.BYTE 0x2
_d1:
	.BYTE 0x2
_d2:
	.BYTE 0x2
_day1:
	.BYTE 0x2
_m1:
	.BYTE 0x2
_m2:
	.BYTE 0x2
_month1:
	.BYTE 0x2
_y1:
	.BYTE 0x2
_y2:
	.BYTE 0x2
_year1:
	.BYTE 0x2
_doam1:
	.BYTE 0x2
_doam2:
	.BYTE 0x2
_nhietdo1:
	.BYTE 0x2
_nhietdo2:
	.BYTE 0x2
_doam11:
	.BYTE 0x2
_doam22:
	.BYTE 0x2
_nhietdo11:
	.BYTE 0x2
_nhietdo22:
	.BYTE 0x2
_dht_nhiet_do:
	.BYTE 0x2
_dht_do_am:
	.BYTE 0x2
__base_y_G103:
	.BYTE 0x4
__lcd_x:
	.BYTE 0x1
__lcd_y:
	.BYTE 0x1
__lcd_maxx:
	.BYTE 0x1

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x0:
	__DELAY_USB 133
	LDI  R30,LOW(0)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1:
	LDI  R26,LOW(25)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x2:
	LDI  R30,LOW(0)
	STS  _dht,R30
	STS  _dht+1,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x3:
	LDS  R26,_dht
	LDS  R27,_dht+1
	SBIW R26,41
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x4:
	MOVW R30,R18
	MOVW R26,R28
	ADIW R26,6
	LSL  R30
	ROL  R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x5:
	LDI  R30,LOW(1)
	CALL __EQB12
	MOV  R0,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x6:
	LDI  R30,LOW(1)
	CALL __EQB12
	AND  R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x7:
	LDS  R30,_i
	LDS  R31,_i+1
	LD   R26,Y
	LDD  R27,Y+1
	ADD  R26,R30
	ADC  R27,R31
	LD   R30,X
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x8:
	LDI  R26,LOW(_i)
	LDI  R27,HIGH(_i)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x9:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xA:
	LDI  R26,LOW(50)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:87 WORDS
SUBOPT_0xB:
	CALL _puts
	LDI  R26,LOW(13)
	CALL _putchar
	LDI  R26,LOW(10)
	CALL _putchar
	LDI  R26,LOW(200)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
SUBOPT_0xC:
	CALL _delay_ms
	JMP  _lcd_clear

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xD:
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
	LDI  R30,LOW(_sim)
	LDI  R31,HIGH(_sim)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xE:
	__GETD1N 0x22
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 67 TIMES, CODE SIZE REDUCTION:129 WORDS
SUBOPT_0xF:
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:47 WORDS
SUBOPT_0x10:
	__GETD1N 0xD
	CALL __PUTPARD1
	__GETD1N 0xA
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x11:
	LDI  R24,20
	CALL _sprintf
	ADIW R28,24
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
SUBOPT_0x12:
	LDI  R24,12
	CALL _sprintf
	ADIW R28,16
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 38 TIMES, CODE SIZE REDUCTION:71 WORDS
SUBOPT_0x13:
	LDI  R26,LOW(200)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x14:
	LDS  R26,_i
	LDS  R27,_i+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0x15:
	LDS  R30,_hang
	LDS  R31,_hang+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x16:
	RCALL SUBOPT_0x14
	CP   R30,R26
	CPC  R31,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
SUBOPT_0x17:
	LDI  R30,LOW(19)
	ST   -Y,R30
	LDS  R26,_i
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x18:
	LDI  R26,LOW(1)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
SUBOPT_0x19:
	LDI  R30,LOW(_hienthi)
	LDI  R31,HIGH(_hienthi)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 48 TIMES, CODE SIZE REDUCTION:91 WORDS
SUBOPT_0x1A:
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1B:
	STS  _doam11,R30
	STS  _doam11+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1C:
	STS  _doam22,R30
	STS  _doam22+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1D:
	STS  _nhietdo11,R30
	STS  _nhietdo11+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1E:
	STS  _nhietdo22,R30
	STS  _nhietdo22+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x1F:
	LDS  R26,_hour
	LDI  R27,0
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x20:
	LDS  R26,_hour
	CLR  R27
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x21:
	STS  _h12,R30
	STS  _h12+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x22:
	LDS  R26,_min
	LDI  R27,0
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x23:
	LDS  R26,_min
	CLR  R27
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x24:
	LDS  R26,_day
	LDI  R27,0
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x25:
	LDS  R26,_day
	CLR  R27
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x26:
	STS  _d2,R30
	STS  _d2+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x27:
	LDS  R26,_month
	LDI  R27,0
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x28:
	LDS  R26,_month
	CLR  R27
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x29:
	STS  _m2,R30
	STS  _m2+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 58 TIMES, CODE SIZE REDUCTION:111 WORDS
SUBOPT_0x2A:
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 72 TIMES, CODE SIZE REDUCTION:139 WORDS
SUBOPT_0x2B:
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x2C:
	LDS  R26,_doam11
	LDS  R27,_doam11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x2D:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_doam11
	JMP  _EEPROM_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x2E:
	LDS  R26,_doam22
	LDS  R27,_doam22+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x2F:
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_doam22
	JMP  _EEPROM_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x30:
	LDS  R26,_nhietdo11
	LDS  R27,_nhietdo11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x31:
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_nhietdo11
	JMP  _EEPROM_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x32:
	LDS  R26,_nhietdo22
	LDS  R27,_nhietdo22+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x33:
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_nhietdo22
	JMP  _EEPROM_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
SUBOPT_0x34:
	LDI  R30,LOW(_lcd)
	LDI  R31,HIGH(_lcd)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:51 WORDS
SUBOPT_0x35:
	LDS  R30,_dc11
	LDS  R31,_dc11+1
	CALL __CWD1
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x36:
	__GETD1N 0x2C
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:57 WORDS
SUBOPT_0x37:
	LDS  R30,_dc12
	LDS  R31,_dc12+1
	CALL __CWD1
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 154 TIMES, CODE SIZE REDUCTION:303 WORDS
SUBOPT_0x38:
	CALL __CWD1
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x39:
	LDI  R24,36
	CALL _sprintf
	ADIW R28,40
	LDI  R26,LOW(_lcd)
	LDI  R27,HIGH(_lcd)
	JMP  _lcd_puts

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x3A:
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _lcd_gotoxy
	RJMP SUBOPT_0x34

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
SUBOPT_0x3B:
	LDS  R30,_dc21
	LDS  R31,_dc21+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
SUBOPT_0x3C:
	LDS  R30,_dc22
	LDS  R31,_dc22+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
SUBOPT_0x3D:
	LDI  R26,LOW(_lcd)
	LDI  R27,HIGH(_lcd)
	JMP  _lcd_puts

;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
SUBOPT_0x3E:
	ST   -Y,R30
	LDI  R26,LOW(2)
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x3F:
	LDI  R30,LOW(_AC1)
	LDI  R31,HIGH(_AC1)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
SUBOPT_0x40:
	LDS  R26,_dht_do_am
	LDS  R27,_dht_do_am+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x41:
	RCALL SUBOPT_0x40
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x42:
	LDI  R24,16
	CALL _sprintf
	ADIW R28,20
	RJMP SUBOPT_0x3D

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x43:
	ST   -Y,R30
	LDI  R26,LOW(3)
	CALL _lcd_gotoxy
	RJMP SUBOPT_0x34

;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
SUBOPT_0x44:
	LDS  R26,_dht_nhiet_do
	LDS  R27,_dht_nhiet_do+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x45:
	RCALL SUBOPT_0x44
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x46:
	__GETD1N 0xDF
	CALL __PUTPARD1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x47:
	LDI  R26,LOW(31)
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R26,LOW(10)
	MUL  R30,R26
	MOVW R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x48:
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_low_1,R30
	STS  _dc_low_1+1,R31
	LDI  R26,LOW(33)
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R26,LOW(10)
	MUL  R30,R26
	MOVW R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x49:
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_low_2,R30
	STS  _dc_low_2+1,R31
	LDI  R26,LOW(35)
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R26,LOW(10)
	MUL  R30,R26
	MOVW R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:28 WORDS
SUBOPT_0x4A:
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_high,R30
	STS  _dc_high+1,R31
	LDS  R26,_dc_low_1
	LDS  R27,_dc_low_1+1
	LDI  R30,LOW(999)
	LDI  R31,HIGH(999)
	CALL __GTW12
	MOV  R0,R30
	LDS  R26,_dc_low_2
	LDS  R27,_dc_low_2+1
	LDI  R30,LOW(999)
	LDI  R31,HIGH(999)
	CALL __GTW12
	OR   R0,R30
	LDS  R26,_dc_high
	LDS  R27,_dc_high+1
	LDI  R30,LOW(999)
	LDI  R31,HIGH(999)
	CALL __GTW12
	OR   R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:23 WORDS
SUBOPT_0x4B:
	LDI  R30,LOW(470)
	LDI  R31,HIGH(470)
	STS  _dc_low_1,R30
	STS  _dc_low_1+1,R31
	LDI  R30,LOW(480)
	LDI  R31,HIGH(480)
	STS  _dc_low_2,R30
	STS  _dc_low_2+1,R31
	LDI  R30,LOW(585)
	LDI  R31,HIGH(585)
	STS  _dc_high,R30
	STS  _dc_high+1,R31
	LDI  R30,LOW(31)
	LDI  R31,HIGH(31)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_1
	LDS  R27,_dc_low_1+1
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x4C:
	MOV  R26,R30
	CALL _EEPROM_write
	LDI  R30,LOW(32)
	LDI  R31,HIGH(32)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_1
	LDS  R27,_dc_low_1+1
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x4D:
	MOV  R26,R30
	CALL _EEPROM_write
	LDI  R30,LOW(33)
	LDI  R31,HIGH(33)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_2
	LDS  R27,_dc_low_2+1
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x4E:
	MOV  R26,R30
	CALL _EEPROM_write
	LDI  R30,LOW(34)
	LDI  R31,HIGH(34)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_2
	LDS  R27,_dc_low_2+1
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x4F:
	MOV  R26,R30
	CALL _EEPROM_write
	LDI  R30,LOW(35)
	LDI  R31,HIGH(35)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_high
	LDS  R27,_dc_high+1
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x50:
	MOV  R26,R30
	CALL _EEPROM_write
	LDI  R30,LOW(36)
	LDI  R31,HIGH(36)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_high
	LDS  R27,_dc_high+1
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x51:
	LDS  R26,_y1
	LDS  R27,_y1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x52:
	LDI  R30,LOW(10)
	CALL __MULB1W2U
	LDS  R26,_y2
	LDS  R27,_y2+1
	ADD  R30,R26
	ADC  R31,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
SUBOPT_0x53:
	LDS  R30,_cot
	LDS  R31,_cot+1
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x54:
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _lcd_gotoxy
	RJMP SUBOPT_0x13

;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
SUBOPT_0x55:
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x56:
	LDS  R26,_h11
	LDS  R27,_h11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x57:
	LD   R30,X+
	LD   R31,X+
	SBIW R30,1
	ST   -X,R31
	ST   -X,R30
	RJMP SUBOPT_0x56

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x58:
	LDS  R26,_h12
	LDS  R27,_h12+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x59:
	LDS  R26,_m11
	LDS  R27,_m11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:66 WORDS
SUBOPT_0x5A:
	LD   R30,X+
	LD   R31,X+
	SBIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x5B:
	LDS  R26,_m12
	LDS  R27,_m12+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:69 WORDS
SUBOPT_0x5C:
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _cot,R30
	STS  _cot+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x5D:
	CALL _lcd_clear
	LDI  R30,LOW(1)
	ST   -Y,R30
	LDI  R26,LOW(1)
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
SUBOPT_0x5E:
	CALL _lcd_clear
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDI  R26,LOW(1)
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x5F:
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RJMP SUBOPT_0xC

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x60:
	LDS  R26,_hang
	LDS  R27,_hang+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
SUBOPT_0x61:
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _lcd_gotoxy
	RJMP SUBOPT_0x13

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x62:
	LDS  R26,_d1
	LDS  R27,_d1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x63:
	LDS  R26,_d2
	LDS  R27,_d2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x64:
	LDS  R26,_m1
	LDS  R27,_m1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x65:
	LDS  R26,_m2
	LDS  R27,_m2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x66:
	LDS  R30,_doam11
	LDS  R31,_doam11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x67:
	LDS  R30,_doam22
	LDS  R31,_doam22+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
SUBOPT_0x68:
	LDI  R30,LOW(_enthernet)
	LDI  R31,HIGH(_enthernet)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
SUBOPT_0x69:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_IP)
	LDI  R31,HIGH(_IP)
	RJMP SUBOPT_0xF

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x6A:
	__GETD1N 0x0
	CALL __PUTPARD1
	RJMP SUBOPT_0x10

;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
SUBOPT_0x6B:
	LDI  R26,LOW(_enthernet)
	LDI  R27,HIGH(_enthernet)
	CALL _puts1
	LDI  R26,LOW(100)
	LDI  R27,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x6C:
	CALL _delay_ms
	RJMP SUBOPT_0x68

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x6D:
	ST   -Y,R30
	LDI  R26,LOW(1)
	JMP  _lcd_gotoxy

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x6E:
	CALL _lcd_puts
	RJMP SUBOPT_0x5F

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x6F:
	CALL _lcd_clear
	RJMP SUBOPT_0x34

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x70:
	__POINTW1FN _0x0,490
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _sprintf
	ADIW R28,4
	RJMP SUBOPT_0x3D

;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:57 WORDS
SUBOPT_0x71:
	ST   -Y,R30
	LDI  R26,LOW(3)
	CALL _lcd_gotoxy
	RJMP SUBOPT_0x13

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x72:
	LDS  R30,_nhietdo11
	LDS  R31,_nhietdo11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x73:
	LDS  R30,_nhietdo22
	LDS  R31,_nhietdo22+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:28 WORDS
SUBOPT_0x74:
	LDI  R26,LOW(11)
	LDI  R27,0
	CALL _EEPROM_read
	MOV  R4,R30
	CLR  R5
	LDI  R26,LOW(12)
	LDI  R27,0
	CALL _EEPROM_read
	MOV  R6,R30
	CLR  R7
	LDI  R26,LOW(13)
	LDI  R27,0
	CALL _EEPROM_read
	MOV  R8,R30
	CLR  R9
	LDI  R26,LOW(14)
	LDI  R27,0
	CALL _EEPROM_read
	MOV  R10,R30
	CLR  R11
	LDI  R26,LOW(15)
	LDI  R27,0
	CALL _EEPROM_read
	MOV  R12,R30
	CLR  R13
	LDI  R26,LOW(16)
	RJMP SUBOPT_0x1A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x75:
	STS  _sdt_call6,R30
	STS  _sdt_call6+1,R31
	LDI  R26,LOW(17)
	RJMP SUBOPT_0x1A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x76:
	STS  _sdt_call7,R30
	STS  _sdt_call7+1,R31
	LDI  R26,LOW(18)
	RJMP SUBOPT_0x1A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x77:
	STS  _sdt_call8,R30
	STS  _sdt_call8+1,R31
	LDI  R26,LOW(19)
	RJMP SUBOPT_0x1A

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x78:
	STS  _sdt_call9,R30
	STS  _sdt_call9+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x79:
	STS  _sdt_sms1,R30
	STS  _sdt_sms1+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7A:
	STS  _sdt_sms2,R30
	STS  _sdt_sms2+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7B:
	STS  _sdt_sms3,R30
	STS  _sdt_sms3+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7C:
	STS  _sdt_sms4,R30
	STS  _sdt_sms4+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7D:
	STS  _sdt_sms5,R30
	STS  _sdt_sms5+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7E:
	STS  _sdt_sms6,R30
	STS  _sdt_sms6+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x7F:
	STS  _sdt_sms7,R30
	STS  _sdt_sms7+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x80:
	STS  _sdt_sms8,R30
	STS  _sdt_sms8+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x81:
	STS  _sdt_sms9,R30
	STS  _sdt_sms9+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
SUBOPT_0x82:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _sprintf
	ADIW R28,4
	RJMP SUBOPT_0x3D

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x83:
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_1
	LDS  R27,_dc_low_1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x84:
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x85:
	LDS  R26,_dc_low_1
	LDS  R27,_dc_low_1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x86:
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __MODW21
	MOVW R26,R30
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x87:
	RCALL SUBOPT_0x85
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x88:
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_low_2
	LDS  R27,_dc_low_2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x89:
	LDS  R26,_dc_low_2
	LDS  R27,_dc_low_2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8A:
	RCALL SUBOPT_0x89
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x8B:
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_dc_high
	LDS  R27,_dc_high+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
SUBOPT_0x8C:
	LDS  R26,_dc_high
	LDS  R27,_dc_high+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8D:
	RCALL SUBOPT_0x8C
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x8E:
	LDS  R30,_dc_low_1
	LDS  R31,_dc_low_1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8F:
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	STS  _dc_low_1,R30
	STS  _dc_low_1+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x90:
	STS  _dc_low_1,R30
	STS  _dc_low_1+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x91:
	RCALL SUBOPT_0x8E
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	RJMP SUBOPT_0x90

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x92:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	CALL __NEW12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x93:
	LDI  R26,LOW(33)
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R26,LOW(10)
	MUL  R30,R26
	MOVW R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x94:
	MOV  R26,R30
	CALL _EEPROM_write
	RJMP SUBOPT_0x5C

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x95:
	LDI  R26,LOW(_enthernet)
	LDI  R27,HIGH(_enthernet)
	CALL _puts1
	RJMP SUBOPT_0x34

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x96:
	__POINTW1FN _0x0,667
	RJMP SUBOPT_0x82

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x97:
	LDI  R24,8
	CALL _sprintf
	ADIW R28,12
	LDI  R26,LOW(_lcd)
	LDI  R27,HIGH(_lcd)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x98:
	LDS  R30,_dc_low_2
	LDS  R31,_dc_low_2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x99:
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	STS  _dc_low_2,R30
	STS  _dc_low_2+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x9A:
	STS  _dc_low_2,R30
	STS  _dc_low_2+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x9B:
	RCALL SUBOPT_0x98
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	RJMP SUBOPT_0x9A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x9C:
	LDI  R26,LOW(35)
	LDI  R27,0
	CALL _EEPROM_read
	LDI  R26,LOW(10)
	MUL  R30,R26
	MOVW R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x9D:
	LDS  R30,_dc_high
	LDS  R31,_dc_high+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x9E:
	SUBI R30,LOW(-100)
	SBCI R31,HIGH(-100)
	STS  _dc_high,R30
	STS  _dc_high+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x9F:
	STS  _dc_high,R30
	STS  _dc_high+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA0:
	RCALL SUBOPT_0x9D
	SUBI R30,LOW(100)
	SBCI R31,HIGH(100)
	RJMP SUBOPT_0x9F

;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:69 WORDS
SUBOPT_0xA1:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(_tram)
	LDI  R31,HIGH(_tram)
	RJMP SUBOPT_0xF

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA2:
	LDI  R24,4
	CALL _sprintf
	ADIW R28,8
	RJMP SUBOPT_0x3D

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xA3:
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_sdt_sms1
	LDS  R31,_sdt_sms1+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA4:
	LDS  R30,_sdt_sms2
	LDS  R31,_sdt_sms2+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA5:
	LDS  R30,_sdt_sms3
	LDS  R31,_sdt_sms3+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA6:
	LDS  R30,_sdt_sms4
	LDS  R31,_sdt_sms4+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA7:
	LDS  R30,_sdt_sms5
	LDS  R31,_sdt_sms5+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA8:
	LDS  R30,_sdt_sms6
	LDS  R31,_sdt_sms6+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xA9:
	LDS  R30,_sdt_sms7
	LDS  R31,_sdt_sms7+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xAA:
	LDS  R30,_sdt_sms8
	LDS  R31,_sdt_sms8+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xAB:
	LDS  R30,_sdt_sms9
	LDS  R31,_sdt_sms9+1
	RJMP SUBOPT_0x38

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xAC:
	LDS  R26,_sdt_sms1
	LDS  R27,_sdt_sms1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xAD:
	LDS  R26,_sdt_sms2
	LDS  R27,_sdt_sms2+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xAE:
	LDS  R26,_sdt_sms3
	LDS  R27,_sdt_sms3+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xAF:
	LDS  R26,_sdt_sms4
	LDS  R27,_sdt_sms4+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB0:
	LDS  R26,_sdt_sms5
	LDS  R27,_sdt_sms5+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB1:
	LDS  R26,_sdt_sms6
	LDS  R27,_sdt_sms6+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB2:
	LDS  R26,_sdt_sms7
	LDS  R27,_sdt_sms7+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB3:
	LDS  R26,_sdt_sms8
	LDS  R27,_sdt_sms8+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB4:
	LDS  R26,_sdt_sms9
	LDS  R27,_sdt_sms9+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB5:
	CALL _lcd_clear
	RJMP SUBOPT_0x5C

;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
SUBOPT_0xB6:
	LDI  R30,LOW(_sdt_sms)
	LDI  R31,HIGH(_sdt_sms)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xB7:
	LDI  R24,36
	CALL _sprintf
	ADIW R28,40
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:67 WORDS
SUBOPT_0xB8:
	LDI  R30,LOW(21)
	LDI  R31,HIGH(21)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms1
	CALL _EEPROM_write
	LDI  R30,LOW(22)
	LDI  R31,HIGH(22)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms2
	CALL _EEPROM_write
	LDI  R30,LOW(23)
	LDI  R31,HIGH(23)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms3
	CALL _EEPROM_write
	LDI  R30,LOW(24)
	LDI  R31,HIGH(24)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms4
	CALL _EEPROM_write
	LDI  R30,LOW(25)
	LDI  R31,HIGH(25)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms5
	CALL _EEPROM_write
	LDI  R30,LOW(26)
	LDI  R31,HIGH(26)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms6
	CALL _EEPROM_write
	LDI  R30,LOW(27)
	LDI  R31,HIGH(27)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms7
	CALL _EEPROM_write
	LDI  R30,LOW(28)
	LDI  R31,HIGH(28)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms8
	CALL _EEPROM_write
	LDI  R30,LOW(29)
	LDI  R31,HIGH(29)
	ST   -Y,R31
	ST   -Y,R30
	LDS  R26,_sdt_sms9
	JMP  _EEPROM_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xB9:
	CALL _strcmp
	LDI  R26,LOW(0)
	CALL __EQB12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
SUBOPT_0xBA:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	CALL __GEW12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:42 WORDS
SUBOPT_0xBB:
	LDI  R30,LOW(9)
	LDI  R31,HIGH(9)
	CALL __LEW12
	AND  R0,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xBC:
	CALL _read_adc
	LDI  R26,LOW(5)
	LDI  R27,HIGH(5)
	CALL __MULW12U
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12U
	LDI  R26,LOW(0)
	LDI  R27,HIGH(0)
	EOR  R30,R26
	EOR  R31,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xBD:
	LDS  R26,_DC1
	LDS  R27,_DC1+1
	LDI  R30,LOW(610)
	LDI  R31,HIGH(610)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0xBE:
	CALL __MODW21U
	MOVW R26,R30
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21U
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xBF:
	LDS  R26,_DC2
	LDS  R27,_DC2+1
	LDI  R30,LOW(615)
	LDI  R31,HIGH(615)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xC0:
	LDS  R30,_doam1
	LDS  R31,_doam1+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RJMP SUBOPT_0x40

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xC1:
	LDS  R30,_doam2
	LDS  R31,_doam2+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RJMP SUBOPT_0x40

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xC2:
	CALL __LEW12
	AND  R30,R22
	MOV  R0,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xC3:
	__POINTW1FN _0x0,947
	RJMP SUBOPT_0x69

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xC4:
	RCALL SUBOPT_0x40
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:65 WORDS
SUBOPT_0xC5:
	CALL _delay_ms
	LDI  R30,LOW(_sms)
	LDI  R31,HIGH(_sms)
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:65 WORDS
SUBOPT_0xC6:
	LDI  R26,LOW(_sms)
	LDI  R27,HIGH(_sms)
	CALL _send_sms
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xC7:
	MOV  R0,R30
	LDI  R26,0
	SBRC R2,2
	LDI  R26,1
	LDI  R30,LOW(0)
	CALL __EQB12
	AND  R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xC8:
	SET
	BLD  R2,4
	RJMP SUBOPT_0x68

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xC9:
	LDS  R30,_nhietdo1
	LDS  R31,_nhietdo1+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RJMP SUBOPT_0x44

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xCA:
	LDS  R30,_nhietdo2
	LDS  R31,_nhietdo2+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RJMP SUBOPT_0x44

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xCB:
	__POINTW1FN _0x0,1120
	RJMP SUBOPT_0x69

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xCC:
	RCALL SUBOPT_0x44
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xCD:
	MOV  R0,R30
	LDI  R26,0
	SBRC R2,1
	LDI  R26,1
	LDI  R30,LOW(0)
	CALL __EQB12
	AND  R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xCE:
	LDI  R30,LOW(0)
	CALL __EQB12
	MOV  R0,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0xCF:
	LDI  R30,LOW(0)
	CALL __EQB12
	AND  R30,R0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
SUBOPT_0xD0:
	LDI  R24,4
	CALL _sprintf
	ADIW R28,8
	RJMP SUBOPT_0x6B

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xD1:
	LDI  R24,4
	CALL _sprintf
	ADIW R28,8
	RJMP SUBOPT_0xB6

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xD2:
	__POINTW1FN _0x0,1581
	RJMP SUBOPT_0x69

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xD3:
	__POINTW1FN _0x0,1602
	RJMP SUBOPT_0x69

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xD4:
	LDI  R30,LOW(_IP)
	LDI  R31,HIGH(_IP)
	RJMP SUBOPT_0xF

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xD5:
	ADD  R30,R26
	ADC  R31,R27
	STS  _dc_low_21,R30
	STS  _dc_low_21+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0xD6:
	LDS  R30,_dc11
	LDS  R31,_dc11+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0xD7:
	LDS  R26,_dc22
	LDS  R27,_dc22+1
	ADD  R26,R30
	ADC  R27,R31
	LDS  R30,_dc_low_11
	LDS  R31,_dc_low_11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xD8:
	MOV  R0,R30
	LDI  R26,0
	SBRC R3,1
	LDI  R26,1
	RJMP SUBOPT_0xCF

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0xD9:
	LDS  R26,_dc_low_11
	LDS  R27,_dc_low_11+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xDA:
	RCALL SUBOPT_0xD9
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0xDB:
	CALL __GEW12
	MOV  R22,R30
	MOVW R30,R0
	LDS  R26,_dc22
	LDS  R27,_dc22+1
	ADD  R26,R30
	ADC  R27,R31
	LDS  R30,_dc_low_21
	LDS  R31,_dc_low_21+1
	RJMP SUBOPT_0xC2

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xDC:
	RCALL SUBOPT_0xD9
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0xDD:
	LDS  R26,_dc_low_21
	LDS  R27,_dc_low_21+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xDE:
	RCALL SUBOPT_0xDD
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xDF:
	LDI  R24,28
	CALL _sprintf
	ADIW R28,32
	RJMP SUBOPT_0xB6

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
SUBOPT_0xE0:
	MOVW R0,R30
	LDS  R26,_dc22
	LDS  R27,_dc22+1
	ADD  R26,R30
	ADC  R27,R31
	LDS  R30,_dc_low_21
	LDS  R31,_dc_low_21+1
	CALL __GTW12
	MOV  R22,R30
	MOVW R30,R0
	LDS  R26,_dc22
	LDS  R27,_dc22+1
	ADD  R26,R30
	ADC  R27,R31
	LDS  R30,_dc_high1
	LDS  R31,_dc_high1+1
	CALL __LTW12
	AND  R30,R22
	MOV  R1,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xE1:
	RCALL SUBOPT_0xDD
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0xE2:
	LDS  R26,_dc_high1
	LDS  R27,_dc_high1+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xE3:
	RCALL SUBOPT_0xE2
	RJMP SUBOPT_0x2B

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0xE4:
	LDS  R26,_dc22
	LDS  R27,_dc22+1
	ADD  R26,R30
	ADC  R27,R31
	LDS  R30,_dc_high1
	LDS  R31,_dc_high1+1
	CALL __GTW12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xE5:
	RCALL SUBOPT_0xE2
	RJMP SUBOPT_0x2A

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0xE6:
	LDS  R30,_dc21
	LDS  R31,_dc21+1
	LDI  R26,LOW(10)
	LDI  R27,HIGH(10)
	CALL __MULW12
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xE7:
	MOV  R0,R30
	LDI  R26,0
	SBRC R3,3
	LDI  R26,1
	RJMP SUBOPT_0xCF

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0xE8:
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	LD   R30,X+
	STD  Y+1,R26
	STD  Y+1+1,R27
	MOV  R17,R30
	CPI  R30,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0xE9:
	ST   -Y,R18
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xEA:
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	SBIW R30,4
	STD  Y+16,R30
	STD  Y+16+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xEB:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0xEC:
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	LD   R30,X+
	LD   R31,X+
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xED:
	CALL _i2c_start
	LDI  R26,LOW(208)
	JMP  _i2c_write

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xEE:
	CALL _i2c_write
	JMP  _i2c_stop

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xEF:
	CALL _i2c_start
	LDI  R26,LOW(209)
	CALL _i2c_write
	LDI  R26,LOW(1)
	JMP  _i2c_read

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF0:
	MOV  R26,R30
	CALL _bcd2bin
	LD   R26,Y
	LDD  R27,Y+1
	ST   X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xF1:
	LDI  R26,LOW(1)
	CALL _i2c_read
	MOV  R26,R30
	JMP  _bcd2bin

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF2:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ST   X,R30
	LDI  R26,LOW(0)
	JMP  _i2c_read

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF3:
	CALL _i2c_write
	LD   R26,Y
	CALL _bin2bcd
	MOV  R26,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF4:
	CALL _i2c_write
	LDD  R26,Y+1
	CALL _bin2bcd
	MOV  R26,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF5:
	CALL _i2c_write
	LDD  R26,Y+2
	CALL _bin2bcd
	MOV  R26,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xF6:
	CALL __lcd_write_data
	LDI  R26,LOW(3)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0xF7:
	LDI  R26,LOW(48)
	CALL __lcd_write_nibble_G103
	__DELAY_USW 200
	RET

;RUNTIME LIBRARY

	.CSEG
__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

__INITLOCB:
__INITLOCW:
	ADD  R26,R28
	ADC  R27,R29
__INITLOC0:
	LPM  R0,Z+
	ST   X+,R0
	DEC  R24
	BRNE __INITLOC0
	RET

__ADDW2R15:
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__CWD1:
	MOV  R22,R31
	ADD  R22,R22
	SBC  R22,R22
	MOV  R23,R22
	RET

__EQB12:
	CP   R30,R26
	LDI  R30,1
	BREQ __EQB12T
	CLR  R30
__EQB12T:
	RET

__EQW12:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BREQ __EQW12T
	CLR  R30
__EQW12T:
	RET

__NEW12:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BRNE __NEW12T
	CLR  R30
__NEW12T:
	RET

__LEW12:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BRGE __LEW12T
	CLR  R30
__LEW12T:
	RET

__GEW12:
	CP   R26,R30
	CPC  R27,R31
	LDI  R30,1
	BRGE __GEW12T
	CLR  R30
__GEW12T:
	RET

__LTW12:
	CP   R26,R30
	CPC  R27,R31
	LDI  R30,1
	BRLT __LTW12T
	CLR  R30
__LTW12T:
	RET

__GTW12:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BRLT __GTW12T
	CLR  R30
__GTW12T:
	RET

__GTW12U:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BRLO __GTW12UT
	CLR  R30
__GTW12UT:
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULB1W2U:
	MOV  R22,R30
	MUL  R22,R26
	MOVW R30,R0
	MUL  R22,R27
	ADD  R31,R0
	RET

__MULW12:
	RCALL __CHKSIGNW
	RCALL __MULW12U
	BRTC __MULW121
	RCALL __ANEGW1
__MULW121:
	RET

__DIVW21U:
	CLR  R0
	CLR  R1
	LDI  R25,16
__DIVW21U1:
	LSL  R26
	ROL  R27
	ROL  R0
	ROL  R1
	SUB  R0,R30
	SBC  R1,R31
	BRCC __DIVW21U2
	ADD  R0,R30
	ADC  R1,R31
	RJMP __DIVW21U3
__DIVW21U2:
	SBR  R26,1
__DIVW21U3:
	DEC  R25
	BRNE __DIVW21U1
	MOVW R30,R26
	MOVW R26,R0
	RET

__DIVW21:
	RCALL __CHKSIGNW
	RCALL __DIVW21U
	BRTC __DIVW211
	RCALL __ANEGW1
__DIVW211:
	RET

__MODW21U:
	RCALL __DIVW21U
	MOVW R30,R26
	RET

__MODW21:
	CLT
	SBRS R27,7
	RJMP __MODW211
	NEG  R27
	NEG  R26
	SBCI R27,0
	SET
__MODW211:
	SBRC R31,7
	RCALL __ANEGW1
	RCALL __DIVW21U
	MOVW R30,R26
	BRTC __MODW212
	RCALL __ANEGW1
__MODW212:
	RET

__CHKSIGNW:
	CLT
	SBRS R31,7
	RJMP __CHKSW1
	RCALL __ANEGW1
	SET
__CHKSW1:
	SBRS R27,7
	RJMP __CHKSW2
	NEG  R27
	NEG  R26
	SBCI R27,0
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSW2:
	RET

__GETW1P:
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	RET

__GETW1PF:
	LPM  R0,Z+
	LPM  R31,Z
	MOV  R30,R0
	RET

__PUTPARD1:
	ST   -Y,R23
	ST   -Y,R22
	ST   -Y,R31
	ST   -Y,R30
	RET

__BSTB1:
	CLT
	TST  R30
	BREQ PC+2
	SET
	RET

	.equ __scl_bit=0
	.equ __sda_bit=1
	.equ __i2c_port_scl=0x12
	.equ __i2c_dir_scl=__i2c_port_scl-1
	.equ __i2c_pin_scl=__i2c_port_scl-2
	.equ __i2c_port_sda=0x12
	.equ __i2c_dir_sda=__i2c_port_sda-1
	.equ __i2c_pin_sda=__i2c_port_sda-2

_i2c_init:
	cbi  __i2c_port_scl,__scl_bit
	cbi  __i2c_port_sda,__sda_bit
	sbi  __i2c_dir_scl,__scl_bit
	cbi  __i2c_dir_sda,__sda_bit
	rjmp __i2c_delay2

_i2c_start:
	cbi  __i2c_dir_sda,__sda_bit
	cbi  __i2c_dir_scl,__scl_bit
	clr  r30
	nop
	sbis __i2c_pin_sda,__sda_bit
	ret
	sbis __i2c_pin_scl,__scl_bit
	ret
	rcall __i2c_delay1
	sbi  __i2c_dir_sda,__sda_bit
	rcall __i2c_delay1
	sbi  __i2c_dir_scl,__scl_bit
	ldi  r30,1
__i2c_delay1:
	ldi  r22,5
	rjmp __i2c_delay2l

_i2c_stop:
	sbi  __i2c_dir_sda,__sda_bit
	sbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay2
	cbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay1
	cbi  __i2c_dir_sda,__sda_bit
__i2c_delay2:
	ldi  r22,10
__i2c_delay2l:
	dec  r22
	brne __i2c_delay2l
	ret

_i2c_read:
	ldi  r23,8
__i2c_read0:
	cbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay1
__i2c_read3:
	sbis __i2c_pin_scl,__scl_bit
	rjmp __i2c_read3
	rcall __i2c_delay1
	clc
	sbic __i2c_pin_sda,__sda_bit
	sec
	sbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay2
	rol  r30
	dec  r23
	brne __i2c_read0
	tst  r26
	brne __i2c_read1
	cbi  __i2c_dir_sda,__sda_bit
	rjmp __i2c_read2
__i2c_read1:
	sbi  __i2c_dir_sda,__sda_bit
__i2c_read2:
	rcall __i2c_delay1
	cbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay2
	sbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay1
	cbi  __i2c_dir_sda,__sda_bit
	rjmp __i2c_delay1

_i2c_write:
	ldi  r23,8
__i2c_write0:
	lsl  r26
	brcc __i2c_write1
	cbi  __i2c_dir_sda,__sda_bit
	rjmp __i2c_write2
__i2c_write1:
	sbi  __i2c_dir_sda,__sda_bit
__i2c_write2:
	rcall __i2c_delay2
	cbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay1
__i2c_write3:
	sbis __i2c_pin_scl,__scl_bit
	rjmp __i2c_write3
	rcall __i2c_delay1
	sbi  __i2c_dir_scl,__scl_bit
	dec  r23
	brne __i2c_write0
	cbi  __i2c_dir_sda,__sda_bit
	rcall __i2c_delay1
	cbi  __i2c_dir_scl,__scl_bit
	rcall __i2c_delay2
	ldi  r30,1
	sbic __i2c_pin_sda,__sda_bit
	clr  r30
	sbi  __i2c_dir_scl,__scl_bit
	rjmp __i2c_delay1

_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	wdr
	__DELAY_USW 0x7D0
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

;END OF CODE MARKER
__END_OF_CODE:
